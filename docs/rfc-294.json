{
  "series": "Request for Comments",
  "number": "294",
  "howpublished": "RFC 294",
  "publisher": "RFC Editor",
  "doi": "10.17487/RFC0294",
  "url": "https://www.rfc-editor.org/info/rfc294",
  "title": "The Use of \"Set Data Type\" Transaction in File Transfer Protocol",
  "pagetotal": "2",
  "year": "1972",
  "month": "jan",
  "body": "\n\n\n\n\n\nNetwork Working Group                             25 January 1972\nRFC 294                                        Abhay Bhushan, MIT\nNIC 8304\nCategories: D.4, D.5, and D.7\nUpdates: RFC 265\n\n\nThe Use of 'Set Data Type' Transaction in File Transfer Protocol\n----------------------------------------------------------------\n\n\n    As mentioned in RFC 265, the opcode of '00' is set aside for the\nclarify the use of 'set data type' in file transfer operations.\n\n\n    In many systems such as Multics at MIT, there is no provision to\nidentify the type of data (i.e., ASCII or numeric) stored in files.\nThe manner in which the data is handled is context dependent.  ASCII\ncharacters are stored as four 9-bit characters per 36-bit word, right\njustified with left most bit as zero.  As efficient conversion\nprograms exists in Multics for conversion of data from Multics' ASCII\ninto Network ASCII, it would be useful for a user to be able to\ninstruct the Multics server to convert data into Network ASCII in\nretrieve operations.  It is suggested that the 'set data type'\ntransaction be used for this purpose.\n\n\n    The 'set data type' transaction preceding a retrieve request\nshould be interpreted by a server to mean that the user wants to\nreceive his data in that form.  If the server is unable to convert the\ndata into the desired form, it should return a 'set data type' of\n\n\n       [ This RFC was put into machine readable form for entry ]\n       [ into the online RFC archives by BBN Corp. under the   ]\n       [ direction of Alex McKenzie.                   12/96   ]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                                                [Page 1]\n\f\nNetwork Working Group                             25 January 1972\nRFC 294                                        Abhay Bhushan, MIT\n\n    The following examples should clarify the use of 'set data\ntype' transactions.\n\n1.        USER                                             SERVER\n          ----                                             ------\n                    Set data type '02' (Network ASCII)\n                    -------------------------------------\u003e\n                    Store File X\n                    -------------------------------------\u003e\n                    File X (in Network ASCII)\n                    -------------------------------------\u003e\n                    End of File\n                    -------------------------------------\u003e\n                    Acknowledge\n                    \u003c-------------------------------------\n\n                    Retrieve File X\n                    -------------------------------------\u003e\n                    File X in Network ASCII\n                    \u003c-------------------------------------\n                    End of File\n                    \u003c-------------------------------------\n\n2.        USER                                             SERVER\n          ----                                             ------\n                    Set data type'03' (EBCDIC)\n                    -------------------------------------\u003e\n                    Retrieve File Y\n                    -------------------------------------\u003e\n                    Set data type '00' (\"bit-stream\")\n                    \u003c-------------------------------------\n                    File Y as stored (no conversion)\n                    \u003c-------------------------------------\n                    End of File\n                    \u003c-------------------------------------\n\n                    Set data type '02' (Network ASCII)\n                    -------------------------------------\u003e\n                    Retrieve File Z\n                    -------------------------------------\u003e\n                    File Z in Network ASCII\n                    \u003c-------------------------------------\n                    End of File\n                    \u003c-------------------------------------\n\n\n\n\n                                                                [Page 2]\n\f\n"
}