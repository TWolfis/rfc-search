{
  "series": "Request for Comments",
  "number": "144",
  "howpublished": "RFC 144",
  "publisher": "RFC Editor",
  "doi": "10.17487/RFC0144",
  "url": "https://www.rfc-editor.org/info/rfc144",
  "title": "Data sharing on computer networks",
  "pagetotal": "6",
  "year": "1971",
  "month": "apr",
  "day": "1",
  "body": "\n\n\n\n\n\nNetwork Working Group                                        A. Shoshani\nRequest for Comments: 144                                            SDC\nNIC: 6729                                                  30 April 1971\n\n\n                   Data Sharing on Computer Networks\n\n   The enclosed is an introductory paper for the meeting which will be\n   held in Atlantic City as part of the ARPA Network meetings.  The\n   schedule for the meeting will be published soon by Steve Crocker.\n\n   The Agenda of the meeting will include:\n\n      a.  Presentation of the introductory paper.\n      b.  Open discussion to exchange comments and ideas.\n      c.  Attempt some recommendations.\n      d.  Possibly set up a committee of interested people.\n\n   If you have interest in the subject please plan to attend.\n\nINTRODUCTION\n\n   One of the benefits expected from the use of Computer Networks is the\n   sharing of data among users of the system.  This paper is an attempt\n   to classify the issues involved, discuss some approaches that might\n   be taken to achieve the goal of facilitating data sharing and to\n   point out some advantages and disadvantages of these approaches.\n\nCONSIDERATIONS\n\n   In the process of selecting an approach one has to consider the\n   following issues:\n\n      1. Does the approach provide the use of one language to access all\n         data on the network?\n\n      2. Does the approach facilitate sharing of existing data created\n         and manipulated by existing data management systems?\n\n      3. Does the approach encourage users to share data and use the\n         facility provided?  How evolutionary is the approach?\n\n      4. Could a failure of one node in the network cause the failure of\n         the data sharing facility?\n\n      5. Does the approach promote or hinder further development of data\n         management systems?\n\n\n\n\nShoshani                                                        [Page 1]\n\f\nRFC 144            Data Sharing on Computer Networks       30 April 1971\n\n\n      6. What are the implementation considerations?\n\n      7.  What are speed considerations?\n\nPOSSIBLE APPROACHES\n\n      1. Centralized data management system (CDMS).\n\n         This approach is consistent with the idea that a Computer\n         Network eventually will evolve into a collection of specialized\n         service nodes, where each node would perform a specific\n         function well.  Users will use services on nodes according to\n         their needs.  For example, one node could be a PL/I machine\n         (possibly a microprogrammed machine to perform PL/I compilation\n         efficiently), another node could be a \"number cruncher\" for\n         parallel-structured problems (ILLIAC IV), etc.  In the same way\n         there will be a node responsible for all data management needs\n         for the network.\n\n         Depending on the assumptions made one of two ways can be\n         chosen:\n\n         a. As assumption that we must be able to share all data,\n            implies that the same data management system can create and\n            manipulate this data, and therefore must perform all the\n            functions required of a data management system, regardless\n            of the particular use.  It is generally agreed that such a\n            task is monumental and impractical (if not impossible),\n            since different data management systems are designed to\n            perform specific functions well on the expense of degraded\n            performance of other functions (e.g., fast retrieval of\n            large files, limited updating capabilities).\n\n         b. The assumption is made that users will share only data from\n            the same file on a particular data management system.  In\n            this case one can implement different data management\n            services for different tasks, but put them all on the same\n            node to provide a data management service to the Network\n            users.  This approach can still use one common language to\n            access these services.  This is apparently the approach\n            taken by CCA as indicated in NIC memo 5791.\n\n      2. Standardized data management system (SDMS).\n\n         In this approach a particular data management system is adopted\n         to be implemented on all nodes.  This provides for a\n         standardized data management language as well as an identical\n         logical data structures.  Alternatively, one can choose a set\n\n\n\nShoshani                                                        [Page 2]\n\f\nRFC 144            Data Sharing on Computer Networks       30 April 1971\n\n\n         of data management systems to be implemented on all nodes, then\n         be able to share information manipulated by the same data\n         management system on different nodes.  This approach has many\n         drawbacks as will be discussed later.\n\n      3. Integrated data management system (IDMS).\n\n         This approach suggests the integration of local (to the node)\n         data management systems and local data (files) through the use\n         of appropriate interfaces and a common data management\n         language.\n\n         Under this category there may be different approaches depending\n         on the function of the interfaces:\n\n         a. There is an interface module in every node for every local\n            data management system.  The interface performs a dual\n            function:  on the way out--it issues requests in the common\n            language to remote nodes; on the way in--when a request in\n            the common language is received, the interface performs\n            translation from the common language to the local data\n            management language.  From a single request the translation\n            might produce a series of commands in the local language\n            (for example, suppose that the local language permits the\n            specification of one quantifier only, such as \"age\u003c_41.\"\n            Suppose that the request received in the common language\n            specifies \"list all names where age\u003c_41 and children _\u003e5.\"\n            The translation will produce a series of commands of the\n            form:  \"list all names where age \u003c_41,\" \"save the list\n            temporarily,\" \"list all names in temporary file where\n            children\u003e_5\").\n\n         b. Move all local interfaces which were described above into\n            one central node.  This node is now the service node.  It\n            accepts a request in the common language and produces a\n            series of commands to all nodes involved, in their local\n            data management languages.\n\n         c. The local interface accepts the name of a local file (or\n            relevant portion of the file), and sends this file to the\n            requester after performing a translation of the data.  The\n            data can be translated using a technique such as the \"Form\n            Machine\" (described in NIC 5772).  The file is translated\n            from the local data management data structure to the\n            requesters data structure, so that the requester can perform\n            the desired function using his local data management system.\n\n\n\n\n\nShoshani                                                        [Page 3]\n\f\nRFC 144            Data Sharing on Computer Networks       30 April 1971\n\n\n      4. Unified data management system (UDMS).\n\n         This approach suggest the use of a standard interface which is\n         to be part of every data management system on the Network.  The\n         interface has three ends.  One to the user language, one to the\n         particular physical system used and one to the Network.  The\n         interface should be global enough to permit separation of\n         system decisions from user language decisions.  If this\n         interface is standardized on a Network, it will facilitate\n         communication between local data management systems in a\n         unified way, while permitting the development and evolvement of\n         different local data management systems.  (This is a rough\n         description of the approach taken by Barry Wesseler in Utah.)\n\nTHE COMMON LANGUAGE\n\n   It is well known that the design of a language involves a compromise\n   between the ease of use of the language and its capability to express\n   the functions desired.  A try to merge two languages usually results\n   in the worsening of one or both of these considerations.\n\n   For the purpose of having a common language for data management it\n   may be desirable to separate between the above mentioned\n   considerations.  Use natural-language for ease of use, and a formal\n   intermediate language powerful enough to express any functions\n   desired.  This is the approach taken in the development of CONVERSE\n   in SDC [1].  The intermediate language can be as complex as one likes\n   since it is invisible to the user.\n\nDISCUSSION\n\n   Predictions for future use of computers (and therefore computer\n   networks) point out that \"in 1975 we will process mostly data\" [2].\n   Therefore, the problem of sharing data on a computer Network, as well\n   as accessing data from remote nodes in some common language are\n   extremely important.\n\n   If all that is desired is the sharing of data in a file by more than\n   one user, then the CDMS approach is appropriate.  Approach la is\n   impractical, but lb can provide a valuable service.  Selecting this\n   approach does not permit the sharing existing data which was created\n   with existing data management system, unless a restructuring of the\n   data for the CDMS is performed.  This approach does not easily permit\n   the development of new data management systems since the CDMS should\n   stay stable for the Network use.  It does not involve translation of\n   data or languages and therefore should provide good access speed.\n\n\n\n\n\nShoshani                                                        [Page 4]\n\f\nRFC 144            Data Sharing on Computer Networks       30 April 1971\n\n\n   The SDMS approach has many drawbacks.  Selecting it implies the\n   imposition of a particular data management system on all nodes.  It\n   inhibits further development.  It does not permit the sharing of\n   existing information.  The main advantage would be the modularized\n   structure so that the failure of one node cannot cause the failure of\n   the entire system.  Also, because of the standardized approach\n   sharing of data from different nodes does not involve any\n   translation.\n\n   The main advantage of the IDMS approach is that it permits the\n   continued use of existing data management systems with existing data\n   bases associated with them while permitting the sharing of data among\n   the network community of users.  Since it permits the continued use\n   of local data management systems it is the most evolutionary approach\n   and most likely to be accepted by a user of an existing data\n   management system.  There are applications where users on each node\n   on the Network perform mostly local access of data, and less often\n   find it desirable to be able to share data with other nodes.  For\n   example, if hospitals are connected to nodes of a Computer Network,\n   then most of the data about patients is accessed locally, but\n   sometimes it is necessary to access information from other hospitals,\n   such as global statistical information.  The same situation exists\n   for criminal files, local branches of banks, credit bureaus,\n   warehouses, etc.  Approach 3a permits the advantages of\n   modularization, but 3b is easier to implement since no additional\n   interfaces are necessary in the different nodes.  Approach 3c seems\n   hard to implement and can introduce inefficiencies since it involves\n   translation from one data structure (which might be designed for\n   efficiency) to another data structure (which may not be as\n   sophisticated).  It also involves the shipment of large amounts of\n   data across the network.\n\n   The UDMS approach permits the continued development of local systems\n   while facilitating a unified way for Network communication of data\n   requests.  It is not clear at this point whether this approach is\n   practical.\n\n   Other important issues concerning sharing of data on a Computer\n   Network, and which are mentioned in [3] are overlap of information in\n   different files and the possibility of the same information to be\n   contradictory, security and privacy problems, sponsors of a file vs\n   users of a file, and others.\n\n\n\n\n\n\n\n\n\nShoshani                                                        [Page 5]\n\f\nRFC 144            Data Sharing on Computer Networks       30 April 1971\n\n\nACKNOWLEDGMENT\n\n   Discussions with the following people were very valuable:  Al Vorhus,\n   Peggy Karp and others in MITRE, Barry Wesseler in Utah, Gerald\n   Levitt, N. Cohen and others in RAND, Clark Weissman, and Charlie\n   Kellogg in SDC, Richard Winter of CCA.\n\nREFERENCES\n\n   1. Kellogg, C. \"A Natural Language Compiler for Online Data\n      Management.\" Fall Joint Computer Conference Proceedings, Vol. 33,\n      part I, 1968.  pp. 473-492\n\n   2. Clamons, Eric H. \"Introductory Remarks to Data Base Management\n      Seminar.\" Proceedings of Workshop on Networks of Computers (NOC-\n      1969) NSA pp. 89-90\n\n   3. Hicken, George \"Data Base Confrontation in an Information\n      Network.\" Proceedings of Workshop on Networks of Computers (NOC-\n      1969).  NSA pp. 99-115.\n\n\n         [ This RFC was put into machine readable form for entry ]\n             [ into the online RFC archives by Ryan Kato 6/01]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShoshani                                                        [Page 6]\n\f\n"
}