{
  "series": "Request for Comments",
  "number": "478",
  "howpublished": "RFC 478",
  "publisher": "RFC Editor",
  "doi": "10.17487/RFC0478",
  "url": "https://www.rfc-editor.org/info/rfc478",
  "title": "FTP server-server interaction - II",
  "pagetotal": "2",
  "year": "1973",
  "month": "mar",
  "body": "\n\n\n\n\n\nNetwork Working Group                                        B. Bressler\nRequest for Comments: 478                                      B. Thomas\nNIC: 14947                                                           BBN\n                                                           26 March 1973\n\n                    FTP Server-Server Interaction-II\n\n   At the recent FTP meeting at BBN in Cambridge, one of the topics\n   discussed was that of server-server interaction.  In a typical\n   situation a user (A) conversing with two servers (B,C) is interested\n   in retrieving a file from one site (B) and sending it to the other\n   (C).\n\n\n                          +------+\n                          | USER |\n                          |   A  |\n                         /+------+\\\n                   control        control\n                      /              \\\n                +------+            +------+\n                |SERVER|    DATA    |SERVER|\n                |   B  |-----------\u003e|  C   |\n                +------+            +------+\n\n   The consensus of the meeting was that mechanisms were necessary to\n   make B and C aware of each other and to allow a data connection to be\n   established without forcing each other to queue RFCs for local\n   sockets before they exist.\n\n   The proposed solution to this problem was a command called PASSIVE\n   (PASV?).  The following is our conclusion as to the meaning of the\n   command and how it would be used.\n\n   Third party connections would be established using the SOCK command,\n   which says \"Be prepared to use socket S at Host H to establish your\n   data connection\", and the PASV command which says \"open your data\n   socket for listening, and upon receipt of a transfer command wait for\n   an RFC rather than initiating one.\"\n\n   A positive acknowledgement to the PASV command indicates that the\n   data socket has been opened for listening.  When an RFC for its data\n   socket arrives after it has positively acknowledged a PASV command,\n   the server should respond with a matching RFC to open the data\n   connection (assuming, of course, that the incoming RFC is consistent\n   with the previous SOCK commands, if any).\n\n\n\n\n\nBressler                                                        [Page 1]\n\f\nRFC 478             FTP Server-Server Interaction-II       26 March 1973\n\n\n                            +---------------+\n                            |               |\n                 +----------| USER PROCESS  |----------+\n                 |          |       A       |          |\n               telnet       +---------------+        telnet\n                 |                                     |\n                 |                                     |\n          +-----------+                         +-------------+\n          |           |--------\u003e      ---------\u003e|             |\n          |  SERVER   |data sockets  data socket|   SERVER    |\n          |     B     |    Sb           Sc      |     C       |\n          |           |\u003c--------      \u003c---------|             |\n          +-----------+                         +-------------+\n\n\n   USER A TO SERVER B                     USER A TO SERVER C\n   __________________                     __________________\n\n   A-\u003eB   SOCK  HOST-C  SKT- Sc           A-\u003eC   SOCK  HOST-B  SKT-  Sb\n\n   B-\u003eA       ACK                         C-\u003eA      ACK\n\n   A-\u003eB   PASV\n\n   B-\u003eA       ACK\n\n   A-\u003eB   STOR                            A-\u003eC   RTRV\n\n      1. After the PASV command has been acknowledged, the two data\n         transfer commands can be sent in either order, since the\n         LISTENING action takes place with the PASV command\n\n      2. The user knows the socket numbers Sc and Sb to be the data\n         sockets as specified by the protocol.\n\n      3. Note that it is not essential for a SOCK command to be sent to\n         the same Host to whom a PASV will be sent.  Sending one to him\n         provides security in that the incoming RFC can be checked.\n\n   RB/nlg\n\n\n\n\n          [This RFC was put into machine readable form for entry]\n     [into the online RFC archives by Helene Morin, Via Genie 12/1999]\n\n\n\n\n\nBressler                                                        [Page 2]\n\f\n"
}