{
  "series": "Request for Comments",
  "number": "414",
  "howpublished": "RFC 414",
  "publisher": "RFC Editor",
  "doi": "10.17487/RFC0414",
  "url": "https://www.rfc-editor.org/info/rfc414",
  "title": "File Transfer Protocol (FTP) status and further comments",
  "pagetotal": "5",
  "year": "1972",
  "month": "dec",
  "body": "\n\n\n\n\n\nNetwork Working Group                                         A. Bhushan\nRequest for Comments: 414                                        MIT-MAC\nUpdates: RFC 354, RFC 385                               29 November 1972\nNIC: 12406\n\n\n        FILE TRANSFER PROTOCOL (FTP) STATUS AND FURTHER COMMENTS\n\n   A number of HOSTs have working server and user FTPs now.  The\n   following reflects the status of FTP implementations to the best of\n   my knowledge:\n\n      BBN(A and B), SRI-ARC, UTAH, CASE, USC-ISI, CCA, MIT-AI MIT-\n      Mathlab, MIT-DMCG, CMU, AMES-67, and SU-AI have fully functionning\n      server and user FTPs.\n\n      MIT-Multics has user and server FTPs but the server does not\n      listen on socket 3 (it can be started by normal login and the\n      command ftp_server).  UCSB will soon have user and server FTP's.\n\n   The servers at all the TENEX systems are more or less identical\n   (developed by Bob Clements at BBN).  The servers at MIT-AI and MIT-ML\n   are also identical (developed by Pitts Jarvis of MAC).  Others\n   currently involved with FTP include Arvola Chan (AC@MIT-DMCG), Ken\n   Pogran (Multics), Greg Hicks (HICKS@UTAH), Wayne Hathaway (AMES-67),\n   Ralph Gorin (SU-AI), Rick Werme (CMU), and Ron Stoughton (UCSB).\n\n   The User-FTP or the user interface to FTP is where desirable and\n   interesting features can be put in.  An example of such a features is\n   the BBN (and other TENEXes) \"SNDMSG USER@HOST\" feature which allows a\n   local user to send messages (or mail) to other network users.  If the\n   remote host is not up, the message is stored as \"--UNSENT-MAIL--\n   USERHOST\" in the user's directory and a background job periodically\n   checks for such files to send mail.  MIT-AI and MIT-ML have a \"TRANS\"\n   command which allows convenient transfer of files.  At MIT-DMCG we\n   have developed under the \"CALICO\" subsystem, generalized commands\n   which allow local users to send mail, copy files efficiently, and\n   list users and directories over the network in a manner similar to\n   local usage (that is without having to explicitly connect, login, and\n   send commands to a remote HOST).  We also allow TELNET, FTP, and RJS\n   users to automatically \"login\" and perform other command sequences\n   from an \"initial\" file.\n\n   It should be noted that file transfer between PDP-10's in \"Image 36\"\n   is an order of magnitude faster (and more efficient) than in \"ASCII\n   8\".  Note also that it is useful to provide a \"Quote\" or \"talk\" mode\n   in user-FTP, to enable a user to input commands directly to the FTP\n   server (i.e. commands not implemented in user-FTP).  It is desirable\n\n\n\nBhushan                                                         [Page 1]\n\f\nRFC 414             FTP Status and Further Comments        November 1972\n\n\n   that user and server FTP features and desirable modes of usage be\n   documented and reported via the RFC mechanism.\n\n   The following suggestions and additions pertain to the File Transfer\n   Protocol as stated in NWG/RFC 354 and NWG/RFC 385.  After receiving\n   comments to this RFC, I will have the three RFC's combined into a\n   single document and have it issued as the ARPANET Official File\n   Transfer Protocol, very soon.  It should however be noted that FTP is\n   an open-ended protocol with room for experimentation.  New commands,\n   reply codes, data representation types, and file structures may be\n   defined in future.  If two sites agree, they can define their own\n   experimental set of commands, data types, file structures, and/or\n   transfer modes.  Such additions to the protocol should be well\n   documented and clearly specified so that other sites can also make\n   use of the same.\n\n   1) The FTP assumes line-at-a-time interaction with local acho.  The\n      server is not obliged to provide remote echo and may ignore TELNET\n      control characters.  A server however should not give error or bad\n      response on receiving TELNET control characters.\n\n      The server does not explicitly provide any editing capability such\n      as character delete or line kill characters.  All editing is\n      assumed to be local.  TIP users should use FTP in line mode and\n      send both \u003cCR\u003e and \u003cLF\u003e (by TIP commands @T O L and @I L).  In\n      such a mode the TIP user can flush his current input line by the\n      flush command (@F).\n\n      The server should respond to the TELNET \"SYNCH\" by flushing the\n      current command line and waiting for user input such as an \"ABOR\"\n      command.  Other commands such as \"BYE\" or \"STAT\" may also\n      constitute an acceptable input.\n\n   2) Commands such as \"STAT\" which will produce more than one line of\n      output over the TELNET connection, require some way of positively\n      indicating the end of status information.  It is proposed that a\n      \"200 status complete\" reply give a positive indication for end of\n      status information.  The reply to STAT should begin with a line\n      starting with 1xx (where x=digit), with the following lines not\n      having a digit as their first character, and the status ending\n      with the 200 reply.  (Note that the requirement of three spaces is\n      dropped in favour of the less restrictive requirement of the first\n      character not being a digit.)  This change would make operations\n      much easier for both user and server FTPs.\n\n   3) A reminder that BYE\u003cCR\u003e\u003cLF\u003e is legal.  A space after a command\n      name is not required if there is a null argument.\n\n\n\n\nBhushan                                                         [Page 2]\n\f\nRFC 414             FTP Status and Further Comments        November 1972\n\n\n   4) The following response are proposed to the \"STAT\" and \"LIST\"\n      commands (this was not clearly specified specially for the null\n      argument case).  Responses to \"STAT\" and \"LIST\" shall always be\n      over the TELNET and Data connections, respectively.  The \"LIST\"\n      command with null argument should produce a list of files in\n      user's current working or default directory.  The \"STAT\" command\n      with null argument should (as suggested by Wayne Hathaway) produce\n      tha status of all file transfer parameters (user, byte, size, data\n      type, transfer mode, and file structure) if used between file\n      transfers (i.e. no transfer in progress).  If STAT is sent during\n      a file transfer operation (accompanied with TELNET synch), the\n      server should respond with the status of the operation in\n      progress.  If the argument of the \"LIST\" and \"STAT\" commands is a\n      pathname, then a list associated with that pathname should be\n      sent.\n\n   5) Two new commands are hereby proposed.  First is a \"HELP\" command\n      which should send to the user helpful hints about using the server\n      and its implementation status (news).  The information will be\n      sent over the TELNET connection starting with type 100 reply and\n      ending with  a type 200 reply (completion).  It is suggested that\n      the use of this command and the \"MAIL\" and \"BYE\" commands be\n      allowed without the user having to \"login\" (i.e., supplying valid\n      user, password, and account).\n\n      The other command (suggested by Bob Clements) is a new directory\n      listing command called \"NLST\" which sends only the names of files\n      (as valid pathname strings separated by CRLF) and no other useful\n      but confusing information, so that it is possible to copy a whole\n      directory automatically using this command and the store and\n      retrieve commands.  The syntax and format of this command is\n      identical to the \"LIST\" command (for some HOSTs they may be\n      identical commands).\n\n   6) Although the minimum implementation does not require the TYPE,\n      BYTE, MODE, and STRU commands, it is suggested that these commands\n      be accepted with the default values by even those having a minimum\n      implementation.  This would avoid some of the \"ugly\" error\n      responses to input such as \"TYPE A\" and \"STRU F\", when these are\n      perfectly acceptable to the server.\n\n   7) In using the \"MLFL\" and \"LIST\" commands, it is the user's (or\n      user-FTP's) responsibility to ensure that the TYPE is ASCII (8-bit\n      bytes).  If the TYPE is other than ASCII, the server may send an\n      error response and refuse the command.  The user (or user-FTP)\n      should therefore send the server \"TYPE A\" command if type is other\n      than ASCII before sending the \"MLFL\" or \"LIST\" type commands.\n\n\n\n\nBhushan                                                         [Page 3]\n\f\nRFC 414             FTP Status and Further Comments        November 1972\n\n\n   8) A useful suggestion is to allow multiple user names in the \"MAIL\"\n      and \"MLFL\" commands.  Often a user wishes to send the same mail to\n      a number of users at particular site.  It would be very convenient\n      if he can do this by doing a single transfer and command.  It is\n      strongly urged that server sites implement this option.\n\n   9) Another suggestion that has been made is to standardize pathname\n      syntax in FTP.  It appears that subdirectories will soon be\n      introduced in the TENEX system.  Perhaps that will have some\n      bearing on the standard pathname syntax.  The requirements of any\n      pathname standard scheme are that it should allow convenient use\n      of local pathname conventions, and not conflict with it.  A\n      reasonable proposal seems to be to have the standard pathname\n      start with a special character such as \"\u003e\" (as in Multics), and to\n      use this special character to separate the elements of a pathname.\n      If the special character happens to ba valid part of a pathname\n      element, use the literal quote convention of \"'\u003e\" (single quote to\n      precede the special character).\n\n      Examples of pathnames under this convention would be:\n\n         \u003eudd\u003eCNet\u003eDoe\u003efoo_bar                       (for Multics)\n         \u003eDSK\u003eJFD\u003efoo bar                            (for ITS)\n         \u003eDOE\u003efoo.bar1    (for TENEX)\n\n   10) The requirement of account numbers by TENEXes has caused a\n       certain problems for automatons using FTP, under the present\n       reply code sequences.  Therefore two new reply codes are defined\n       to handle the account requirement.  A reply code of \"331 Enter\n       Account\" shall be used if an account is required as part of user\n       \"login\" sequence.  A reply code of \"433 Cannot store files\n       without valid account.  Enter account.\"  be used if an account is\n       required only for a particular operation such as store.\n\n   11) The following suggestions made by Wayne Hathaway (RFC\n       forthcoming) seem reasonable and should be included in the\n       Protocol:\n\n       i) The following End-of-Record condition should be explicit on\n       last record, and not implied in an End-of-File.  This change\n       would simplify server implementation and improve reliability\n       (better error control).\n\n       ii) Implementors of user-FTP's should note that it is trivial for\n       them to implement record structures in ASCII type and Stream mode\n       (the default CRLF convention for end-of-record).  All user-FTPs\n       should allow store or retrieve of record structured files with\n       ASCII type and stream mode.\n\n\n\nBhushan                                                         [Page 4]\n\f\nRFC 414             FTP Status and Further Comments        November 1972\n\n\n       iii) It is possible to send record strutured \"print-file\" types\n       (in addition to ASCII type) in either stream or text modes.  (RFC\n       354 was not clear on this issue).\n\n       iv) The TELNET synch mechanism should be extended to other\n       commands such as BYE and STAT in addition to ABOR.\n\n       v) Comments are invited on the desirability of NOOP, CLSE, and\n       SRVR commands.  In my opinion a STAT command with null argument\n       serves the purpose of NOOP (to see if server is still alive), and\n       BYE serves the purpose of CLSE (USER command should be used to\n       change user name).  SRVR is a useful command.\n\n   12) Bob Clements raised the old issued of error detection and control\n       again.  To handle this we can define two new descriptor codes in\n       the Block mode, one that signals start of block check, and the\n       other that indicates end of block check (and includes the block\n       check bytes).  These codes may be ignored by any site not wishing\n       to implement the error detection scheme.  Your comments on the\n       error check scheme and the desirability of its inclusion in FTP\n       are solicited.\n\n\n            [This RFC was put into machine readable form for entry]\n       [into the online RFC archives by Helene Morin, Via Genie, 12/99]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBhushan                                                         [Page 5]\n\f\n"
}