{
  "series": "Request for Comments",
  "number": "412",
  "howpublished": "RFC 412",
  "publisher": "RFC Editor",
  "doi": "10.17487/RFC0412",
  "url": "https://www.rfc-editor.org/info/rfc412",
  "title": "User FTP Documentation",
  "pagetotal": "10",
  "year": "1972",
  "month": "nov",
  "body": "\n\n\n\n\n\nWork Information Center # 12404                                 G. Hicks\nRequest for Comments # 412                                      Utah\n                                                               27-Nov-72\n\n\n\n                         User FTP Documentation\n\n     The attached document is the HELP file for the Utah-10\nimplementation of the User FTP Process. This is what the user has\ntyped on his console when he types 'HELP\u003ccr\u003e', and as such is the only\ndocumention produced to date.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                                                [Page 1]\n\f\nUser FTP Documentation                          Detailed Command Listing\n\n\n                         FTP User Documentation\n                           November 27, 1972\n\n\nI. Control Characters\n\n      There are several control characters that have meaning to the FTP\nProcess. First, the abort character is \u003ccontrol-z\u003e (SUB), next for\nediting, only \u003ccontrol-r\u003e, \u003ccontrol-a\u003e, \u003ccontrol-h\u003e, \u003ccontrol-v\u003e,\n\u003ccontrol-w\u003e, \u003calt-mode\u003e, \u003ceol\u003e, \u003cspace\u003e, \u003ccontrol-x\u003e and \u003crub-out\u003e have\nany meaning, \u003ccontrol-a\u003e (SOH) and \u003ccontrol-h\u003e (BS) are the character\ndelete keys. \u003ccontrol-w\u003e is the word delete character, Note: When dowing\nthe ' funktion, this character will delete the entire line typed.\n\u003ccontrol-v\u003e says take the next character literally. \u003calt-mode\u003e (ESC)\nterminates the command giving helpful noise words, \u003ceol\u003e and \u003cspace\u003e are\nterminators also. These last two will give no command completion or\nnoise words. All three echo as a space however.  \u003ccontrol-x\u003e (CAN) and\n\u003crub-out\u003e (DEL) are the command abort characters. \u003ccontrol-r\u003e (DC2) will\nretype the line as the command interpreter sees it. When using the ?  as\na prompter, for initial commands, it will type-out all commands that\nbegin with that particular character string.  If it is typed in a sub-\ncommand field, it will type out the prompt message only if it is the\nfirst character typed. At all other times, it will be accepted as part\nof the typed string.\n\n\nII. General Information\n\n      The FTP user process is designed to make transferring files from\none host on the ARPANET to another much easier than it has been up until\nnow. To this end, the command language was designed to be as natural as\npossible.\n\n      The command interpreter is, of course, part of this idea.\nTherefore, to help the user as much as possible, there are several ways\nto find out what is expected in the form of commands, file-names, user-\nnames, etc. When the user has typed nothing, typing a ? will cause the\ninterpreter to type out all the commands that are available to the user.\nIf the user has typed anything at all, then it will respond with all\ncommands that begin with the particular character string.\n\n      So that the command language was as easy to learn as possible, the\ncommand interpreter will 'see' nothing that is not part of a legal\ncommand. If the user types anything that is not expected, the character\nis not echoed and a bell is echoed instead.\n\n\n\n\n\n\n                                                                [Page 2]\n\f\nUser FTP Documentation                          Detailed Command Listing\n\n\nIII. Brief Command Listing\n\n      The commands that are expected and their syntax are listed below.\nNOTE: UPPER and lower case letters are identical.\n\n\n\u003chost-name\u003e\nD\u003cdecimal host number\u003e\n\u003coctal host number\u003e\n;\u003cany string\u003e (useful for comments to a person that is\nlinked to you)\nMODE \u003cmode name\u003e\nRETREIVE \u003cremote file\u003e (to) \u003clocal file\u003e\nGET \u003cremote file\u003e (to) \u003clocal file\u003e\nSEND \u003clocal file\u003e (to) \u003cremote file\u003e\nSTORE \u003clocal file\u003e (to) \u003cremote file\u003e\nAPPEND \u003clocal file\u003e (to) \u003cremote file\u003e\nRENAME \u003cremote file\u003e (to be) \u003cnew remote file name\u003e\nDELETE \u003cremote file\u003e\nBYE\nCOPY \u003cdirection descriptor\u003e \u003cfile group\u003e (to) \u003cfile group\u003e\n     (see detailed description below)\nLOGOUT\nDDT\nLIST \u003cfile group\u003e (to file) \u003clocal file name\u003e\nSOCKET (NOT IMPLEMENTED YET)\nALLOCATE \u003cdecimal number of bytes\u003e\nQUIT\n   foreign host)\nHOST \u003cany valid ARPANET host name or number\u003e\nUSER \u003cremote user name\u003e\nPASSWORD \u003cpassword for remote user's name\u003e\nACCOUNT \u003cstring or number for remote user's name\u003e\nSTATUS (see description of status command below)\nLOGIN \u003cuser name\u003e \u003cpassword\u003e \u003coptional account\u003e \u003cto host\u003e\nBYTE \u003cdecimal byte size\u003e\nTYPE \u003ctype descriptor\u003e\nSTRUCTURE \u003cstructure descriptor\u003e\nTENEX\nASCII\nVERBOSE\n\n\n\n\n\n\n\n\n\n\n                                                                [Page 3]\n\f\nUser FTP Documentation                          Detailed Command Listing\n\n\nIV. Detailed Description of the Commands\n\n         The commands and their syntax are described in greater detail\n   blow. The words in parenthesis are noise words.  NOTE: upper and\n   lower case are identical. Unless otherwise noted in the command\n   description, all commands described are implemented.\n\n\u003chost name\u003e or \u003chost number\u003e\n   Performs the ICP to the indicated host with explanatory remarks if\n   the ICP is not possible.\n\nMODE \u003cmode descriptor\u003e\n   Sets the mode of the data transfer connection according to the\n   following sub-commandos:\n\n   STREAM: bit stream, end of file is indicated by the data connection\n   closing.\n\n   BLOCK: formats (or expects formatted) data into blocks.\n\n   TEXT: Sends or retreives text. Forces TYPE ASCII and BYTE 8. This\n   command sends the appropiate commands to the foreign host, then sends\n   the data using the TELNET codes for EOR and EOF as per the FTP\n   Protocol.\n\n   HASP: compress data.\n\n   NOTE: Of the above sub-commands, only MODE STREAM and MODE TEXT are\n   implemented at present.\n\nRETREIVE (file) \u003cremote file\u003e (to file) \u003clocal file name\u003e\n   Sends the retr command to the remote server, sets up the data\n   connection according to any previous MODE, TYPE, BYTE commands. Puts\n   the data coming on the the data connection into the local file\n   specified.\n\nGET (file) \u003cremote file name\u003e (to file) \u003clocal file name\u003e\n   See description of RETREIVE.\n\nSTORE (local file) \u003cfile name\u003e (onto file) \u003cremote file\u003e\n   Accepts a local file name, does the formatting according to any\n   previous BYTE, TYPE, MODE commands and sends it to the foreign host.\n\nSEND (local file) \u003cfile name\u003e (onto file) \u003cremote file\u003e\n   See description of STORE.\n\nAPPEND (local file) \u003cfile name\u003e (to remote file) \u003cremote file\u003e\n   Does the same as a store except that the file is appended to the\n\n\n\n                                                                [Page 4]\n\f\nUser FTP Documentation                          Detailed Command Listing\n\n\n   remote file rather that just writing over the file.\n\nRENAME (existing file) \u003cfile name\u003e (to be) \u003cnew file name\u003e\n   Accepts the name of n old remote file and asks for a new file name,\n   sends the appropiate commands and names to the foreign host causing\n   the old file name to be replaced by the new file name.\n\nDELETE (file) \u003cfile name\u003e\n   This command causes the remote file to be marked for deletion. It\n   does require that the command be confirmed twice.\n\nBYE\n   Takes no arguments. Causes the server to terminate the current\n   session with the user. The program will return to the EXEC MODE when\n   the command has been acknowledged by the remote server.\n\nCOPY\n   This command does a variety of things. First. it allows the user do\n   describe a file group. EG: *.mac, *.sav, etc.  The *'s may be for\n   foreign files or local files according to the following sub-commands:\n\n  REMOTE (remote file group) \u003cremote file grouping\u003e:\n   Causes the user FTP to ask the server for the file in \u003cremote file\n   grouping\u003e. Then asks the user to specify where each file is to go. A\n   typical sequence might look like the following:\n\n   !copy remote (remote file group) ftp.*\n   Please be patient. Getting remote file names.\n   Got them.\n   !copy (file) \u003cHICKS\u003eFTP.MAC;| (to file) ftp.mac [New file]\n   [Messages and etc. follow with the above line being\n   repeated for each file in the remote file group.]\n\n  LOCAL (local file grouping) \u003clocal file group\u003e:\n   Causes the user FTP to accept the file group specified, and send the\n   file names to the server leaving off the \u003cdirectory name\u003e and version\n   number of the local file. The user may not specify *'d devices of *'d\n   directorys. A line for this might look like the following:\n   !copy local (local file group) ftp.*;*\n    [Confirm]\n\n   Next, if the user does not specify any *'s for either the remote file\n   or the local file, this command is exactly like the RETREIVE or STORE\n   command described earlier.\nLOGOUT\n   Takes no arguments. See description of BYE command for more details.\n\n\n\n\n\n                                                                [Page 5]\n\f\nUser FTP Documentation                          Detailed Command Listing\n\n\nRESET\n   Takes no arguments. Causes the user process to close all connections\n   (if necessary), all files (if necessary), and reset the programs\n   parameters to their defaults.\n\nDDT\n   If DDT is loaded, just starts DDT. If DDT is not loaded, it will load\n   DDT and then start it at its initial start-up location.  This command\n   will casue an abnormal interrupt if DDT is not found.\n\nLIST (file group) \u003cremote file group\u003e (to file) \u003clocal file\u003e\n   Esentially causes the remote server to do a directory command. The\n   default is *.* and since the listing will come on the data connection,\n   the user must specify a local file. A sample line might look like the\n   following: !list (file group) *.* (going to file) tty: [ok]\n\nSOCKET \u003csocket descriptor\u003e\n   Will accept a socket descriptor for the data to go to or come from. At\n   present it is NOT IMPLEMENTED because we have not decided on the\n   format of the command to the server.\n\nALLOCATE \u003cdecimal number of bytes\u003e\n   Accepts as its argument a decimal number of bytes (of the specified\n   size) telling the server how many bytes of storage to reserve for the\n   next store of append.\n\nQUIT\n   Takes no arguments. Returns the console to the EXEC. The program may\n   be continued with no harm done.\n\n   This command allows the user to send arbitrary strings to the remote\n   server. At present, when talking to a TENEX site, it is only useful\n   for doing the 'MAIL' command.  Other sites may have help commands of\n   whatever.\n\nHOST \u003cARPANET host name of number\u003e\n   Allows the user to specify an ARPANET host without actually connecting\n   to the host. This specified host will be the ont that is connected to\n   (or the attempt will be made anyway) when the next 'immediate' command\n   is executed. EG: LOGIN, RETREIVE, STORE, LIST, etc.\n\nUSER (name is) \u003cremote user's name\u003e\n   Sets the user name for the remote system. Useful for systems that\n   require no password for the specified name.  Does nothing until an\n   user must be 'logged into' the remote system. The programm knows this\n   and so will not let the user execute any commands (RETREIVE, STORE,\n   APPEND, LIST, STATUS, RENAME, DELETE) until he has at least specified\n   a remote user name. The LOGIN command does this as does this command.\n\n\n\n                                                                [Page 6]\n\f\nUser FTP Documentation                          Detailed Command Listing\n\n\nSTATUS (of the) \u003csub-cmd\u003e (at host) \u003cARPANET host\u003e\n   Accepts as its argument one of the following sub-commands:\n  SERVICE (at host) \u003cARPANET host name or number\u003e: Attempts to\n   perform the ICP to the specified host. Does not disturb any existing\n   connections.\n  \u003cARPANET host name or number\u003e: See description of STATUS SERVICE\n  above.\n\n  STATUS (of file) \u003cremote file group\u003e: Similar to the LIST\n   command described above except that the listing does not gone back on\n   the data connection but on the TELNET connection. See LIST command for\n   more details.\n  \u003cCOMMAND-TERMINATOR\u003e: Just sneds the STAT command.\n   Typically, is good for finding out where your are and perhaps who you\n   are.\n\nPASSWORD (is) \u003cpassowrd for remote user's name\u003e\n   Sets the password for the remote user's name. It is NOT echoed and\n   does nothing until the next 'immediate' command is executed.\n\nACCOUNT (is) \u003caccount number or string\u003e\n   Accepts a string of number that can be charged for any activity the\n   user specifies. EG: STORE, RETREIVE or APPEND. Useful only for systems\n   that require this information of course. Also does nothing until the\n   next immediate command is executed.\n\nLOGIN \u003cuser name\u003e \u003cpassword\u003e \u003coptional account\u003e\n   the format of this command is identical to the TENEX login command. It\n   accepts a user name, password, and an optional account number. If no\n   host has been specified, it will ask for the host to be connected to.\n   This command will cause the ICP to take place if necessary.\n\nBYTE (size is) \u003cdecimal byte size\u003e\n   This command sets the byte size for the data connection.  The default\n   byte size is 8 bytes.\n\nType (is) \u003ctype descriptor\u003e\n   Takes as its argument one of the following subcommands:\n  TENEX: Shorthand that sets TYPE IMAGE and BYTE 36.\n  EBCDIC: Says that the data will be Ebcdic.\n  PRINT: Says that the data is an Ascii print file with ASA vertical\n   format controls.\n  LOCAL: Forces the user and server FTP to accept whatever\n   byte size the user has specified. For the present, this type is\n   treated the same as for IMAGE TYPE.\n  IMAGE: Does the same as LOCAL. Just forces the user and server FTP to\n   accept the specified byte size without doing any translation as is\n   done for ASCII type. For most efficient usage of this command, the\n\n\n\n                                                                [Page 7]\n\f\nUser FTP Documentation                          Detailed Command Listing\n\n\n   matching byte size should be BYTE 36 when using TENEX sites as\n   servers.\n  ASCII: Sets TYPE ASCII and 8 bit bytes. Useful for text files.\n   NOTE: Of the above sub-commands, only PRINT and EBCDIC are not\n   implemented yet.\n\nSTRUCTURE (is) \u003cfile structure descriptor\u003e\n   Accepts as its argument one of the following sub-commands:\n  REDORD: Says the data on the data connection has record\n   structure information contained in it. NOTE: Since TENEX NOT support\n   record structured files per se, this mode only useful for sending text\n   files to or retreiving text files from non-TENEX sites. The \u003cEOL\u003e in\n   these files is converted to the TELNET EOR code for transmission and\n   EOR to \u003cEOL\u003e etc. for reception.\n\n  File: Says the data stream has no record structure information in it.\n\nTENEX\n   See description under TYPE TENEX.\n\nASCII\n   See description under TYPE ASCII.\n\nVERBOSE\n   This command sets the command completion/no completion flag. The\n   program assumes the NO VERBOSE mode and thus does not complete\n   commands when \u003cspace\u003e or \u003ceol\u003e is used as a command terminator It also\n   causes the noise words to be typed if in the verbose mode.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                                                [Page 8]\n\f\nUser FTP Documentation                          Detailed Command Listing\n\n\nV. Sample Session using the FTP\n\n       The following scenario shows some uses of the FTP.\n   Everything that the user types is underlined.\n\n   UTAH-TENEX 1.29.03 EXEC 1.38\n   LOGIN (USER) HICKS (PASSOWRD) (ACCOUNT #) 1200\n   JOB 24 ON TTY2 11-NOV-72 1:51\n   TERMINAL (TYPE IS) 4\n   ftp\n   FTP User Process 1.10 5-NOV-72. Type Help\u003ccr\u003e for help.\n   !login (user) network (password) (account) 4 (to host) case-10\n   CONNECTION IS OPEN TO CASE-10.\n   \u003c CASE-10 FTP Server 1.14.0 - at SAT 11-NOV-72 2:00-EST\n   !tenex ? confirm with carriage return\n    tenex\n   !copy remote (remote group) ftp.*\n    Please be patient. Getting remote file-names.\n    Got them.\n   !copy (file) \u003cNETWORK\u003eFTP.MAC:32 (no file) ftp.mac [new file]\n   \u003c IMAGE retreive of \u003cNETWORK\u003eFTP.MAC;32 startet.\n   \u003c Transfer completed.\n   !copy (file) \u003cNETWORK\u003eFTP.SAV;5 (fo file) FTP.SAV;5 [new version]\n   \u003c IMAGE retreive of \u003cNETWORK\u003eFTP.SAV;5 started.\n   \u003c Transfer completed.\n   !copy (file) \u003cNETWORK\u003eFTP.REL;1 (to file) xxx\n   !copy (file) \u003cNETWORK\u003eFTP.HELP;5 (to file) ftp.help [New version]\n    copy (file) \u003cNETWORK\u003eFTP.HELP;5 (to file) FTP.HELP;1\n   \u003c IMAGE retreive of \u003cNETWORK\u003eFTP.HELP;5 started.\n   \u003c Transfer completed.\n   Done...\n   !usc-isi\n    Closing connections to CASE-10.\n    CONNECTION IS OPEN TO USC-ISI.\n   \u003c USC-ISI FTP Server 1.14.0 - at SAT 11-NOV-72 2:15-PST\n   !log\n   user hicks\n   (password)\n   (account) ? account number or string for remote user's name\n    log\n   (user) hicks\n   (password)\n   (account) |\n   !send (local file) ftp.sav;5 (to remote file) ftp.sav\n   \u003c STORE of \u003cHICKS\u003eFTP.SAV;P777752;a|, IMAGE type, started.\n   \u003c Transfer completed.\n   !cp r acs.mac (to local file) acs.mac [new file]\n   \u003c IMAGE Retreive of \u003cHICKS\u003eACS.MAC;3 started.\n\n\n\n                                                                [Page 9]\n\f\nUser FTP Documentation                          Detailed Command Listing\n\n\n   \u003c Transfer completed.\n   !copy 1 ? Local file group, *'s ok - TENEX sites only,\n    copy 1 ftp.*\n    [Confirm]\n   \u003c Store of \u003cHICKS\u003eFTP.MAC;1;P777752;A1, IMAGE type, Started.\n   \u003c Transfer completed.\n   \u003c Store of \u003cHICKS\u003eFTP.SAV;2;P777753;A1, IMAGE type, Started.\n   \u003c Transfer completed.\n   \u003c copy of \u003cHICKS\u003eFTP.HELP;1;P777752;A1 IMAGE type, Started,\n   \u003c Transfer completed.\n   !bye\n   !\u003c BYE command recieved.\n   \u003c Therefore connection terminated.\n   logout\n   [logout message go here]\n\n\n\n\n\n\n         [ This RFC was put into machine readable form for entry ]\n         [ into the online RFC archives by Gottfried Janik 6/97 ]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                                               [Page 10]\n\f\n"
}