{
  "series": "Request for Comments",
  "number": "327",
  "howpublished": "RFC 327",
  "publisher": "RFC Editor",
  "doi": "10.17487/RFC0327",
  "url": "https://www.rfc-editor.org/info/rfc327",
  "title": "Data and File Transfer workshop notes",
  "pagetotal": "5",
  "year": "1972",
  "month": "apr",
  "day": "1",
  "body": "\n\n\n\n\n\nNetwork Working Group                                         A. Bhushan\nRequest for Comments: 327                                        MIT-MAC\nNIC: 9261                                                 April 27, 1972\n\n\n                 DATA AND FILE TRANSFER WORKSHOP NOTES\n\n   On April 14 and 15, 1972, a Data and File Transfer Workshop was held\n   at M.I.T., Cambridge, Mass.  A list of attendees of the meeting for\n   April 14 and 15 is appended to the notes.  This note attempts to\n   summarize most of the topics discussed and all of the decisions\n   reached at the workshop meeting.\n\n   The following is a summary of the talks and discussions on April 14,\n   1972.\n\n   Steve Crooker discussed a general theory for Network protocols.\n   Protocols transformations should have a unique inverse, and should be\n   transitive.  Transformation to a standard form requires only 2n\n   transformations (n = number of different types of hosts), as compared\n   with n(n-1) transformations with no standard form.  A standard\n   approach is preferable for n \u003e= 3.\n\n   For file transfer, one could define a Network Virtual File Image.\n   There was some discussion on whether it was possible to satisfy the\n   above rules for file structure transformations.  No agreement was\n   reached and the problem was abandoned for the present.\n\n   Further discussion lead to the following formulation of the Workshop\n   goals:\n\n   To come up with data and file transfer protocol/strategy that\n   satisfies the needs of ARPANET users including Maxi-HOSTs, Mini-\n   HOSTs, TIPs, Datacomputer, RJE, and Mailbox users.\n\n      Goals for the protocols/strategy were set as:\n\n      1.  It should preserve the integrity of data.\n\n      2.  It should preserve the integrity of character representation\n          and interpretation.\n\n      3.  It should preserve the integrity of structural information, to\n          the extent conveniently possible.\n\n      4.  It should lead to the development of a Network Virtual File\n          System.\n\n\n\n\nBhushan                                                         [Page 1]\n\f\nRFC 327          Data and File Transfer Workshop Notes        April 1972\n\n\n   Richard Winter discussed the Datacomputer application.  The\n   Datacomputer though usable from terminals directly will not be\n   engineered for direct terminal users, but for use by programs.  In\n   Datalanguage a user can define data and file structure, and also how\n   the file/data is to be transferred.  Using the data language it is\n   possible to transfer entire files, or only the relevant parts of\n   files.  The following is an example of file transfer as currently\n   envisioned in the Datacomputer.\n\n          LOGIN  \u003cuser\u003e \u003cpassword\u003e\n          CREATE  \u003cfile name\u003e \u003cdescription\u003e\n          CREATE  \u003cport name\u003e \u003cdescription\u003e\n          PORT  \u003cport name\u003e \u003cexternal name\u003e\n          \u003cfile name\u003e = \u003cport name\u003e (for transfer to Datacomputer)\n          \u003cport name\u003e = \u003cfile name\u003e (for transfer from Datacomputer)\n          LOGOUT\n\n   (CREATE statements are needed only when the description(s) required\n   are not already on file at the Datacomputer.  A port description can\n   specify a standard \"external name\", thus making a port statement\n   optional also.  \"External name\" is to be a HOST-socket specification.\n   The data transfer is to be in accordance with network data transfer\n   standards.  The File and Port descriptions are to be in\n   Datalanguage.)\n\n   Alex McKenzie discussed the TIP user needs, describing the current\n   capabilities and limitations of TIPs and TIP terminals.  TELNET\n   format is the first choice of TIP users, followed by DTP using the\n   indefinite bit stream mode.  There are two TIPs with magnetic tape\n   systems which are capable of transferring data between them using the\n   current DTP (RFC 264) in the descriptor count mode (utilizing\n   sequence number option).\n\n   Bob Braden discussed the RJS protocol and presented some data on RJS\n   use.  NETRJS is 1% of CCN job load representing 2,000 jobs, 10,000\n   sessions and 1,000 hours connect time in the last 5 months.  Average\n   job input is of the order of 100,000 bits (400 cards), average job\n   output is 700,000 bits (1,000 lines).  Large files have about 10\n   million bits representing about 8-10 minutes of transmission time.\n   The RJS protocol will be defined in a forthcoming document.\n\n   Ray Tomlinson described the CPYNET system BBN is using to transfer\n   files among TENEX systems.  CPYNET commands are ASCII strings with a\n   fixed syntax.  The original connection is closed after a command is\n   accepted, and data is transferred on a new connection using previous\n   socket number, but with possibly a different byte size.  The data\n   transfer rate achieved in CPYNET has been about 10 Kb/s.\n\n\n\n\nBhushan                                                         [Page 2]\n\f\nRFC 327          Data and File Transfer Workshop Notes        April 1972\n\n\n   Abhay Bhushan discussed the evaluation of network protocols and\n   presented some preliminary measurement results.  The evaluation\n   criteria for protocols should include speed (real time delay and\n   transmission rate), efficiency (cpu time or cost), reliability (error\n   rate and failure rate), convenience (ease of use and implementation),\n   and usage (suitability for various application and user classes).\n\n   The parameters that affect speed and efficiency for given system\n   conditions (fixed load, etc.) are:\n\n      1)  Byte size used for NCP connection.\n\n      2)  Average message size used for transmission.\n\n      3)  Data format conversion (e.g., into Network ASCII, DTP Blocks,\n          etc.).\n\n      4)  Buffer size and I/O mode used (unit or block mode, etc.).\n\n      5)  Other protocol constraints (acknowledge, error checking,\n          connection procedure, etc.).\n\n   There was some discussion as to how data and file transfer protocols\n   may be altered to make transfer faster and more efficient by using\n   optimum byte size and minimizing some of the constraints that impose\n   a large overhead.\n\n   The follow up discussions on DTP and FTP lead to a list of discussion\n   and decision items for the next day.  The following is a summary of\n   decisions reached on Saturday, April 15, 1972.\n\n      1.  Separate connections are to be used for data and control\n          information.\n\n      2.  Control connection is to be a \"TELNET\" full-duplex connection\n          (NVT-ASCII), established via the ICP.  Data connections are to\n          be simplex connections established directly.\n\n      3.  The File Transfer and File System commands and their arguments\n          shall be printable ASCII strings, instead of numeric codes, so\n          that they are directly usable by a user at a terminal.  The\n          interaction, however, will be optimized for usage by programs.\n          (indirect use).\n\n      4.  The byte size and user socket for data connection, data\n          representation, and transfer mode to be used in file transfer\n          may be chosen by a user via one or more commands requiring a\n          positive or negative acknowledgment.\n\n\n\nBhushan                                                         [Page 3]\n\f\nRFC 327          Data and File Transfer Workshop Notes        April 1972\n\n\n      5.  The following data representations are to be accepted by all\n          servers:\n\n          1)  Network ASCII (7-bit ASCII in 8-bit field with 8th bit\n              zero).\n\n          2)  Local Byte (a server option to store data in an efficient\n              manner, the storage scheme should be well publicized).\n\n          3)  Image (a sequence of bits which should be stored\n              contiguously independent of the byte size chosen for\n              transfer).\n\n          4)  ASCII Print file (convert ASCII file to a form suitable\n              for printing).\n\n          5)  EBCDIC Print file (convert EBCDIC file to a form suitable\n              for printing).\n\n      6.  Record structures are allowed but not mandatory.  A user with\n          no record structure in his file should be able to store or\n          retrieve his file at any host.  If a serving host cannot\n          accept record structure, it must inform the user of the fact.\n          Any record structure information in the data stream may\n          subsequently be discarded.\n\n      7.  The following data transfer modes are defined:\n\n          1)  Byte-Stream - End of File indicated by closing connection.\n              No record structure.\n\n          2)  Block - File is series of blocks preceded by a count\n              field.  Appropriate means provided to indicate end-of-\n              file, end-of-record, and restart markers.\n\n          3)  ASCII - The file is network-ASCII, end-of-record, and\n              end-of-file are indicated by a special \"TELNET-control\"\n              character with 8th bit set to \"one\".\n\n          4)  File is network-ASCII with an end-of-record defined by CR\n              LF, and end-of-file by closing connection.\n\n          5)  Hasp compressed file with end-of-record and end-of-file\n              information.\n\n\n\n\n\n\n\nBhushan                                                         [Page 4]\n\f\nRFC 327          Data and File Transfer Workshop Notes        April 1972\n\n\n      8.  A restart procedure will be provided to protect user from\n          system failures (either host or process dying).  The issue of\n          bits lost or scrambled is handled best at the NCP level.\n          Standard error codes and responses will be provided for\n          storage and I/O channel errors, at the FTP level.\n\n          The restart procedure would require that the sender of data\n          insert a special marker in the data stream (the marker has\n          meaning only to the sender.  It could be bit-count, record\n          count, or page count, etc.).  The receiver of data would mark\n          the corresponding position of this marker in its own system,\n          and return this information to the user.  In the event of a\n          system failure, the user can restart the transfer by supplying\n          this information with a restart command.\n\n      9.  DTP is no longer a separate protocol but a set of transfer\n          modes or format procedures whose use is defined by the file\n          transfer protocol.\n\n      10.  Abhay Bhushan will write the workshop notes and the draft\n          specifications for the new file transfer protocol.\n\n   LIST OF ATTENDEES, DATA AND FILE TRANSFER WORKSHOP\n\n   Abhay Bhushan            MIT-MAC        April 14,15\n   Bob Braden               UCLA-CCN       April 14,15\n   Arvola Chan              MIT-MAC        April 14,15\n   Steve Crocker            ARPA           April 14\n   Eric Harslem             RAND           April 14\n   John Heafner             RAND           April 14\n   Chuck Holland            UCSD           April 14,15\n   Alex McKenzie            BBN (NET)      April 14\n   Bob Metcalfe             MIT-MAC        April 14\n   Hal Murray               CCA            April 14\n   Bill Plummer             BBN            April 14\n   Jon Postel               UCLA           April 14\n   Neal Ryan                MIT-MAC        April 14,15\n   Marc Seriff              MIT-MAC        April 14,15\n   Bob Thomas               BBN            April 14\n   Ray Tomlinson            BBN            April 14\n   Dick Watson              SRI-ARC        April 14,15\n   Doug Wells               MIT-MAC        April 14\n   Jim White                SRI-ARC        April 14,15\n   Richard Winter           CCA            April 14,15\n\n        [This RFC was put into machine readable form for entry]\n     [into the online RFC archives by H\ufffdl\ufffdne Morin, Viag\ufffdnie 10/99]\n\n\n\n\nBhushan                                                         [Page 5]\n\f\n"
}