{
  "series": "Request for Comments",
  "number": "40",
  "howpublished": "RFC 40",
  "publisher": "RFC Editor",
  "doi": "10.17487/RFC0040",
  "url": "https://www.rfc-editor.org/info/rfc40",
  "title": "More Comments on the Forthcoming Protocol",
  "pagetotal": "3",
  "year": "1970",
  "month": "mar",
  "body": "\n\n\n\n\n\nNetwork Working Group                                         E. Harslem\nRequest for Comments: 40                                      J. Heafner\n                                                                    RAND\n                                                              March 1970\n\n               More Comments on the Forthcoming Protocol\n\nWe have recently discussed NWG/RFC Nos. 36 and 39 with Steve Crocker,\nUCLA.  Steve has asked that we elaborate on the errors, queries, and\nHOST status that were mentioned in NWG/RFC #39.\n\nPlease voice your opinions soon in order to affect the forthcoming\nprotocol specifications.\n\nERROR MESSAGES\n\n     \u003cERR\u003e \u003cCode\u003e \u003cCommand length\u003e \u003cCommand in error\u003e\n\n\u003cCode\u003e is an eight-bit field that specifies the error type.  The\nassigned codes are shown below.  \u003cCommand length\u003e is a 16-bit integer\nthat indicates the length of the \u003cCommand in error\u003e in bits.  The\n\u003cCommand in error\u003e is the spurious command.\n\nThe ranges of \u003cCode\u003e are shown below in hexidecimal.\n\n     00     Unspecified error types\n     10-0F  Resource errors\n     10-1F  Status errors\n     20-2F  Content errors\n     30-3F  Unused\n\nSpecific values of \u003cCode\u003e are shown below with their meaning.\n\n     \u003cCode\u003e value   Semantics\n\n         00         Unspecified errors.\n         01         Request for an invalid resource.\n         02         Request for an exhausted resource, try later.\n        03-0F       Unused.\n         10         Invalid \u003cRSM\u003e, i.e., link connected but unblocked.\n         11         Invalid \u003cSPD\u003e.\n         12         Invalid \u003cASG\u003e, i.e., connected but no \u003cRDY\u003e\n                      received.\n\n\n\n\n\n\n\n\n                                                                [Page 1]\n\f\n     \u003cCode\u003e value   Semantics\n\n         13         Message received on blocked link.\n        14-1F       Unused.\n         20         Unknown command code.\n         21         Message received on unconnected link.\n         22         Invalid \u003cRFC\u003e.\n         23         Invalid \u003cCLS\u003e.\n         24         Invalid \u003cRSM\u003e, i.e., link not connected.\n         25         Invalid \u003cFND\u003e.\n         26         Invalid \u003cEND\u003e.\n         27         Invalid \u003cRDY\u003e.\n         28         Invalid \u003cASG\u003e, i.e., not connected.\n        29-2F       Unused.\n        30-FF       Unused.\n\nQUERIES\n\n     \u003cQRY\u003e \u003cMy Socket\u003e\nor   \u003cRPY\u003e \u003cYour Socket\u003e \u003cText\u003e\n\nThe \u003cQRY\u003e is the query indicated in NWG/RFC #39 and \u003cRPY\u003e is the reply.\nThe format of \u003cText\u003e is shown below; also refer to NWG/RFC #36, p. 3.\n\n\u003cText\u003e::= \u003c16 bit count of relevant connection table entries\u003e\n          \u003crelevant connection table entries\u003e\n\n\u003crelevant connection table entries\u003e::=\n                                     \u003crelevant connection table entries\u003e\n                                     \u003ca relevant connection table entry\u003e\n                                     \u003ca relevant connection table entry\u003e\n\n\u003ca relevant connection table entry\u003e::= \u003clocal socket\u003e \u003cforeign socket\u003e\n                                       \u003clink\u003e \u003cconnection state\u003e\n                                       \u003cflow state and buffer control\u003e\n                                       \u003creconnection control state\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                                                [Page 2]\n\f\nHOST STATUS\n\n     \u003cNOP\u003e\n\nAn NCP may be up, down, pending, etc.  When an NCP changes its\nstate to UP it should send a \u003cNOP\u003e to each remote NCP which\nindicates the NCP is available.  The sending NCP can then\nconstruct a vector of HOST status from the RFNMs it receives.  An\nNCP receiving a \u003cNOP\u003e can update the availability of the sending\nNCP in its HOST status vector.\n\n\n\n       [ This RFC was put into machine readable form for entry ]\n         [ into the online RFC archives by Richard Ames 6/97 ]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                                                [Page 3]\n\f\n"
}