{
  "series": "Request for Comments",
  "number": "177",
  "howpublished": "RFC 177",
  "publisher": "RFC Editor",
  "doi": "10.17487/RFC0177",
  "url": "https://www.rfc-editor.org/info/rfc177",
  "title": "Device independent graphical display description",
  "pagetotal": "9",
  "year": "1971",
  "month": "jun",
  "body": "\n\n\n\n\n\nNETWORK WORKING GROUP                                       J. McConnell\nRequest for Comment: 177           Ames Research Center Moffet Field, CA\nObsoletes: none                                             15 June 1971\nUpdates: 125\nNIC: 7102\n\n           A DEVICE INDEPENDENT GRAPHICAL DISPLAY DESCRIPTION\n\n   As more nodes are connected to the ARPA network, the types of\n   graphical display processors available to users is quite varied.  To\n   attempt to facilitate the transmission of graphical information over\n   the network, a device independent description of a display is\n   described.  The using host may make any conversions necessary to\n   realize the picture on a specific device.  It is also possible to\n   interpose a form machine as proposed by Heafner and Harslem in RFC\n   #94.  Some of the items and entities described herein were first\n   discussed by Steve Crocker in RFC #86.  It is intended that this\n   description is to be oriented to a refresh display with point,\n   vector, and character drawing capability, these types of devices\n   include the IBM 2250, IMLAC PDS-1, the DEC 338, and DEC 340, as well\n   as the Evans and Sutherland LDS-1.  However, direct video storage\n   tube devices represented by the ARDS, Tektronix and Computer devices\n   can also serve as clumsy interactive devices.  Hard copy devices,\n   such as microfilm or plotters, can also be used at the using host's\n   discretion.\n\n   There are several items and constructs which will be defined before\n   discussing the specifics of the description:\n\n      1.  The network standard graphics description stream (NGDS)\n      contains the description, data, and operators necessary to effect\n      a display.\n\n      2.  The network standard stream interpreter (NGSI) parses the NGDS\n      into its components.\n\n      3.   The network standard display list (NGDL) is the basic entity\n      which, when executed, causes graphical information to be\n      displayed.\n\n      4.  The network standard list interpreter (NGLI) is the entity\n      which executes the NGDL and controls the beam movement to effect\n      generation of graphical information.\n\n      5.  The network standard screen (NGS) is the entity on which the\n      information is to be displayed.  It may be divided into image\n      areas to be defined later.\n\n\n\n\nMcConnell                                                       [Page 1]\n\f\nRFC 177    A DEVICE INDEPENDENT GRAPHICAL DISPLAY DESCRIPTION  June 1971\n\n\n      6.  The network standard graphics list pointer (NGLP) and the\n      network standard graphics execution stack (NGES) are entities\n      which describe the state of the NGLI at any given time and provide\n      the facilities to allow the NGLI to be a recursive interpreter.\n\n   Figure 1. summarizes the preceding discussion graphically, which is\n   appropriate.\n\n   The network standard graphics screen is rectangular and positions on\n   it are specified by an ordered pair of fractions representing the\n   horizontal distance from the left edge and the vertical distance from\n   the bottom edges respectively.  These shall be termed the (x,y)\n   coordinates as is standard.  There is no specification of resolution,\n   so that the quality of the picture will degrade with the decreasing\n   resolution of a poor display device, or be improved if it is\n   displayed on a higher resolution device.  Coordinate values are\n   specified by a 16 bit unsigned fractions with the binary point to the\n   left of the most significant bit - this provides a normalized screen\n   with coordinates between 0.0 and .999...9.\n\n   The NGS may be subdivided into rectangular image areas with\n   possibility unique displays in each space. An image area has three\n   attributes:  a 16 bit integer name, an x,y pair specifying the lower\n   left corner and an x,y pair to specify the upper right corner of the\n   area.  Image spaces may overlap, but may not be completely contained\n   within each other.  The main image space has the name 0 and is\n   coincident with the NGS.  The use of image spaces allows for\n   manipulation of part of the NGS's contents, as well as redefining the\n   coordinate space. Within an image area, coordinate values are\n   fractional displacements from the lower left hand corner of the image\n   space.  Thus an image area defined from (0.0, 0.0) to (0.5, 0.5)\n   would contain an image one-fourth of the size of what it would be on\n   the full NGS.\n\n   Character strings may be displayed at arbitrary points in an image\n   area.  Because many display devices have hardware character\n   generators capable of producing one, or a few sizes, character\n   scaling within an image area will not be expected.  Characters shall\n   be assumed to be .014 screen width wide, and .025 screen height high\n   including spacing.  This gives a screen capacity of 72 characters and\n   40 lines.  When the beam is moved to be a screen position prior to\n   drawing a character, it is assumed to be in the center of the\n   rectangle defining the character space.  The beam position after\n   drawing a character, or a string of characters, is undefined.\n\n   The format of the NGDS can now be specified.  The NGSI parses the\n   NGDS into commands.  The commands are in a prefix format with an\n   eight bit command followed by the necessary parameters.  Their\n\n\n\nMcConnell                                                       [Page 2]\n\f\nRFC 177    A DEVICE INDEPENDENT GRAPHICAL DISPLAY DESCRIPTION  June 1971\n\n\n   descriptions follow the numerical order of the command codes.\n\n   ERASE (commands = 0) consists of a command byte and no parameters.\n   Its effect is to erase the full NGS.\n\n   DEFINE LIST (commands = 1) has three parameters.  A 16 bit integer\n   for the list name is first.  If the name has already been used, then\n   this command redefines the list.  The count of the items in the list\n   is also a 16 bit integer defining the length of the list in items.\n   The list items follow the count terminating with an end list item.\n\n   The items themselves are used to control the NGLI and the movement of\n   the beam when drawing pictures.  They are also in prefix format, with\n   an eight bit item code followed by the necessary parameters.  All\n   names are 16 bit integers, coordinate data are 16 bit unsigned\n   fractions as previously described.  Any other parameters will have\n   their type and size specified in individual descriptions.\n\n      a.  OPEN IMAGE AREA (name) (item type = 0) instructs the NGLI that\n      list commands which follow are to be adjusted to be contained\n      within the named area.  A nonexistent area name is treated as a\n      NOP.  If no image area is specified for the NGLI the default area\n      is area 0, the NGS.  This directive remains in effect until\n      another type 0 item is encountered by the NGLI.\n\n      b.  RESET IMAGE AREA (name) (item type = 1) causes the NGLI to\n      move the beam to the lower left corner of the image area.  A\n      nonexistent name is again treated as a NOP.\n\n      c.  CLEAR IMAGE AREA (name) (item type = 2) causes the NGLI to\n      erase all graphical information in the specified area, and then to\n      perform a reset command.\n\n   The following items are display items which actually cause beam\n   movement by the NGLI.  Coordinate data are relative to the origin of\n   the current image area and are taken as fractional displacements\n   within this area.\n\n      d.  MOVE BEAM (x,y) (item type = 3) causes the NGLI to move the\n      beam to (x,y) relative to the current origin.\n\n      e.  DISPLAY CURRENT POSITION (item type = 4) causes the NGLI to\n      display the current point on the NGS.\n\n\n\n\n\n\n\n\nMcConnell                                                       [Page 3]\n\f\nRFC 177    A DEVICE INDEPENDENT GRAPHICAL DISPLAY DESCRIPTION  June 1971\n\n\n      f.  DISPLAY VECTOR (x,y) (item type = 5) causes a vector to be\n      drawn from the current point to (x,y).  After the operation, (x,y)\n      becomes the current point.\n\n      g.  DISPLAY CHARACTERS (n, 'C1, C2...Cn') (item type = 6) causes\n      the n characters to be displayed starting from the current point.\n      N is the character count and is an eight bit byte.\n\n   The character set recognized by the NGLI is composed of eight bit\n   bytes interpreted in the following ways.  Any character with the most\n   significant bit a zero is interpreted as an ASCII character.  Some\n   non-graphic ASCII characters may have special functions within a\n   string:\n\n      1.  Line feed (LF) move the beam one line spacing downward.\n\n      2.  Carriage return (CR) move the beam to the left most character\n      position in the current line.\n\n      3.  Backspace (BS) move the beam one character position to the\n      left in the current line.\n\n      4.  Tab move the beam a predetermined number of character\n      positions to the right in the current line.  The number will\n      follow the tab character in the string, but may not exceed the\n      capacity of the current line.\n\n      5.  Vertical tab (VT) move the beam down a predetermined number of\n      line spacings.  The number of spacings follow the VT character and\n      may not exceed the line capacity of the screen.  This is expanded\n      as multiple line feeds.\n\n      6.  Any other non-graphic character - could cause a space\n      character to appear in its place on the display, or it may be used\n      for any purpose two processes choose.\n\n   Characters with the most significant bit a one are used for an\n   extended character set where a device can support this.  These may\n   also be used as an implicit stroke table, calls being the names of\n   special graphic lists that may be defined in the NGDS.  If no eight\n   bit list name exists, then the character is a space.\n\n      h.  EXECUTE LIST (name, x, y) (item type =7) causes the NGLI to\n      suspend interpretation of the list and interpret the named list.\n      It is equivalent to a subroutine call.  The (x,y) pair specifies\n      the origin of the new list relative to the current origin.  The\n      actions taken by the NGLI are specified in the next section\n\n\n\n\nMcConnell                                                       [Page 4]\n\f\nRFC 177    A DEVICE INDEPENDENT GRAPHICAL DISPLAY DESCRIPTION  June 1971\n\n\n      i.  COPY LIST (name, x,y) (item type = 8) cause the items\n      contained in the named list to be copied into the place of the\n      item with the origin of the list at (x,y) relative to the current\n      origin.  This is analogous to item (h) as a subroutine is to a\n      macro.\n\n      j.  EXECUTE TABLE (name, mode, length) (item = 9) causes the NGLI\n      to treat the named list as a special entity.  It is constrained to\n      contain only coordinate pairs.  It may be executed in either point\n      or vector mode as specified by the mode parameter 1= vector, 0=\n      point.  The length of the list is specified by a 16 bit integer\n      parameter.\n\n      k.  END LIST (item type = 10) has no parameters and informs the\n      NGLI that the end of a list has been reached.\n\n      l.  TABLE (n) (item type = 11) specifies that there are (x,y)\n      pairs in this list.  N is a 16 bit integer.\n\n      m.  Set vector mode (mode) (item type = 12)\n\n      n.  Set character mode (mode) (item type 13)\n\n   In addition to the above display items, some items exist which\n   control the display mode of the above where this is applicable.\n   There are two mode items, the one governing vector modes, and one for\n   character modes.  The quantities specified include brightness,\n   blinking, color selection, and mode dependent descriptions.\n\n   For vector modes, the texture of vectors such as dashed, solid or,\n   dotted can be specified.  For characters, size, and orientation can\n   be additionally specified.  The scope of a mode item extends to the\n   next encountered mode item of the same type.  Mode specifications\n   could have been included in the display items at the expense of more\n   parameters and in possibly more data to be transmitted.  The mode\n   specification consists of two eight bit bytes.  The bytes have the\n   following organization:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMcConnell                                                       [Page 5]\n\f\nRFC 177    A DEVICE INDEPENDENT GRAPHICAL DISPLAY DESCRIPTION  June 1971\n\n\n   1    4         3            2                     2    3\n +-----------------------+  +-----------------+   +-------------------+\n |    |    |             |  |     |           |   |     |     |       |\n |  B | BL |     CLR     |  | TX  |           |   | OR  |  SZ |       |\n |    |    |             |  |     |           |   |     |     |       |\n +-----------------------+  +-----------------+   +-------------------+\n\n BYTEO - both modes         BYTE 1- vector        BYTE 1- Character mode\n                            mode\n\n Where      B     Blink if set\n\n            BL    Brightness level - 0 = invisible, IIII brightness\n\n            CLR   Color          One bit for each primary\n\n            TX    Texture        OO = solid\n\n                                 01 = dashed\n\n                                 10 = dotted\n\n                                 11 = dot - dash\n\n           OR     Orientation binary value x 90deg\n\n           SZ     Size\n\n   If the device will ot support them, or provide subroutines to perform\n   these enhanced functions, they are treated as NOPs.\n\n   Thus the NGDL is a set of named lists.\n\n      DEFINE IMAGE AREA (command = 2) has three parameters a 16 bit area\n      name; an (x,y) pair defining the lower left corner of the area and\n      an (x,y) pair defining the upper right corner.  If the name has\n      already been used to define an area then this command serves a\n      re-definition of that area.  If the two (x,y) information\n      displayed in it.  If X1 is greater than Xr or Y1 is greater than\n      Yr then the definition is treated as NOP.\n\n      The following commands are included to avoid retransmission of a\n      list when some minor changes to it are necessary.  All instances\n      of a list, where an instance is a command to execute the list will\n      be effected.  Where a list has been copied into another list, no\n      change will take place in the copied list.\n\n\n\n\n\nMcConnell                                                       [Page 6]\n\f\nRFC 177    A DEVICE INDEPENDENT GRAPHICAL DISPLAY DESCRIPTION  June 1971\n\n\n      TRANSLATE LIST (command = 3) provides for translation of all\n      instances of a list within all of the image spaces it occurs in.\n      Parameters are the 16 bit list name, and two 16 fractions for the\n      coordinate values of the translation.\n\n      SCALE LIST (command = 4) can change the size of the picture\n      created by a list in all image spaces.  The parameters are the 16\n      bit list name followed by two 16 bit (X,Y) unsigned fractions with\n      eight bits of exponent followed by eight bits of mantissa.  These\n      alter the scale factors in the X and Y directions.\n\n      ROTATE LIST (command = 5) will rotate all instances of a list.\n      The parameters are for the 16 bit list name, and a 16 bit value\n      corresponding to rotational angle in degrees with the sense being\n      counter-clockwise for increasing values and the possible axis\n      being zero degrees.\n\n   The NGLI executes in a loop, taking items from the main list.  When\n   the end of the main list is reached, the NGLI returns to the top of\n   it.  At any point, the NGLP gives the NGLI the positional\n   displacement of the next display item it is processing.  When a\n   display item of the type h. is encountered, the current lists's\n   execution is suspended,  the name of the list, the current origin,\n   and the NGLP are saved in the NGES.  The NGLP is re-set to zero, the\n   next current origin is calculated, and execution of the new list\n   commences.  When the end of the list is encountered, the old values\n   are restored from the NGES and execution of the suspended list\n   continues.  The NGLI is then a recursive interpreter.  Whenever a new\n   image area is opened, the name of that image area is stored in the\n   current image area name.\n\n   The problem of interacting with the displayed picture has yet to be\n   addressed since this is a more complicated area.  Interaction may\n   occur in two fashions:  the first, and the easiest to handle, are\n   those kinds of events which are separate from the picture itself.\n   This encompasses key boards and function key types of devices.  These\n   can be handled as standard messages from the graphics device to the\n   serving host.  The second class of interactions is with the picture\n   itself.  This is more difficult because of the problem of associating\n   the point selected with some meaningful entity such as a list.  This\n   association can probably only be made by the serving host since the\n   using host, or a Form Machine, may have transformed the NGDS in\n   unknown ways, and the NGDS may no longer exist at the using host's\n   site.\n\n   There are essentially two classes of devices that can interact with\n   the picture.  The first class is synchronous devices, ones who only\n   cause some attention to occur while a given display item is being\n\n\n\nMcConnell                                                       [Page 7]\n\f\nRFC 177    A DEVICE INDEPENDENT GRAPHICAL DISPLAY DESCRIPTION  June 1971\n\n\n   executed.  Light pens are synchronous devices.  Asynchronous devices\n   are those which can interact regardless of which, or even when no,\n   display item is being executed.  Asynchronous devices make\n   associations more difficult since no relationship can be easily\n   inferred as they can for synchronous devices.\n\n   The NGES is created for the interaction with the picture.  For\n   synchronous devices the current values for the list name, origin, and\n   NGLP, as well as the contents of the NGES provides a hierarchical\n   structure where associations can be made.  For asynchronous devices,\n   the structure is probably not as necessary as the name and\n   coordinates within the image space in which the interaction occurred.\n   It will be necessary for the using host to understand which type of\n   devices are available and to supply proper type of interaction\n   information to the serving host.\n\n   The form of the interaction information for synchronous devices\n   follows:\n\n\nINTERACTION (type, cia, cln, cor, clp, n, l1, or1, lp1, ...ln, orn, lpn)\n\n   Where type describes the interaction type 0=synchronous\n   cia     current image area name\n   cln     current list name\n   cor     current origin value\n   clp     current NGLP value\n   n       number of entries in NGES, higher value of n is older entry\n   li      list name of the i th entry\n   ori     origin of the i th entry\n   lpi     NGLP of the i th entry\n\n   The form for asynchronous i.. teraction is:\n\n   INTERACTION (type, cia, iax, iay, sx, sy)\n\n   Where type = 1 for asynchronous interactions\n   cia     current image name\n   iax     image area x coordinate\n   iay     image area y coordinate\n   sx,sy   screen x,y coordinates\n\n\n\n\n\n\n\n\n\n\nMcConnell                                                       [Page 8]\n\f\nRFC 177    A DEVICE INDEPENDENT GRAPHICAL DISPLAY DESCRIPTION  June 1971\n\n\nNETWORK  |    Using Host\n         |                +-------+\n         |                |       |\n         |                | NGDL  |          +--------+       +-------+\n         +--------+       |       |---------\u003e|        |       |       |\n         |        |------\u003e|       |          |  NGLI  |------\u003e|  NGS  |\n         |  NGDS  |       +-------+          |        |       |       |\n         |        |       +-------+          |        |       |       |\n         |        |------\u003e|       |---------\u003e|        |       +-------+\n         +--------+       |IMAGE  |          +--------+\n         |                |AREA   |              ^\n         |                |DEFINI-|              |\n         |                |TIONS  |              V\n         |                +-------+          *--------+\n         |                                   |  NGLES |\n         |                                   |    \u0026   |\n         |                                   |  NGLP  |\n         |                                   +--------+\n\n\n\n\n\n\n\n\n\n\n\n        [This RFC was put into machine readable form for entry]\n    [into the online RFC archives by Kelly Tardif, Viag\ufffdnie 12/1999]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMcConnell                                                       [Page 9]\n\f\n"
}