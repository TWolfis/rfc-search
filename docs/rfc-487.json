{
  "series": "Request for Comments",
  "number": "487",
  "howpublished": "RFC 487",
  "publisher": "RFC Editor",
  "doi": "10.17487/RFC0487",
  "url": "https://www.rfc-editor.org/info/rfc487",
  "title": "Free file transfer",
  "pagetotal": "2",
  "year": "1973",
  "month": "apr",
  "day": "1",
  "body": "\n\n\n\n\n\nNetwork Working Group                                       Bob Bressler\nRequest for Comments #487                                   BBN\nNIC #15065                                                  6 April 1973\n\n\n                           Free File Transfer\n\n\n    In the past several months, many people have commented to me about\ntheir difficulty in transferring files.  The hang up appears to be with\nsystems that have some flavor of security, but on which the user has no\naccess privileges.  Specifically, the FTP server demands a user and\npassword before it will grant any system access.  The loophole which\npeople have been using is the MAIL FILE facility, which is both limited\nin scope and intended for other purposes.\n\n    A frequently used model for file protection is to define three\nlevels of user access:  1) only the user himself; 2) all users in a\ngroup; 3) everyone.  Up until now, \"everyone\" has meant anyone already\ngranted logon privileges.  A new class is, perhaps, needed to cover\neveryone, exclusive of whether or not they are logged on.\n\n    With all this in mind, I propose the following course of action:\n\n    If a user connects to an FTP server and makes a file request without\nsupplying a user name-password, the server should then examine the file\naccess parameters.  If the file is listed as accessible to anyone, then\nthe transfer should be allowed to proceed.\n\n    This scheme can be implemented so as not to yield file creations\nprivileges - for example, store commands can be implemented via an\nappend mechanism.  If I wanted a file sent to me I could create an empty\nfile with unlimited append access.  I would then inform the foreign user\nto store (append?) to that file.\n\n    The problem of accounting is somewhat more complex.  Clearly,\nstoring a file in a user's directory can be charged to that user.  When\nretrieving a file from a general system directory, there is no \"user\"\nspecified, and overhead may have to be billed.  The former case involved\nboth CPU time for transfer and secondary storage charges for storing the\nnew file.  In the latter case, only CPU charges are involved, and these\nmay be sufficiently small to not cause a major problem.\n\n    BBN TENEX has agreed to modify their FTP server to allow general\naccess transfers as described above.  Specific details for usage will be\navailable when installation is complete.  I urge other systems to make\nthis service available, if only on an experimental basis.  The success\nof such an experiment will be judged by the reaction of the general user\n\n\n\nBressler                                                        [Page 1]\n\f\nRFC 487                    Free File Transfer                 April 1973\n\n\ncommunity and the uses to which FTP is put.\n\n\n\n\n\nNOTE:  Bob Clements tells me that the BBN TENEX implementation will\n       probably require a user name of something like \"FREE\" or\n       \"ANONYMOUS\", but not require a password.\n\nRB/jm\n\n\n\n\n\n\n\n\n\n\n       [ This RFC was put into machine readable form for entry ]\n       [ into the online RFC archives by Alex McKenzie with    ]\n       [ support from GTE, formerly BBN Corp.             9/99 ]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBressler                                                        [Page 2]\n\f\n"
}