{
  "series": "Request for Comments",
  "number": "448",
  "howpublished": "RFC 448",
  "publisher": "RFC Editor",
  "doi": "10.17487/RFC0448",
  "url": "https://www.rfc-editor.org/info/rfc448",
  "title": "Print files in FTP",
  "pagetotal": "3",
  "year": "1973",
  "month": "feb",
  "body": "\n\n\n\n\n\nNETWORK WORKING GROUP                                  R.T. Braden\nREQUEST FOR COMMENT NO. 448                            UCLA/CCN\nNIC #13299                                             February 27, 1973\nUPDATES: RFC 354, 385, 454\n\n\n                           PRINT FILES IN FTP\n\n\nINTRODUCTION\n------------\n\n    Many of those who contributed to the definition of the FTP and RJE\nprotocols have expressed varying degrees of uncertainty or unhappiness\nwith the \"print file\" type in FTP.  This RFC is intended to review the\nproblem of print files in preparation for the forthcoming FTP meeting.\nOriginally drafted on the basis of RFC 385, this RFC has been updated to\nreflect the terminology of the latest FTP document 454.  (Changing the\nterminology doesn't solve the problem!)\n\n    It turns out that the Network RJE protocol as presently defined (see\nNIC 12112) seems to force a particular interpretation of print files in\nFTP and in fact, this interpretation is probably different from the one\nassumed by most FTP implementors.\n\nVERTICAL FORMAT CONTROL\n-----------------------\n\n    What is a print file?  Presumably it is a file which is intended to\nbe sent (eventually) to a printer process to create a hard copy.  Many\noperating systems (particularly those which are batch-processing\noriented) allow the programmer to include control codes within a file to\nbe printed, to control the vertical format of the printed page--for\nexample, single/double line spacing, overprinting, and page ejection.  A\n\"print file\" is one which includes such vertical format control (\"VFC\")\ninformation.  There are three common ways for printer processes to\ndetermine VFC:\n\nCASE N:  Non-Print File\n         --------------\n         The file contains no VFC information.  The printer process\n         applies a standard format (e.g., single space, standard\n         vertical margins) if the file is printed.\n\nCASE T:  Print File with ASCII Format Effectors\n         --------------------------------------\n         The file is \"Telnet-like\", containing the ASCII controls CR,\n         LF, and FF to provide VFC.\n\n\n\nBraden                                                          [Page 1]\n\f\nRFC 448                    PRINT FILES IN FTP              February 1973\n\n\nCASE A:  Print File with ASA (Fortran) VFC\n         ---------------------------------\n         The first character of each record is a VFC code; see RFC 454\n         for the codes.\n\n    Assuming there are to be print files in FTP, these _three_ cases\nneed to be considered.  These three cases are explicitly included within\nthe RJE protocol as \"transmission\" modes; we have borrowed the RJE\nlabels N,T, and A from NIC #12112.  The current FTP (RFC 454) seems to\nprovide only _two_ cases: _unformatted_ and _print_file_.  It is unclear\nfrom RFC 454 how these two FTP formats are related to the three VFC\ncases.  For example, it is unclear whether the FTP format is meant to be\na property of the file as transferred over the Network or of the file as\nstored by the server.\n\n    As I understand it, the Tenex system supports only case T.  The\ndistinction between Case N and Case T is not always clear, however.  If\na Tenex file which contains only the CR LF combination of format\neffectors is printed, it may be considered Case N where CR LF delimits a\nlogical record, and where the standard format is to begin printing each\nrecord on a new line.  The RJE protocol uses this ambiguity to\nadvantage; see below.\n\n    The IBM operating systems, on the other hand, support Cases N and A.\nThe \"output writer\" process which drives the printer must know whether\nor not a file to be printed contains ASA VFC, so the system\ndistinguishes internally between \"print files\" (Case A) and non-print\nfiles (Case N).  The \"print file\" attribute is normally attached to a\nprint file when it is created.  For example, the language processors\ntypically create print files for their \"printer\" output streams.\n\n    Hence, when CCN's server FTP executes a STOR command, it must decide\nwhether or not the new file is to be marked with the internal print file\nattribute.  As noted earlier, FTP does not explicitly distinguish the\nthree possible cases.  We must either add some additional assumptions or\nserver-dependent information outside FTP, or we must add a new format to\nFTP.\n\nIMPLICATIONS OF RJE\n-------------------\n\nTo send an output (\"printer\") file to a user host, the RJE server will\ncause his FTP user process to send the file with the following\nattributes*:\n\n\n*Note:  Making the obvious conversion from RFC 385 to RFC 454\nterminology.\n\n\n\nBraden                                                          [Page 2]\n\f\nRFC 448                    PRINT FILES IN FTP              February 1973\n\n\n VFC Case      |     FORMat            |     STRUcture\n-------------------------------------------------------------------\n  N            |     Unformatted       |     Record structure\n               |     -                 |     -\n  T            |     Unformatted       |     File structure\n               |     -                 |     -\n  A            |     Print File        |     Record structure\n               |     -                 |     -\n\nThus, the authors of RJE intended to use the _structure_ attribute to\nresolve Cases N and T.  This is perhaps a reasonable choice, but we\nshould understand the consequences and make them explicit within the FTP\ndocument.\n\nAssume for the moment that we want to maintain perfect consistency\nbetween FTP and RJE.  An FTP server which uses ASA VFC internally should\nconvert _every_ (Unformatted, Unstructured) file it receives to an\ninternal print file!  That is, the file must be mapped into a set of\nphysical lines (which are really logical records internally), and an ASA\nVFC character must be appended to the beginning of each line before it\nis stored.  Note that this implies that the default file structure in\nFTP should be changed to _record_structure_.  (This reinforces the point\nmade by Wayne Hathaway in RFC 414 that if a Tenex user transmits a\nsource file to an IBM host and expects to manipulate it in some useful\nway, he'd better send it with _record_ structure.)\n\nANOTHER CHOICE\n--------------\n\n    If the loss of (unformatted, unstructured) as a simple default case\nis too offensive, we can simply change FTP to include three formats\ncorresponding to Cases N, A, and T.  RJE would be changed\ncorrespondingly.\n\nACKNOWLEDGMENTS\n---------------\n\n    Discussions with Steve Wolfe, Jon Postel, and Eric Harslem were very\nhelpful in clarifying the print file problem in FTP.\n\nRTB/gjm\n\n\n       [ This RFC was put into machine readable form for entry ]\n       [ into the online RFC archives by Alex McKenzie with    ]\n       [ support from GTE, formerly BBN Corp.             9/99 ]\n\n\n\n\n\nBraden                                                          [Page 3]\n\f\n"
}