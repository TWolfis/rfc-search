{
  "series": "Request for Comments",
  "number": "407",
  "howpublished": "RFC 407",
  "publisher": "RFC Editor",
  "doi": "10.17487/RFC0407",
  "url": "https://www.rfc-editor.org/info/rfc407",
  "title": "Remote Job Entry Protocol",
  "pagetotal": "21",
  "year": "1972",
  "month": "oct",
  "body": "                                                         (Oct. 16, 1972)\n                                                       RFC 407 NIC 12112\n\n\nRobert Bressler, MIT-DMCG                              Obsoletes RFC 360\nRichard Guida, MIT-DMCG\nAlex McKenzie, BBN-NET\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                       REMOTE JOB ENTRY PROTOCOL\f\n\n                                               REMOTE Job Entry Protocol\n                                                         (Oct. 16, 1972)\n                                                       RFC 407 NIC 12112\n\n\n                       REMOTE JOB ENTRY PROTOCOL\n\nINTRODUCTION\n\n   Remote job entry is the mechanism whereby a user at one location\n   causes a batch-processing job to be run at some other location.  This\n   protocol specifies the Network standard procedures for such a user to\n   communicate over the Network with a remote batch-processing server,\n   causing that server to retrieve a job-input file, process the job,\n   and deliver the job's output file(s) to a remote location.  The\n   protocol uses a TELNET connection (to a special standardized logger,\n   not socket 1) for all control communication between the user and the\n   server RJE processes.  The server-site then uses the File Transfer\n   Protocol to retrieve the job-input file and to deliver the output\n   file(s).\n\n   There are two types of users:  direct users (persons) and user\n   processes.  The direct user communicates from an interactive terminal\n   attached to a TIP or any host.  This user may cause the input and/or\n   output to be retrieved/sent on a specific socket at the specified\n   host (such as for card readers or printers on a TIP), or the user may\n   have the files transferred by file-id using File Transfer Protocol.\n   The other type of user is a RJE User-process in one remote host\n   communicating with the RJE Server-process in another host.  This type\n   of user ultimately receives its instructions from a human user, but\n   through some unspecified indirect means.  The command and response\n   streams of this protocol are designed to be readily used and\n   interpreted by both the human user and the user process.\n\n   A particular user site may choose to establish the TELNET control\n   connection for each logical job or may leave the control connection\n   open for extended periods.  If the control connection is left open,\n   then multiple job-files may be directed to be retrieved or optionally\n   (to servers that are able to determine the end of one logical job by\n   the input stream and form several jobs out of one input file) one\n   continuous retrieval may be done (as from a TIP card reader).  This\n   then forms a \"hot\" card reader to a particular server with the TELNET\n   connection serving as a \"job monitor\".  Since the output is always\n   transferred job at a time per connection to the output socket, the\n   output from this \"hot\" reader would appear when ready as if to a\n   \"hot\" printer.  Another possibility for more complex hosts is to\n   attach an RJE User-process to a card reader and take instructions\n   from a lead control card, causing an RJE control TELNET to be opened\n   to the appropriate host with appropriate log-on and input retrieval\n   commands.  This card reader would appear to the human user as a\n   Network \"hot\" card reader.  The details of this RJE User-process are\n   beyond the scope of this protocol.\n\n\n\n\n\n                                   1\f\n\n                                               REMOTE Job Entry Protocol\n                                                         (Oct. 16, 1972)\n                                                       RFC 407 NIC 12112\n\n\nGENERAL SPECIFICATIONS\n\n   User\n\n      A human user at a real terminal or a process that supplies the\n      command control stream causing a job to be submitted remotely will\n      be termed the User.  The procedure by which a process user\n      receives its instructions is beyond the scope of this protocol.\n\n   User TELNET\n\n      The User communicates its commands over the Network in Network\n      Virtual Terminal code through a User TELNET process in the User's\n      Host.  This User TELNET process initiates its activity via ICP to\n      the standard \"RJE Logger\" socket (socket 5) at the desired\n      RJE-server Host.\n\n   RJE-Server TELNET\n\n      The RJE-server process receives its command stream from and sends\n      its response stream to the TELNET channel through an RJE-server\n      TELNET process in the server host.  This process must listen for\n      the ICP on the \"RJE Logger\" socket (and cause appropriate ICP\n      socket shifting).\n\n   TELNET Connection\n\n      The command and response streams for the RJE mechanism are via a\n      TELNET-like connection to a special socket with full\n      specifications according to the current NWG TELNET protocol.\n\n   RJE-Server\n\n      The RJE-Server process resides in the Host which is providing\n      Remote Batch Job Entry service.  This process receives input from\n      the RJE-server TELNET, controls access through the \"log-on\"\n      procedure, retrieves input job files, queues jobs for execution by\n      the batch system, responds to status inquiries, and transmits job\n      output files when available.\n\n   User FTP\n\n      All input and output files are transferred under control of the\n      RJE-server process at its initiative.  These files may be directly\n      transferred via Request-for-connection to a specific Host/socket\n      or they may be transferred via File Transfer Protocol.  If the\n      latter method is used, then the RJE-server acts through its local\n      User FTP process to cause the transfer.  This process initiates\n\n\n\n\n                                   2\f\n\n                                               REMOTE Job Entry Protocol\n                                                         (Oct. 16, 1972)\n                                                       RFC 407 NIC 12112\n                                                                        \n                                                                        \n      activity by an active Request-for-connection to the \"FTP Logger\"\n      in the foreign host.\n\n   Server FTP\n\n      This process in a remote host (remote from the RJE-server) listens\n      for an ICP from the User FTP and then acts upon the commands from\n      the User FTP causing the appropriate file transfer.\n\n   FTP\n\n      When File Transfer Protocol is used for RJE files, the standard\n      FTP mechanism is used as fully specified by the current NWG\n      FTProtocol.\n\n   RJE Command Language\n\n      The RJE system is controlled by a command stream from the User\n      over the TELNET connection specifying the user's identity\n      (log-on), the source of the job input file, the disposition of the\n      job's output files, enquiring about job status, altering job\n      status or output disposition.  Additional commands affecting\n      output disposition are includable in the job input file.  This\n      command language is explicitly specified in a following section of\n      this protocol.\n\n   RJE Command Replies\n\n      Every command input from the User via TELNET calls for a response\n      message from the RJE-server to the User over the TELNET\n      connection.  Certain other conditions also require a response\n      message.  These messages are formatted in a standardized manner to\n      facilitate interpretation by both human Users and User processes.\n      A following section of this protocol specifies the response\n      messages.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                   3\f\n\n                                               REMOTE Job Entry Protocol\n                                                         (Oct. 16, 1972)\n                                                       RFC 407 NIC 12112\n                                                                        \n                                                                        \nRJE COMMANDS OVER TELNET CONNECTION\n\n   GENERAL CONVENTIONS\n\n   1. Each of the commands will be contained in one input line\n      terminated by the standard TELNET \"crlf\".  The line may be of any\n      length desired by the user (explicitly, not restricted to a\n      physical terminal line width).  The characters \"cr\" and \"lf\" will\n      be ignored by the RJE-server except in the explicit order \"crlf\"\n      and may be used as needed for local terminal control.\n\n   2. All commands will begin with a recognized command name and may\n      then contain recognized syntactic element strings and free-form\n      variable strings (for user-id, file-ids, etc.).  Recognized words\n      consist of alphanumeric strings (letters and digits) or\n      punctuation.  Recognized alphanumeric string elements must be\n      separated from each other and from unrecognizable strings by at\n      least one blank or a syntacticly permitted punctuation.  Other\n      blanks may be used freely as desired before or after any syntactic\n      element (\"blank\" is understood here to mean ASCII SPACE (octal\n      040); formally:  \u003cblank\u003e::= \u003cblank\u003e\u003cASCII SPACE\u003e | \u003cASCII SPACE\u003e ;\n      thus, a sequence of SPACES is also permissible in place of\n      \u003cblank\u003e, although there is no syntactic necessity for there to be\n      more than one).  The \"=\" after the command name in all commands\n      except OUT and CHANGE is optional.\n\n   3. Recognized alphanumeric strings may contain upper case letters or\n      lower case letters in any mixture without syntactic\n      differentiation.  Unrecognizable strings will be used exactly as\n      presented with full differentiation of upper and lower case input,\n      unless the host finally using the string defines otherwise.\n\n   4. There are two types of Unrecognizable strings:  final and\n      imbedded.  Final strings appear as the last syntactic element of a\n      command and are parsed as beginning with the next non-blank\n      character of the input stream and continuing to the last non-blank\n      character before the \"crlf\".\n\n   Imbedded strings include \"job-id\" and \"job-file-id\" in the OUT,\n   CHANGE, and ALTER commands.  At present these fields will be left\n   undelimited since they must only be recognizable by the server host\n   which hopefully can recognize its own job-ids and file-names.\n\n   SYNTAX\n\n   The following command descriptions are given in a BNF syntax.  Names\n   within angle brackets are non-terminal syntactic elements which are\n   expanded in succeeding syntactic equations.  Each equation has the\n\n\n\n\n                                   4\f\n\n                                               REMOTE Job Entry Protocol\n                                                         (Oct. 16, 1972)\n                                                       RFC 407 NIC 12112\n                                                                        \n                                                                        \n   defined name on the left of the ::= and a set of alternative\n   definitions, separated by vertical lines \"|\", on the right.\n\n   REINITIALIZE\n\n      REINIT\n\n         This command puts the user into a state identical to the state\n         immediately after a successful connection to the RJE-server,\n         prior to having sent any commands over the TELNET connection.\n         The effective action taken is that of an ABORT and a flushing\n         of all INPUT, OUTPUT and ID information.  Naturally, the user\n         is still responsible for any usage charges incurred prior to\n         his REINIT command.  The TELNET connection is not affected in\n         any way.\n\n   USER\n\n      User = \u003cuser-id\u003e\n\n         This command must be the first command over a new TELNET\n         connection.  As such, it initiates a \"logon\" sequence.  The\n         response to this command is one of the following:\n\n            1.  User code in error.\n            2.  Enter password (if user code ok).\n            3.  Log-on ok, proceed (if no password requested).\n\n         Another USER command may be sent by the User at any time to\n         change Users.  Further input will then be charged to the new\n         user.  A server may refuse to honor a new user command if it is\n         not able to process it in its current state (during input file\n         transfer, for example), but the protocol permits the USER\n         command at any time without altering previous activity.  An\n         incorrect subsequent USER command or its following PASS command\n         are to be ignored with error response, leaving the original\n         User logged-in.\n\n         It is permissable for a server to close the TELNET connection\n         if the initial USER/PASS commands are not completed within a\n         server specified time period.  It is not required or implied\n         that the \"logged-on\" User's user-id be the one used for file\n         transfer or job execution, but only identifies the submitter of\n         the command stream.  Servers will establish their own rules\n         relating user-id with the job-execution-user for Job or Output\n         alteration commands.\n\n         Successful \"log-on\" always clears any previous Input or Output\n         default parameters (INID, etc.).\n\n\n\n                                   5\f\n\n                                               REMOTE Job Entry Protocol\n                                                         (Oct. 16, 1972)\n                                                       RFC 407 NIC 12112\n                                                                        \n                                                                        \n   PASS\n\n      Pass = \u003cpassword\u003e\n\n         This command immediately follows a USER command and completes\n         the \"log-on\" procedure.  Although a particular Server may not\n         require a password and has already indicated \"log-on ok\" after\n         the USER command, every Server must permit a PASS command (and\n         possibly ignore it) and acknowledge it with a \"log-on ok\" if\n         the log-on is completed.\n\n   BYE\n\n      BYE\n\n         This command terminates a USER and requests the RJE server to\n         close the TELNET connection.  If input transfer is not in\n         progress, the TELNET connection may be closed immediately; if\n         input is in progress, the connection should remain open for\n         result response and then be closed.  During the interim, a new\n         USER command (and no other command) is acceptable.\n\n         An unexpected close on the TELNET connection will cause the\n         server to take the effective action of an ABORT and a BYE.\n\n   INID/INPASS\n\n      INID = \u003cuser-id\u003e\n      INPASS = \u003cpassword\u003e\n\n         The specified user-id and password will be sent in the File\n         Transfer request to retrieve the input file.  These parameters\n         are not used by the Server in any other way.  If this command\n         does not appear, then the USER/PASS parameters are used.\n\n   INPATH/INPUT\n\n      INPATH = \u003cfile-id\u003e\n      INPUT = \u003cfile-id\u003e\n      INPUT\n\n         NOTE:  The following syntax will be used for output as well.\n\n            \u003cfile-id\u003e::= \u003chost-socket\u003e | \u003chost-file\u003e\n            \u003chost-socket\u003e::= \u003chost\u003e,\u003csocket\u003e\u003cattributes\u003e |\n                             \u003csocket\u003e\u003cattributes\u003e\n               no \u003chost\u003e part implies the User-site host\n            \u003chost\u003e::= \u003cinteger\u003e\n            \u003csocket\u003e::= \u003cinteger\u003e\n\n\n\n                                   6\f\n\n                                               REMOTE Job Entry Protocol\n                                                         (Oct. 16, 1972)\n                                                       RFC 407 NIC 12112\n\n\n            \u003cinteger\u003e::= D\u003cdecimal-integer\u003e | O\u003coctal-integer\u003e |\n                         H\u003chexadecimal-integer\u003e\n            \u003chost-file\u003e::= \u003chost\u003e\u003cattributes\u003e/\u003cpathname\u003e\n            \u003cattributes\u003e::= \u003cempty\u003e | :\u003ctransmission\u003e\u003ccode\u003e\n            \u003ctransmission\u003e::= \u003cempty\u003e | T | A | N\n                  \u003cempty\u003e implies default which is N for Input files\n                          and A for Output files\n                  T       specifies TELNET-like coding with embedded\n                          \"crlf\" for new-line, \"ff\" for new-page\n                  N       specifies FTP blocked transfer with record\n                          marks but without other carriage-control\n                  A       specifies FTP blocked records with ASA\n                          carriage-control\n                          (column 1 of image is forms control)\n            \u003ccode\u003e::= \u003cempty\u003e | E\n                  \u003cempty\u003e specifies NVT ASCII code\n                  E specifies EBCDIC\n            \u003cpathname\u003e::= \u003cany string recognized by the FTP Server at\n                          the site of the file\u003e\n\n         The \u003cfile-id\u003e syntax is the general RJE mechanism for\n         specifying a particular file source or destination for input or\n         output.  If the \u003chost-socket\u003e form is used then direct transfer\n         will be made by the RJE-Server to the named socket using the\n         specified \u003cattributes\u003e.  If the \u003chost-file\u003e form is used then\n         the RJE-server will call upon its local FTP-user process to do\n         the actual transfer.  The data stream in this mode is either\n         TELNET-like ASCII or blocked records (which may use column 1\n         for ASA carriage-control).  Although A mode is permitted on\n         input (column 1 is deleted) the usual mode is the default N.\n         The output supplies carriage-control in the first character of\n         each record (\"blank\" = single-space, \"1\" = new-page, etc.),\n         while the optional N mode transfers the data only (as to a card\n         punch, etc.).\n\n         The \u003cpathname\u003e is an arbitrary Unrecognized string which is\n         saved by RJE-server and sent back over FTP to the FTP-server to\n         retrieve or store the appropriate files.\n\n         INPATH or INPUT commands first store the specified \u003cfile-id\u003e if\n         one is supplied, and then the INPUT command initiates input.\n         The INPATH name may be used to specify a file-id for later\n         input and the INPUT command without file-id will cause input to\n         initiate over a previously specified file-id.  An INPUT \"crlf\"\n         command with no previous \u003cfile-id\u003e specified is illegal.\n\n\n\n\n\n\n\n                                   7\f\n\n                                               REMOTE Job Entry Protocol\n                                                         (Oct. 16, 1972)\n                                                       RFC 407 NIC 12112\n                                                                        \n                                                                        \n   ABORT\n\n      ABORT\n\n         This command aborts any input retrieval in progress, discards\n         already received records, and closes the retrieval connection.\n         Note:  ABORT with parameters is an Output Transmission control\n         (see below).\n\n   OUTUSER/OUTPASS\n\n      OUTUSER = \u003cuser-id\u003e\n      OUTPASS = \u003cpassword\u003e\n\n         The specified user-id and password will be sent in the File\n         Transfer request to send the output file(s).  These parameters\n         are not used by the Server in any other way.  If this command\n         does not appear, then the USER/PASS parameters are used.\n\n   OUT\n\n      OUT \u003cout-file\u003e = \u003cdisp\u003e\n\n         \u003cout-file\u003e::= \u003cempty\u003e | \u003cjob-file-id\u003e\n               \u003cempty\u003e implies the primary print file of the job\n         \u003cjob-file-id\u003e::= \u003cstring representing a specific output file\n                          from the job as recognized by the Server\u003e\n         \u003cdisp\u003e::= \u003cempty\u003e\u003cfile-id\u003e | (H) | (S)\u003cfile-id\u003e|(D)\n               \u003cempty\u003e specifies Transmit then discard\n               (H) specifies Hold-only, do not transmit\n               (S) specifies Transmit and Save\n               (D) specifies discard without transmitting\n         Note:  Parentheses are part of the above elements.\n\n         \u003cfile-id\u003e::= (same as for INPUT command)\n\n         This command specifies the disposition of output file(s)\n         produced by the job.  Unspecified files will be Hold-only by\n         default.  The OUTUSER, OUTPASS, and OUT commands must be\n         specified before the INPUT command to be effective.  These\n         commands will affect any following jobs submitted by this USER\n         over this RJE-TELNET connection.  A particular job may override\n         these commands by NET control cards on the front of the input\n         file.\n\n         Once output disposition is specified by this OUT command or by\n         a NET OUT card, the information is kept with the job until\n         final output disposition, and is modifiable by the CHANGE\n         command.\n\n\n\n                                   8\f\n\n                                               REMOTE Job Entry Protocol\n                                                         (Oct. 16, 1972)\n                                                       RFC 407 NIC 12112\n                                                                        \n                                                                        \n         On occasion, the server may find that the destination for the\n         output is \"busy\" (i.e., RFC to either Server-FTP or specified\n         socket is refused), or that the host which should receive the\n         output is dead.  In these cases, the server should wait several\n         minutes and then try to transmit again.\n\n   OUTPUT RE-ROUTE\n\n      CHANGE \u003cjob-id\u003e\u003cblank\u003e\u003cout-file\u003e = \u003cdisp\u003e\n\n         This command changes the output disposition supplied with the\n         job at submission.  The \u003cjob-id\u003e is assumed recognizable by the\n         RJE-server, who may verify if this USER is authorized to modify\n         the specified job.  After the job is identified, the other\n         information has the same syntax and semantics as the original\n         OUT command.  CHANGE command may be specified for a job-file-id\n         which was not mentioned at submission time and has the same\n         effect as an original OUT command.\n\n   OUTPUT CONTROLS DURING TRANSMISSION\n\n      \u003ccommand\u003e\u003cblank\u003e\u003ccount\u003e\u003cblank\u003e\u003cwhat\u003e\n\n      \u003ccommand\u003e::= RESTART | RECOVER | BACK | SKIP |\n      ABORT | HOLD\n\n      These commands specify (respectively):\n\n         Restart the transmission (new RFC, etc.)\n         Recover restarts transmission from last FTP\n         Restart-marker-reply\n         (see FTP).\n         Back up the output \"count\" blocks\n         Skip the output forward \"count\" blocks\n         Abort the output, discarding it\n         Abort the output, but Hold it\n\n      \u003ccount\u003e::= \u003cempty\u003e | \u003cinteger\u003e\n         \u003cempty\u003e implies 1 where defined\n      \u003cwhat\u003e::= @\u003cfile-id\u003e | \u003cjob-id\u003e\u003cjob-file-id\u003e\n      \u003cdisp\u003e::= (same as for OUT command)\n      \u003cfile-id\u003e::= (same as for INPUT command)\n      \u003cinteger\u003e::= (same as for INPUT command)\n      \u003cjob-id\u003e::= \u003cserver recognized job identifier which was supplied\n                  at INP completion by the server\u003e\n\n      \u003cjob-file-id\u003e::= \u003cserver recognized file identifier or if missing\n                       then the prime printer output of the specified\n                       job\u003e\n\n\n\n                                   9\f\n\n                                               REMOTE Job Entry Protocol\n                                                         (Oct. 16, 1972)\n                                                       RFC 407 NIC 12112\n                                                                        \n                                                                        \n      This collection of commands will modify the transmission of output\n      in progress or recently aborted.  If output transmission is\n      cut-off before completion, then the RJE-server will either try to\n      resend the entire file if the file's \u003cdisp\u003e was\n      Transmit-and-discard or will Hold the file for further User\n      control if the \u003cdisp\u003e was (S) transmit-and-Save.  Either during\n      transmission, during the Save part of a transmit-and-Save, or for\n      a Hold-only file, the above commands may be used to control the\n      transmission.  The @\u003cfile-id\u003e form of \u003cwhat\u003e is permitted only if\n      transmission is actually in progress.\n\n      If the file's state is inconsistent with the command, then the\n      command is illegal and ignored with reply.\n\n   STATUS\n\n      STATUS \u003cjob-id\u003e\n      STATUS \u003cjob-id\u003e\u003cblank\u003e\u003cjob-file-id\u003e\n\n         These commands request the status of the RJE-server, a\n         particular job, or the transmission of an output or input file,\n         respectively.  The information content of the Status reply is\n         site dependent.\n\n   CANCEL/ALTER\n\n      CANCEL \u003cjob-id\u003e\n      ALTER \u003cjob-id\u003e\u003cblank\u003e\u003csite dependent options\u003e\n\n         These commands change the course of a submitted job.  CANCEL\n         specifies that the job is to be immediately terminated and any\n         output discarded.  ALTER provides for system dependent options\n         such as changing job priority, process limits, Teminate without\n         Cancel, etc.\n\n   OP\n\n      OP (any string)\n\n         The specified string is to be displayed to the Server site\n         operator when any following job is initiated from the batch\n         queue of the Server.  This command usually appears in the input\n         file as a NET OP control card, but may be a TELNET command.  It\n         is cancelled as an all-jobs command by an OP \"crlf\" command (no\n         text supplied).\n\n\n\n\n\n\n\n                                   10\f\n\n                                               REMOTE Job Entry Protocol\n                                                         (Oct. 16, 1972)\n                                                       RFC 407 NIC 12112\n                                                                        \n                                                                        \nRJE CONTROL CARDS IN THE INPUT FILE\n\n   Certain RJE commands may be specified by control cards in the front\n   of the input file.  If these controls appear, they take precedence\n   over the same command given thru the RJE-TELNET connection and affect\n   only this specific job.  All these RJE control cards must appear as\n   the first records of the job's input-file.  They all contain the\n   control word NET in columns 1 through 3.  Scanning for these controls\n   stops when the first card without NET in col 1-3 is encountered.\n\n   The control commands appear in individual records and are terminated\n   by the end-of-record (usually an 80 column card-image).  Continuation\n   is permitted onto the next record by the appearance of NET+ in\n   columns 1-4 of the next record.  Column 5 of the next record\n   immediately follows the last character of the previous record.\n\n      NET OUTUSER = \u003cuser-id\u003e\n      NET OUTPASS = \u003cpassword\u003e\n      NET OUT \u003cout-file\u003e = \u003cdisp\u003e\n      NET OP \u003cany string\u003e\n\n   See the corresponding TELNET command for details.  One option\n   permitted by the NET OUTUSER and NET OUT controls not possible from\n   the TELNET connection is specification of different OUTUSERs for\n   different OUTS, since the TELNET stored and supplies only an initial\n   OUTUSER, but the controls may change OUTUSERs before each OUT control\n   is encountered.\n\nRJE USE OF FILE TRANSFER PROTOCOL\n\n   Most non-TIP files will be transferred to or from the RJE-server\n   through the FTP process.  RJE-server will call upon its local\n   FTP-user supplying the Host, File-pathname, User-id, Password, and\n   Mode of the desired transfer.  FTP-user will then connect to its\n   FTP-server counterpart in the specified host and set up a transfer\n   path.  Data will then flow through the RJE-FTP interface in the\n   Server, over the Network, from/to the foreign FTP-server and then\n   from/to the specified File-pathname in the foreign host's file\n   storage space.  On output files, the file-pathname may be recognized\n   by the foreign host as directions to a printer or the file may simply\n   be stored; a User-RJE-process can supply an output \u003cfile-id\u003e by\n   default which is recognized by its own Server-FTP as routing to a\n   printer.\n\n   Although many specifics of the RJE-Server/User-FTP interface are\n   going to be site dependent, there are several FTP options which will\n   be used in a standard way by RJE-Servers:\n\n\n\n\n\n                                   11\f\n\n                                               REMOTE Job Entry Protocol\n                                                         (Oct. 16, 1972)\n                                                       RFC 407 NIC 12112\n                                                                        \n                                                                        \n      1. A new FTP connection will be initiated for each file to be\n         transferred.  The connection will be opened with the RJE User\n         supplied User-id (OUTUSER or INUSER) and Password.\n\n      2. The data bytesize will be 8 bits.\n\n      3. The FTP Type, Structure, and Mode parameters are determined by\n         the RJE transfer direction (I/O), and the \u003ctransmission\u003e and\n         \u003ccode\u003e options supplied by the User:\n\n     I/O   \u003cTRANS\u003e   \u003cCODE\u003e   FTP-TYPE   FTP-STRUCTURE   FTP-MODE\n      I*      N        -         A             R            B\n      I       N        E         E             R            B\n      I       T        -         A             F            S\n      I       T        E         E             F            S\n      I       A        -         P             R            B\n      I       A        E         F             R            B\n   \n      O*      A        -         P             R            B\n      O       A        E         F             R            B\n      O       N        -         A             R            B\n      O       N        E         E             R            B\n      O       T        -         A             F            S\n      O       T        E         E             F            S\n   \n              (*indicates default)\n\n      4. The service commands used will be Retrieve for input and Append\n         (with create) for output.  The FTP pathname will be the\n         \u003cpathname\u003e supplied by the RJE User.\n\n      5. On output in B form, the User-FTP at the RJE-Server site will\n         send Restart-markers at periodic intervals (like every 100\n         lines, or so), and will remember the latest\n         Restart-marker-reply with the file.  If the file transfer is\n         not completed and the \u003cdisp\u003e is (S) then the file will be held\n         pending User intervention.  The User may then use the RECOVER\n         command to cause a FTP restart at the last remembered\n         Restart-marker-reply.\n\n      6. The FTP Abort command will be used for the RJE ABORT and CANCEL\n         commands.\n\n      7. For transfers where the FTP-MODE is defined as B, the user FTP\n         may optionally attempt to use H mode.\n\n   The specific form of the FTP commands used by an RJE-Server site, and\n   the order in which they are used will not be specified in this\n   protocol.\n\n\n\n                                   12\f\n\n                                               REMOTE Job Entry Protocol\n                                                         (Oct. 16, 1972)\n                                                       RFC 407 NIC 12112\n                                                                        \n                                                                        \n   Errors encountered by FTP fall into three categories:  a) access\n   errors or no storage space error; b) command format errors; and c)\n   transfer failure errors.  Since the commands are created by the\n   RJE-Server process, an error is a programming problem and should be\n   logged for attention and the situation handled as safely as possible.\n   Transmission failure or access failure on input cause an effective\n   ABORT and user notification.  Transmission failure on output causes\n   RESTART or Save depending on \u003cdisp\u003e (see OUT command).  Access\n   failure on output is a problem since the User may not be accessible.\n   A status response should be queued for him, should he happen to\n   inquire; a \u003cdisp\u003e = (S) file should be Held; and a \u003cdisp\u003e = \u003cempty\u003e\n   transmit-and-discard file should be temporarily held and then\n   discarded if not claimed.  \"Temporarily\" is understood here to mean\n   at least several days, since particularly in the case of jobs which\n   generate voluminous output at great expense to the User, he should be\n   given every chance to retrieve his rightful output.  Servers may\n   elect, however, to charge the User for the file-storage space\n   occupied by the held output.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                   13\f\n\n                                               REMOTE Job Entry Protocol\n                                                         (Oct. 16, 1972)\n                                                       RFC 407 NIC 12112\n                                                                        \n                                                                        \nREPLIES OVER THE TELNET CONNECTION\n\n   Each action of the RJE-server, including entry of each TELNET\n   command, is noted over the TELNET connection to the User.  These\n   RJE-server replies are formatted for Human or Process interpretation.\n   They consist of a leading 3-digit numeric code followed by a blank\n   followed by a text explanation of the message.  The numeric codes are\n   assigned by groups for future expansion to hopefully cover other\n   protocols besides RJE (like FTP).  The numeric code is designed for\n   ease of interpretation by processes.  The three digits of the code\n   are interpreted as follows:\n\n   The first digit specified the \"type\" of response indicated:\n\n      000\n\n         These \"replies\" are purely informative, and are issued\n         voluntarily by the Server to inform a User of some state of the\n         server's system.\n\n      100\n\n         Replies to a specific status inquiry.  These replies serve as\n         both information and as acknowledgment of the status request.\n\n      200\n\n         Positive acknowledgment of some previous command/request.  The\n         reply 200 is a generalized \"ok\" for commands which require no\n         other comment.  Other 2xx replies are specified for specific\n         successful actions.\n\n      300\n\n         Incomplete information supplied so far.  No major problem, but\n         activity cannot proceed with the input specified.\n\n      400\n\n         Unsuccessful reply.  A request was correctly specified, but\n         could not be correctly completed.  Further attempts will\n         require User commands.\n\n      500\n\n         Incorrect or illegal command.  The command or its parameters\n         were invalid or incomplete from a syntactic view, or the\n         command is inconsistent with a previous command.  The command\n         in question has been totally ignored.\n\n\n\n                                   14\f\n\n                                               REMOTE Job Entry Protocol\n                                                         (Oct. 16, 1972)\n                                                       RFC 407 NIC 12112\n                                                                        \n                                                                        \n      600-900\n\n         Reserved for expansion\n\n   The second digit specifies the general subject to which the response\n   refers:\n\n      x00-x29\n\n         General purpose replies, not assignable to other subjects.\n\n      x30\n\n         Primary access.  These replies refer to the attempt to \"log-on\"\n         to a Server service (RJE, FTP, etc.).\n\n      x40\n\n         Secondary access.  The primary Server is commenting on its\n         ability to access a secondary service (RJE must log-on to a\n         remote FTP service).\n\n      x50\n\n         FTP results.\n\n      x60\n\n         RJE results.\n\n      x70-x99\n\n         Reserved for expansion.\n\n   The final digit specifies a particular message type.  Since the code\n   is designed for an automaton process to interpret, it is not\n   necessary for every variation of a reply to have a unique number,\n   only that the basic meaning have a unique number.  The text of a\n   reply can explain the specific reason for the reply to a human User.\n\n   Each TELNET line (ended by \"crlf\") from the Server is intended to be\n   a complete reply message.  If it is necessary to continue the text of\n   a reply onto following lines, then those continuation replies contain\n   the special reply code of three blanks.\n\n\n\n\n\n\n\n\n                                   15\f\n\n                                               REMOTE Job Entry Protocol\n                                                         (Oct. 16, 1972)\n                                                       RFC 407 NIC 12112\n                                                                        \n                                                                        \n   The assigned reply codes relating to RJE are:\n\n   000 General information message (time of day, etc.)\n   030 Server availability information\n   050 FTP commentary or user information\n   060 RJE or Batch system commentary or information\n   100 System status reply\n   150 File status reply\n   151 Directory listing reply\n   160 RJE system general status reply\n   161 RJE job status reply\n   200 Last command received ok\n   201 An ABORT has terminated activity, as requested\n   202 ABORT request ignored, no activity in progress\n   203 The requested Transmission Control has taken effect\n   204 A REINIT command has been executed, as requested\n   230 Log-on completed\n   231 Log-off completed, goodbye.\n   232 Log-off noted, will complete when transfer done\n   240 File transfer has started\n   250 FTP File transfer started ok\n   251 FTP Restart-marker-reply\n      Text is:  MARK yyyy = mmmm\n         where yyyy is data stream marker value (yours)\n         and mmmm is receiver's equivalent mark (mine)\n   252 FTP transfer completed ok\n   253 Rename completed\n   254 Delete completed\n   260 Job \u003cjob-id\u003e accepted for processing\n   261 Job \u003cjob-id\u003e completed, awaiting output transfer\n   262 Job \u003cjob-id\u003e Cancelled as requested\n   263 Job \u003cjob-id\u003e Altered as requested to state \u003cstatus\u003e\n   264 Job \u003cjob-id\u003e,\u003cjob-file-id\u003e transmission in progress\n   300 Connection greeting message, awaiting input\n   301 Current command not completed (may be sent after\n      suitable delay, if not \"crlf\")\n   330 Enter password (may be sent with hide-your-input mode)\n   360 INPUT has never specified an INPATH\n   400 This service is not implemented\n   401 This service is not accepting log-on now, goodbye.\n   430 Log-on time or tries exceeded, goodbye.\n   431 Log-on unsuccessful, user and/or password invalid\n   432 User not valid for this service\n   434 Log-out forced by operator action, please phone site\n   435 Log-out forced by system problem\n   436 Service shutting down, goodbye\n   440 RJE could not log-on to remote FTP for input transfer\n   441 RJE could not access the specified input file thru FTP\n   442 RJE could not establish \u003chost-socket\u003e input connection\n\n\n\n                                   16\f\n\n                                               REMOTE Job Entry Protocol\n                                                         (Oct. 16, 1972)\n                                                       RFC 407 NIC 12112\n                                                                        \n                                                                        \n   443 RJE could not log-on to remote FTP for output delivery\n   444 RJE could not access file space given for output\n   445 RJE could not establish \u003chost-socket\u003e output connection\n   450 FTP:  The named file does not exist (or access denied)\n   451 FTP:  The named file space not accessable by YOU\n   452 FTP:  Transfer not completed, data connection closed\n   453 FTP:  Transfer not completed, insufficient storage space\n   460 Job input not completed, ABORT performed\n   461 Job format not acceptable for processing, Cancelled\n   462 Job previously accepted has mysteriously been lost\n   463 Job previously accepted did not complete\n   464 Job-id referenced by STATUS, CANCEL, ALTER, CHANGE, or\n      Transmission Control is not known (or access denied)\n   465 Request Alteration is not permitted for the specified job\n   466 Un-deliverable, un-claimed output for \u003cjob-id\u003e discarded\n   467 Requested REINIT not accomplished\n   500 Last command line completely unrecognized\n   501 Syntax of the last command is incorrect\n   502 Last command incomplete, parameters missing\n   503 Last command invalid, illegal parameter combination\n   504 Last command invalid, action not possible at this time\n   505 Last command conflicts illegally with previous command(s)\n   506 Requested action not implemented by this Server\n   507 Job \u003cjob-id\u003e last command line completely unrecognized\n   508 Job \u003cjob-id\u003e syntax of the last command is incorrect\n   509 Job \u003cjob-id\u003e last command incomplete, parameters missing\n   510 Job \u003cjob-id\u003e last command invalid, illegal parameter\n      combination\n   511 Job \u003cjob-id\u003e last command invalid, action impossible at\n      this time\n   512 Job \u003cjob-id\u003e last command conflicts illegally with previous\n      command(s)\n\nSEQUENCING OF COMMANDS AND REPLIES\n\n   The communication between the User and Server is intended to be an\n   alternating dialogue.  As such, the User issues an RJE command and\n   the Server responds with a prompt primary reply.  The User should\n   wait for this initial success or failure response before sending\n   further commands.\n\n   A second type of reply is sent by Server asynchronously with respect\n   to User commands.  These replies report on the progress of a job\n   submission caused by the INPUT command and as such are secondary\n   replies to that command.\n\n   The final class of Server \"replies\" are strictly informational and\n   may arrive at any time.  These \"replies\" are listed below as\n   spontaneous.\n\n\n\n                                   17\f\n\n                                               REMOTE Job Entry Protocol\n                                                         (Oct. 16, 1972)\n                                                       RFC 407 NIC 12112\n                                                                        \n                                                                        \nCOMMAND-REPLY CORRESPONDENCE TABLE\n\n   COMMAND                    SUCCESS          FAILURE\n\n   REINIT                     204              467,500-505\n   USER                       230,330          430-432,500-505\n   PASS                       230              430-432,500-505\n   BYE                        231,232          500-505\n   INID                       200              500-505\n   INPASS                     200              500-505\n   INPATH                     200              500-505\n   INPUT                      240              360,440-442,500-505\n      sec. input retrieval    260              460,461\n      sec. job execution      261              462,463\n      sec. output transmission -               443-445,466\n   ABORT (input)              201,202          500-505\n   OUTUSER                    200              500-505\n   OUTPASS                    200              500-505\n   OUT                        200              500-505\n   CHANGE                     200              500-505\n   RESTART/RECOVER/BACK\n    /SKIP/ABORT (output)/HOLD 203              464,500-506\n   STATUS                     1xx,264          460-465,500-505\n   CANCEL                     262              464,500-506\n   ALTER                      263              464,465,500-506\n   OP                         200              500-505\n   Spontaneous                0xx,300,301      434-436\n\n   Note:  For commands appearing on cards, a separate set of error codes\n   is provided (507-512).  Since these error replies are\n   \"asynchronously\" sent, and thus could cause some confusion if the\n   user is in the process of submitting a new job after the present one,\n   the error replies must identify which job has the faulty card(s).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                   18\f\n\n                                               REMOTE Job Entry Protocol\n                                                         (Oct. 16, 1972)\n                                                       RFC 407 NIC 12112\n                                                                        \n                                                                        \n   TYPICAL RJE SCENARIOS\n\n      TIP USER WANTING HOT CARD READER TO HOSTX\n\n         1. TIP user opens TELNET connection to HOSTX socket 5\n\n         2. Commands sent over TELNET to RJE\n\n            USER=myself\n            PASS=dorwssap\n            OUT=H70002\n            INPUT=H50003\n\n         3. RJE-server connects to the TIP's device 5 and begins\n            reading.  When end-of-job card is recognized, the job is\n            queued to run.  The connection to the card reader is still\n            open for more input as another job.\n\n         4. The first job finishes.  A connection to the TIP's device 7\n            is established by RJE-server and the output is sent as an\n            NVT stream.\n\n         5. Continue at any time with another deck at step 3.\n\n      TIP WITH JOB-AT-A-TIME CARD READER\n\n         1. thru 4) the same but User closes Reader after the deck\n\n         2. The output finishes and the printer connection closes.\n\n         3. INPUT may be typed any time after step 3 finishes and\n            another job will be entered starting at 3.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                   19\f\n\n                                               REMOTE Job Entry Protocol\n                                                         (Oct. 16, 1972)\n                                                       RFC 407 NIC 12112\n                                                                        \n                                                                        \n      HOSTA USER RUNS JOB AT HOSTC, INPUT FROM HOSTB\n\n         1. User TELNET connects to HOSTC socket 5 for RJE\n\n            USER=roundabout\n            PASS=aaabbbc\n            OUTUSER=roundab1\n            OUT=:E/.sysprinter\n            OUT puncher = (S)HOSTB:NE/my.savepunch\n            INUSER=rounder\n            INPASS=x.x.x\n            INPUT=HOSTB:E/my.jobinput\n\n         2. The RJE-server has FTP retrieve the input from HOSTB using\n            User-id of \"rounder\" and Password of \"x.x.x\" for file named\n            \"my.jobinput\".\n\n         3. The job finishes.  RJE-server uses FTP to send two files:\n            the print output is sent to HOSTA in EBCDIC with ASA\n            carriage control to file \".sysprinter\" while the file known\n            as \"puncher\" is sent to HOSTB in EBCDIC without\n            carriage-control to file \"my.savepunch\".\n\n         4. when the outputs finish, RJE-server at HOSTC discards the\n            print file but retains the \"puncher\" file.\n\n         5. The User who has signed out after job submission has gotten\n            his output and checked his file \"my.savepunch\" at HOSTB.  He\n            deletes the saved copy at HOSTC by re-calling RJE at HOSTC.\n\n            USER=roundabout\n            PASS=aaabbbcc\n            ABORT job 123 puncher\n                   or\n            CHANGE job 123 puncher = (D)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                   20\f\n"
}