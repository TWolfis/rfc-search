{
  "series": "Request for Comments",
  "number": "297",
  "howpublished": "RFC 297",
  "publisher": "RFC Editor",
  "doi": "10.17487/RFC0297",
  "url": "https://www.rfc-editor.org/info/rfc297",
  "title": "TIP Message Buffers",
  "pagetotal": "2",
  "year": "1972",
  "month": "jan",
  "body": "\n\n\n\n\n\nNETWORK WORKING GROUP                     Dave Walden\nREQUEST  COMMENTS #297                    BBN\nNIC #8485                                 1/31/72\nCategories: C or maybe D\nUpdates: none\nObsoletes: none\n\n                          TIP Message Buffers\n\n     We have recently heard some groaning about the size of the TIP's\nmessage buffers.  While we realize these aren't as big as some Hosts\nmight desire, they aren't as small as the intensity of the groans\nsuggest either.\n\n     Let's first consider messages going from a TIP to another Host.\nThe buffers have the following sizes:\n\n     device numbers           buffer size (in 8 bit characters)\n         1-2                       64\n         3-16                      32\n        17-41                      16\n        42-62                      8\n         63                        6\n\nThe TIP user has the option of having his messages sent 1) every\ncharacter, 2) on line feeds and/or com's, 3) every nth character, or\n4) the OR of 2) and 3). Selecting to have messages sent every large\nnumber of characters, say 100, will result in the TIP sending the\nlongest messages it can for a given device.  Hosts which don't like to\nreceive very short messages might advise users accessing them from a\nTIP to set the TIP's parameters to use the maximum length buffer.\n\n     Now let's consider messages going from another Host to a TIP.\nThe buffers have the following sizes:\n\n     device numbers           buffer size (in 8 bit characters)\n        1                          96\n        2                          64\n        3                          48\n       4-17                        24\n      18-35                        16\n      36-63                         8\n\n\n\n\n\n\n\n\n\n                                                                [Page 1]\n\f\nThe TIP double buffers its terminal output.  Thus, when a TIP terminal\nmakes a connection to a Host, the TIP sends off an allocation of\nbetween 8 and 96 characters, depending on the terminals device number,\nand when a message comes using up the allocation, the TIP immediately\nsends another allocation for the same number of characters while it\nprints the first buffer.\n\n     For traffic both to and from the TIP, lower numbered devices have\nbigger buffers.  Therefore, users of line oriented systems, as well as\nusers of higher speed devices, should try to come in through the lower\nnumbered ports on the TIP's multi-line controller, if possible.\n\n     The sizes of the TIP's message buffers and the number of each\nsize are not permanently fixed and can be changed if a better\ndistribution is suggested.  We didn't know what size buffers to\nprovide so we have provided a variety, What is fairly fixed is the\ntotal amount of buffer space: two output buffers and one input buffer\nfor each of 63 devices must come out of this total buffer space.\n\n     The answer to your question \"Why not dynamically allocate buffers\nat run time?\" is: It is a complicated job to do that.  It requires\nmemory compactions, a mechanism to reclaim space from current users\nwhen a new user comes on, etc.  Our guess is that the code to\ndynamically allocate buffers at run time would reduce the total space\navailable for buffers by about one-fifth.\n\n\n\n\n       [ This RFC was put into machine readable form for entry ]\n       [ into the online RFC archives by BBN Corp. under the   ]\n       [ direction of Alex McKenzie.                   12/96   ]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                                                [Page 2]\n\f\n"
}