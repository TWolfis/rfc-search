{
  "series": "Request for Comments",
  "number": "486",
  "howpublished": "RFC 486",
  "publisher": "RFC Editor",
  "doi": "10.17487/RFC0486",
  "url": "https://www.rfc-editor.org/info/rfc486",
  "title": "Data transfer revisited",
  "pagetotal": "2",
  "year": "1973",
  "month": "mar",
  "body": "\n\n\n\n\n\nNetwork Working Group                           Bob Bressler\nRFC #486                                        BBN\nNIC #15064                                      20 March 1973\n\n\n                        Data Transfer Revisited\n\n\n    A lot of work has recently gone into the development and refinement\nof both the RJE and FTP protocols.  Stepping back from the details and\nsmall issues, we can describe the two protocols as 1) a control\nconnection over which commands are passed, and 2) a data connection over\nwhich uninterpreted (by the server process) data is passed.  Both\nprotocols deal with the concept of identifying oneself to the server,\nsetting up parameters, and transferring some data.\n\n    New ideas and concepts, such as the \"hot card reader\", have been\nintroduced into one protocol or the other, but these concepts are\ngenerally applicable to both.  In addition, a great deal of effort was\nmade to make the structures of the two protocols be as similar as\npossible.\n\n    This discussion is, of course, leading to the suggestion that we\nstop considering these as two separate protocols, and merge them into a\nsingle unit - perhaps resurrecting the name of \"data transfer\".\n\n    Several advantages besides simplicity are gained by this.  Sites\nneed only build one server program - given that they can always respond\nwith \"command not implemented\".  This will also prevent the RJE users\nand servers from having to start up a (possibly) separate FTP user and\nserver - saving the resulting doubling of programs and Telnet\nconnections.\n\n    The further advantage of insuring that new ideas and concepts will\nbe shared by all users and servers will also be realized.  A RJE user\nwill be able to transfer his deck of cards (file) to storage on another\nmachine's file system using the \"hot card reader\" previously defined\nonly in the RJE protocol.\n\n    The command set of the combined protocol would now consist of\nseveral sets of command types.  These sets include:\n\n    a.  general system commands (e.g., USER, HELP)\n\n    b.  parameter settings (e.g., TYPE, STRU)\n\n    c.  data control (e.g., ABORT, REIN)\n\n\n\n\nBressler                                                        [Page 1]\n\f\nRFC 486                 Data Transfer Revisited               March 1973\n\n\n    d.  file operation (e.g., STOR, RETR, LIST)\n\n    e.  job execution (e.g., INPUT, OUTPUT, CHANGE)\n\n    I will not try to completely specify the syntax of each command\nsince they are still being finalized (left as an exercise for the\nreader?).\n\n    An implementor who was only interested in file transfer would\nimplement the general data transfer routines and the small set of file\ntransfer commands.  Another site might also wish to implement the job\nexecution commands.\n\n    Users at traditional RJE stations would be able to store their files\non machines that do not support other RJE functions, by using the file\ntransfer command package in their user machine.  At some later date,\nthey can connect to a batch server elsewhere on the net and instruct it\nto accept its input from the site currently storing the files.  Thus\ncard reader availability and access to a batch machine would not need to\nbe concurrent.\n\n    In an effort to get a feel for the complexity of this suggestions,\nthe latest FTP offering (RFC 454) was compared with the RJE document.\nThe amount of change to the RJE document was in fact relatively small\n(and will perhaps constitute a subsequent RFC).  A possible course of\naction, then, would be to take the \"official FTP\" resulting from the 16\nMarch meeting at BBN and divide the commands into data transfer and file\ntransfer components.  The RJE documents can then be revised or rewritten\nsuch that the \"new\" data transfer protocol will also have an RJE subset.\nThis would be accomplished by recognizing and removing those parts of\nthe RJE that dealt with data transfer, leaving a command subset dealing\nexclusively with job submission and execution.  This course of action is\nintended to cause minimal perturbation on current implementations.\n\n    The intention of this suggestion is not to try and pack everything\ninto a single protocol but to make the large body of common code - the\ntransfer of data - available to current and new protocols.  New ideas,\nbe they mail or load sharing, could be developed more easily given the\ncommon availability of this data transfer mechanism.\n\nRB/jm\n\n\n\n       [ This RFC was put into machine readable form for entry ]\n       [ into the online RFC archives by Alex McKenzie with    ]\n       [ support from GTE, formerly BBN Corp.             9/99 ]\n\n\n\n\nBressler                                                        [Page 2]\n\f\n"
}