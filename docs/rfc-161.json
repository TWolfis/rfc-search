{
  "series": "Request for Comments",
  "number": "161",
  "howpublished": "RFC 161",
  "publisher": "RFC Editor",
  "doi": "10.17487/RFC0161",
  "url": "https://www.rfc-editor.org/info/rfc161",
  "title": "Solution to the race condition in the ICP",
  "pagetotal": "1",
  "year": "1971",
  "month": "may",
  "body": "\n\n\n\n\n\nNetwork Working Group                                        A. Shoshani\nRequest for Comments: 161                                            SDC\nNIC #6772                                                    19 May 1971\n\n\n              A SOLUTION TO THE RACE CONDITION IN THE ICP\n\n   In NWG/RFC #143 a race condition in the ICP was described and a\n   solution was suggested.  The problem arises because the Host-Host\n   protocol does not specify what the NCP should do when it gets more\n   than one request of STR (or RTS) to the same socket.  As a result\n   this decision depends on the particular implementation: some may\n   queue these requests (SDC for example), some will refuse a request if\n   the socket is already connected (UCLA for example), etc.\n\n   The solution is not to change the Host-Host protocol, but find a\n   third level ICP which does not depend on this issue.  Such a solution\n   is the following: the INITs from server to user and user to server\n   ((S5), (S6), (U5), (U6) on page 3 in RFC #143) should use another\n   socket -- say U+2 and U+3.  The sequences in RFC #143 would be:\n\n      Server                             User\n      ------                             ----\n      (S1) LISTEN(L,32)                  (U1) INIT(U,L,32)\n      (S2) [wait for match]              (U2)\n      (S3) SEND(L,S)                     (U3) RECEIVE(U,S)\n      (S4) CLOSE(L)                      (U4) CLOSE(U)\n      (S5) INIT(S,U+3,Bu)                (U5) INIT(U+3,S,Bu)\n      (S6) INIT(S+1,U+2,Bs)              (U6) INIT(U+2,S+1,Bs)\n\n\nThis solution will solve the problems pointed out in RFC #143 without\nany assumptions made about the NCP implementation.  The solution in RFC\n#143 assumes that the NCP can notify a process when a command (e.g.,\nclose) comes in, which is implementation dependent.\n\n\n\n\n       [ This RFC was put into machine readable form for entry ]\n          [ into the online RFC archives by Alan Ford 08/99]\n\n\n\n\n\n\n\n\n\n\nShoshani                                                        [Page 1]\n\f\n"
}