{
  "series": "Request for Comments",
  "number": "181",
  "howpublished": "RFC 181",
  "publisher": "RFC Editor",
  "doi": "10.17487/RFC0181",
  "url": "https://www.rfc-editor.org/info/rfc181",
  "title": "Modifications to RFC 177",
  "pagetotal": "3",
  "year": "1971",
  "month": "jul",
  "body": "\n\n\n\n\n\n                         NETWORK WORKING GROUP\n\n                        REQUEST FOR COMMENTS 181\n\n                               NIC #7124\n\n                             JUNE 27, 1971\n\n\n\n                            JOHN Mc CONNELL\n\n\n                          AMES RESEARCH CENTER\n\n                        MOFFET FIELD, CALIFORNIA\n\n\n\n                       MODIFICATIONS TO RFC #177\n\n\n\n\nCATEGORY  D.6\nRFC's Obsoleted  none\nRFC's Updated    177\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                                                [Page 1]\n\f\n                      MODIFICATIONS TO RFC #177\n\n    This RFC is intended to modifiy the proposal for a device\nindependent graphical display description discussed in RFC #177.  Thanks\nare due to Stan Mantiply of Ames for his ideas.  The main changes are in\nthe defini- tion of coordinate areas to avoid one problem encountered\nwith the old definition and to provide more flexibility.  Terms used are\nthose defined in RFC #177.\n\n    The problem encountered in the previous proposal was that the areas\nof the NGS (network standard graphics screen), which were supposed to be\nabsolute boundaries, could be crossed when a list was executed within\nthat space.  Scaling of lists was also awkwardly done with specific\ncommands in the network standard graphic display list (NGDL).\n\n    Coordinates will still be defined with 16 bit unsigned normalized\nfractions.  This will leave the resolution of the picture up to the de-\nvice which eventually receives the NGDL.  The values will not now be\ntied to the NGS or an area of the screen, but will be fractional\ndisplace- ments from the lower left corner of the screen, an area, or an\nimage space.\n\n    Areas will still be rectangular and will be allowed to overlap, but\nnot contain another area completely.  The attributes of an area are: its\n16 bit integer name, by which it may be manipulated, two (x,y) pairs\nwhich will define its lower left and upper right corners with respect to\nthe NGS.  No list executed in an area may cross its boundaries.  Within\nan area may be any number of image spaces which are dynamically defined\nwith the execution of a list and define its relationship to the contain-\ning area.\n\n    The list item types 7 and 8 shall be changed from EXECUTE LIST\n(Name,x,y) and COPY LIST (Name,x,y) to EXECUTE LIST\n(Name,(Xl,Yl),(Xr,Yr)) and COPY LIST (Name,(Xl,Yl),(Xr,Yr))\nrespectively.  The coordinate pairs (Xl,Yl) and (Xr,Yr) define the image\narea of that list as displacements from the lower left corner of the\ncontaining area.  If the list executes other lists within it, their\nimage areas are defined as displacements from the image area of the list\ncontaining the execute command.  Thus each list can be scaled\ndifferently each time it is executed and may even be distorted if the\nimage area defined has different ratios of X and Y lengths.  Lists\nexecuted within other lists will have the same relationship to their\ncontaining lists regardless of that lists's rela- tionship to the NGS\narea.  Since the initial image area is defined rela- tive to the NGSD\narea, no overlaps can occur.\n\n\n\n\n\n\n                                                                [Page 2]\n\f\nIf a table (item type = 9) is executed, the coordinate pairs it\ncontains are relative to whatever area is valid at the time of its exe-\ncution.\n\n    A change to the NGLI is implied.  Whenever an EXECUTE LIST command\nis encountered, the current state is saved, a new current origin is com-\nputed, NGLP is reset to zero, and new X and Y scale factors must be cal-\nculated to transform the coordinates in the new list to actual screen\ncoor- dinates.\n\n    Another construct for graphics processing will be added.  This is\nthe mode stack for each graphics mode.  It will be used for saving and\nrestoring character and vector mode values as lists are recursively exe-\ncuted.  Four new list items will be added to handle these operations.\n\n   PUSH CHARACTER MODE    (item type = 14)\n   PUSH VECTOR MODE       (item type = 15)\n   POP CHARACTER MODE     (item type = 16)\n   POP VECTOR MODE        (item type = 17)\n\n    The DEFINE LIST command (type = 1) shall have its parameters\nchanged.  It shall have two parameters, a 16 bit integer name, by which\nit may be manipulated and referenced, and a 16 bit integer defining the\nlength of the list in bytes rather than items.  This change is intended\nto make processing the NGDS easier and will eliminate the TABLE item\n(type = 11).\n\n    The first three list items should have the WORD IMAGE eliminated\nfrom them, since they are defining NGS areas now.\n\n    The list command DEFINE IMAGE ARE (type = 2) shall be changed to\nDEFINE AREA for the same reasons.\n\n\n       [ This RFC was put into machine readable form for entry ]\n         [ into the online RFC archives by Gert Doering 6/97 ]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                                                [Page 3]\n\f\n"
}