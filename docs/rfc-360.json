{
  "series": "Request for Comments",
  "number": "360",
  "howpublished": "RFC 360",
  "publisher": "RFC Editor",
  "doi": "10.17487/RFC0360",
  "url": "https://www.rfc-editor.org/info/rfc360",
  "title": "Proposed Remote Job Entry Protocol",
  "pagetotal": "18",
  "year": "1972",
  "month": "jun",
  "body": "\n\n\n\n\n\nNetwork Working Group                                         C. Holland\nRequest for Comments: 360                                        UCSD-CC\nCategory: Protocols, RJE                                       June 1972\nNIC: 10602\n\n\n                   PROPOSED REMOTE JOB ENTRY PROTOCOL\n\n   Remote job entry is the mechanism whereby a user at one location\n   causes a batch-processing job to be run at some other location.  This\n   protocol specifies the Network standard procedures for such a user to\n   communicate over the Network with a remote batch-processing server,\n   causing that server to retrieve a job-input file, process the job,\n   and deliver the job's output file(s) to a remote location.  The\n   protocol uses TELNET (to a special standardized logger, not socket 1)\n   connection for all control communication between the user and the\n   server RJE process.  The server-site then uses the File Transfer\n   Protocol to retrieve the job-input file and to deliver the output\n   file(s).\n\n   There are two types of users: direct users (persons) and user\n   processes.  The direct user communicates from an interactive terminal\n   attached to a TIP or any host.  This user may cause the input and/or\n   output to be retrieved/sent on a specific socket at the specified\n   host (such as for card readers or printers on a TIP), or the user may\n   have the files transferred by pathname using File Transfer Protocol.\n   The other type of user is an RJE User-process in one remote host\n   communicating with the RJE Server-process in another host.  This type\n   of user ultimately receives its instructions from a human user, but\n   through some unspecified indirect means.  The command and response\n   streams of this protocol are designed to be readily used and\n   interpreted by both the human user and the user process.\n\n   A particular user location may choose to establish the TELNET control\n   connection for each logical job or may leave the control connection\n   open for extended periods.  If the control connection is left open,\n   then multiple job-files may be directed to be retrieved or optionally\n   (to servers that are able to determine the end of one logical job by\n   the input stream and form several jobs out of one input file) one\n   continuous retrieval may be done (as from a TIP card reader).  This\n   then forms a \"hot\" card reader to a particular server with the TELNET\n   connection serving as a \"job monitor\".  Since the output is always\n   transferred job at a time per connection to the output socket, the\n   output from this \"hot\" reader would appear when ready as if to a\n   \"hot\" printer.  Another possibility for more complex hosts is to\n   attach an RJE User-process to a card reader and take instructions\n   from a lead control card, causing an RJE control TELNET to be opened\n   to the appropriate host with appropriate logon and input retrieval\n\n\n\nHolland                                                         [Page 1]\n\f\nRFC 360                     REMOTE JOB ENTRY                   June 1972\n\n\n   commands.  This card reader would appear to the human user as a\n   Network \"host\" card reader.  The details of this RJE User-process are\n   beyond the scope of this protocol.\n\n   GENERAL SPECIFICATIONS\n\n   1.   User - A human user at a real terminal or a process that\n        supplies the command control stream causing a job to be\n        submitted remotely will be termed the User.  The procedure by\n        which a process user receives its instructions is beyond the\n        scope of this protocol.\n\n   2.   User TELNET - The User communicates its commands over the\n        Network in Network Virtual Terminal code through a User TELNET\n        process in the User's Host.  This User TELNET process initiates\n        its activity via ICP to the standard \"RJE logger\" socket (socket\n        5) at the desired RJE-server Host.\n\n   3.   RJE-server TELNET - The RJE-server process receives its command\n        stream from and sends its response stream to the TELNET channel\n        through an RJE-server TELNET process in the server host.  This\n        process must listen for the ICP on the \"RJE logger\" socket (and\n        cause appropriate ICP socket shifting).\n\n   4.   TELNET Connection - The command and response streams for the RJE\n        mechanism are via a TELNET-like connection to a special socket\n        with full specifications according to the current NWG TELNET\n        protocol.\n\n   5.   RJE-Server - The RJE-Server process resides in the Host which is\n        providing Remote Batch Job Entry service.  This process receives\n        input from the RJE-Server TELNET, controls access through the\n        \"logon\" procedure, retrieves input job files, queues jobs for\n        execution by the batch system, responds to status inquiries, and\n        transmits job output files when available.\n\n   6.   User FTP - All input and output files are transferred under\n        control of the RJE-server process at its initiative.  Those\n        files may be directly transferred via Request-for-connection to\n        a specific Host/socket or they may be transferred via File\n        Transfer Protocol.  If the later method is used, then the RJE-\n        server acts through its local User FTP process to cause the\n        transfer.  This process initiates activity by an active\n        Request-for-connection to the \"FTP Logger\" in the foreign host.\n\n\n\n\n\n\n\nHolland                                                         [Page 2]\n\f\nRFC 360                     REMOTE JOB ENTRY                   June 1972\n\n\n   7.   Server FTP - This process in a remote host (remote from the\n        RJE-server) listens for an ICP from the User FTP and then acts\n        upon the commands from the User FTP causing the appropriate file\n        transfer.\n\n   8.   FTP - When File Transfer Protocol is used for RJE files, the\n        standard FTP mechanism is used as fully specified by the current\n        NWG FTProtocol.\n\n   9.   RJE Command Language - The RJE system is controlled by a command\n        stream from the User over the TELNET connection specifying the\n        user's identity (logon), the source of the job input file, the\n        status, altering job status or output disposition.  Additional\n        commands affecting output disposition are includable in the job\n        input file.  This command language is explicitly specified in a\n        following section of this protocol.\n\n   10.  RJE Command Replies - Every command input from the User via\n        TELNET and certain other conditions calls for a response message\n        from the RJE-server to the User over the TELNET connection.\n        These messages are formatted in a standardized manner to\n        facilitate interpretation by both human Users and User\n        processes.  A following section of this protocol specifies the\n        response messages.\n\n   RJE COMMANDS OVER TELNET CONNECTION\n\n   GENERAL CONVENTIONS\n\n   1.   All commands will be contained in one input line terminated by\n        the standard TELNET \"crlf\".  The line may be of any length\n        desired by the user (explicitly, not restricted to a physical\n        terminal line width).  The characters \"cr\" and \"lf\" will be\n        ignored by the RJE-server except in the explicit order \"crlf\"\n        and may be used as needed for local terminal control.\n\n   2.   All commands will begin with a recognized command name and may\n        then contain recognized syntactic element strings and free-form\n        variable strings (for userid, pathnames, etc.).  Recognized\n        words consist of alphanumeric strings (letters and digits) or\n        punctuation.  Recognized alphanumeric string elements must be\n        separated from each other and from unrecognizable strings by at\n        least one blank or a syntactically permitted punctuation.  Other\n        blanks may be used freely as desired before or after any\n        syntactic element.  The \"=\" after the command name in all\n        commands except OUT and CHANGE are optional.\n\n\n\n\n\nHolland                                                         [Page 3]\n\f\nRFC 360                     REMOTE JOB ENTRY                   June 1972\n\n\n   3.   Recognized alphanumeric strings may contain upper case letters\n        or lower case letters in any mixture without syntactic\n        differentiation.  Unrecognizable strings will be used exactly as\n        presented with full differentiation of upper and lower case\n        input, unless the host finally using the string defines\n        otherwise.\n\n   4.   There are two types of Unrecognizable strings: final and\n        imbedded.  Final strings appear as the last syntactic element of\n        a command and are parsed as beginning with the next non-blank\n        character of the input stream and continuing to the last non-\n        blank character before the \"crlf\".\n\n        Imbedded strings include \"job-id\" and \"job-file-id\" in the OUT,\n        CHANGE, and ALTER commands.  At present these fields will be\n        left undelimitted since they must only be recognizable by the\n        server host which hopefully can recognize its own job-ids and\n        file-names.\n\n   SYNTAX: The following command descriptions are given in a BNF-like\n        syntax.  Parenthesized names are non-terminal syntactic elements\n        which are expanded in succeeding syntactic equations.  Each\n        equation has the defined name on the left of the ::= and a set\n        of alternative definitions, separated by slashes \"/\", on the\n        right.  The equations for (host-file) and (disp) use the\n        characters \"/\" \"( )\" explicitly in their definitions.  In these\n        cases the quotes are not part of the definition, but surround\n        literal text which is part.\n\n   USER\n\n     USER = (user-id)\n\n     This command must be the first command over a new TELNET\n     connection.  As such, it initiates a \"logon\" sequence.  The\n     response to this command is either\n\n      a) User code in error.\n      b) Enter password (if usercode ok)\n      c) Log-on ok, proceed.  (if no password required)\n\n     Another USER command may be sent by the User at any time to change\n     Users.  Further input will then be charged to the new user.  A\n     server may refuse to honor a new user command if it is not able to\n     process it in its current stat (during input file transfer, for\n     example), but the protocol permits the USER command at any time\n\n\n\n\n\nHolland                                                         [Page 4]\n\f\nRFC 360                     REMOTE JOB ENTRY                   June 1972\n\n\n     without altering previous activity.  An incorrect subsequent USER\n     command or its following PASS command are to be ignored with error\n     response, leaving the original User logged-in.\n\n     It is permissable for a server to close the TELNET connection if\n     the initial USER/PASS commands are not completed within a server\n     specified time period.\n\n     It is not required or implied that the \"logged-on\" User be the\n     user-id used for file transfer or job execution, but only\n     identifies the submitter of the command stream.  Servers will\n     establish their own rules relating User-id with the job-execution-\n     user for Job or Output alteration commands.\n\n     Successful \"log-on\" always clears any previous Input or Output\n     default parameters (INID, etc.).\n\n   PASS\n\n      PASS = (password)\n\n      This command immediately follows a USER command and completes the\n      \"log-on\" procedure.  Although a particular Server may not require\n      a password and has already indicated \"log-on ok\" after the USER\n      command, every Server must permit a PASS command (and possibly\n      ignore it) and acknowledge it with a \"log-on ok\" if the log-on is\n      completed.\n\n   BYE\n\n      BYE\n\n      This command terminates a USER and if input transfer is not in\n      progress, closes the TELNET connection.  If input is in progress,\n      the connection will remain open for result response and will then\n      close.  During the interim, a new USER command (and no other\n      command) is acceptable.\n\n      An unexpected close on the TELNET connection will cause the server\n      to take the effective action of an ABORT and BYE.\n\n   INID/INPASS\n\n      INID = (user-id)\n      INPASS = (password)\n\n\n\n\n\n\nHolland                                                         [Page 5]\n\f\nRFC 360                     REMOTE JOB ENTRY                   June 1972\n\n\n      The specified Userid and Password will be sent in the File\n      Transfer request to retrieve the input file.  These parameters are\n      not used by the Server in any other way.  If this command does not\n      appear, then the USER/PASS parameters are used.\n\n   INPATH/INPUT\n\n      INPATH = (pathname)\n      INPUT = (pathname)\n      INPUT\n\n      NOTE: The following syntax will also be used for output\n      (pathname).\n\n      (pathname)::= (host-socket) / (host-file)\n      (host-socket)::= (host),(socket) / (socket)\n           no (host) part implies the User-site host\n      (host)::= (decimal-integer) / (standard-host-name)\n      (socket)::= (decimal-integer) / PORT (decimal-integer)\n           (decimal-integer) implies explicit socket, lower bit\n                will be set appropriately for the direction\n           PORT implies the specified port-sockets for a TIP\n                Tip-Socket = Port * 2**16 + (2 or 3)\n      (host-file)::= (host)(attributes)\"/\"(file-name)\n      (attributes)::= (empty) / : (transmission)(code)\n      (transmission)::= (empty) / T / A / N\n           (empty) implies default which is\n                N for Input files\n                A for output files\n           T specifies TELNET-like coding with imbedded \"crlf\"\n                for new-line, \"ff\" for new-page\n           N specifies FTP blocked transfer with record marks\n                but without other carriage-control\n           A specifies FTP blocked records with ASA carriage-\n                control (column 1 of image is forms control)\n      (code)::= (empty) / E\n            (empty) specifies NVT ASCII code\n            E specifies EBCDIC (TE not allowed)\n      (file-name)::= (any string recognized by the\n                 FTP Server at the site of the file)\n\n   The (pathname) syntax is the general RJE mechanism for specifying a\n   particular file source or destination for input or output.  If the\n   (host-socket) form is used then direct transfer will be made by the\n   RJE-Server to the named socket using TELNET-like ASCII.  If the\n   (host-file) form is used then the RJE-server will call upon its local\n   FTP-user process to do the actual transfer.  The data stream in this\n   mode is either TELNET-like ASCII or blocked records (which may use\n\n\n\nHolland                                                         [Page 6]\n\f\nRFC 360                     REMOTE JOB ENTRY                   June 1972\n\n\n   column 1 for ASA carriage-control).  Although A mode is permitted on\n   input (column 1 is deleted) the usual mode would be the default N.\n   The output default A would supply carriage-control in the first\n   character of each record (\"blank\"= single-space, \"1\"=new-page, etc.),\n   while the optional N mode would transfer the data only (as to a card\n   punch, etc.).\n\n   The (file-name) is an arbitrary Unrecognized string which is saved by\n   RJE-server and sent back over FTP to the FTP-server to retrieve or\n   store the appropriate files.\n\n   INPATH or INPUT commands first store the specified (pathname) if one\n   is supplied, and then the INPUT command initiates input.  The INPATH\n   name may be used to specify a pathname for later input and the INPUT\n   command without pathname will cause input to initiate over a\n   previously specified pathname.  An INPUT \"crlf\" command with no\n   previous (pathname) specified is illegal.\n\n   ABORT\n\n      ABORT\n\n      This command aborts any input retrieval in progress, discards\n      already received records, and closes the retrieval connection.\n\n      Note: ABORT with parameters is an Output Transmission control.\n\n   OUTUSER/OUTPASS\n\n      OUTUSER = (user-id) OUTPASS = (password)\n\n      The specified Userid and Password will be sent in the File\n      Transfer request to send the output file(s).  These parameters are\n      not used by the Server in any other way.  If this command does not\n      appear, then the USER/PASS parameters are used.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHolland                                                         [Page 7]\n\f\nRFC 360                     REMOTE JOB ENTRY                   June 1972\n\n\n   OUT\n\n      OUT (out-file) = (disp)(pathname)\n\n      (out-file)::= (empty) / (job-file-id)\n           (empty) implies the primary print file of the job\n      (job-file-id)::= (string representing a specific output file\n                from the job as recognized by the Server)\n      (disp)::= (empty) / \"(H)\" / \"(S)\" / \"(D)\"\n           (empty) specifies Transmit then discard\n           (H) specifies Hold-only, do not transmit\n           (S) specifies Transmit and Save\n           (D) specified discard without transmitting\n         Note: Parentheses are part of the above elements.\n      (pathname)  see INPUT command\n\n      This command specifies the disposition of output file(s) produced\n      by the job.  Unspecified files will be Hold-only by default.  The\n      OUTUSER, OUTPASS, and OUT commands must be specified before INPUT\n      command to be effective.  These commands will affect any following\n      jobs submitted by this USER over this RJE-TELNET connection.  A\n      particular job may override these commands by NET control cards on\n      the front of the input file.\n\n      Once output disposition is specified by this OUT command or by a\n      NET OUT card, the information is kept with the job until final\n      output disposition, and is modifiable by the CHANGE command.\n\n   OUTPUT RE-ROUTE\n\n      CHANGE (job-id)(out-file) = (disp)(pathname)\n\n      This command changes the output disposition supplied with the job\n      submission.  The (job-id) is assumed recognizable by the RJE-\n      server, who may verify if this USER is authorized to modify the\n      specified job.  After the job is identified, the other information\n      has the same syntax and semantics as the original OUT command.\n      CHANGE command may be specified for a job-file-id which was not\n      mentioned at submission time and has the same effect as an\n      original OUT command.\n\n\n\n\n\n\n\n\n\n\n\nHolland                                                         [Page 8]\n\f\nRFC 360                     REMOTE JOB ENTRY                   June 1972\n\n\n   OUTPUT CONTROLS DURING TRANSMISSION\n\n      (command)(count)(what)\n\n      (command)::= RESTART / RECOVER / BACK / SKIP / ABORT / HOLD\n           these commands specify\n                Restart the transmission (new RFC, etc.)\n                Recover restarts transmission from last\n                   FTP Restart-marker-reply (see FTP).\n                Back up the output \"count\" blocks\n                Skip the output forward \"count\" blocks\n                Abort the output, discarding it\n                Hold the output after Aborting it\n      (count)::= (empty) / (decimal-integer)\n           (empty) implies  1 where defined\n      (what)::= @(pathname) / (job-id)(job-file-id)\n           (pathname) is as in the INP command\n      (job-id)::= (server recognized job identifier which was\n                supplied at INP completion by the server)\n      (job-file-id)::= (server recognized file identifier or\n                if missing then the prime printer output\n                of the specified job)\n\n      This collection of commands will modify the transmission of output\n      in progress or recently aborted.  If output transmission is cut-\n      off before completion, then the RJE-server will either try to\n      resend the entire file if the file's (disp) was Transmit-and-\n      discard or will Hold the file for further User control if the\n      (disp) was (S) transmit-and Save.  Either during transmission,\n      during the Save part of a transmit-and-Save, or for a Hold-only\n      file; the above commands may be used to control the transmission.\n      The @(pathname) form of (what) is permitted only if transmission\n      is actually in progress.\n\n      If the file's state is inconsistent with the command then the\n      command is illegal and ignored with reply.\n\n   STATUS\n\n      STATUS\n      STATUS (job-id)\n\n      These commands request the status of either the RJE-server or a\n      particular job respectively.  The information content of the\n      Status reply is site dependent.\n\n\n\n\n\n\nHolland                                                         [Page 9]\n\f\nRFC 360                     REMOTE JOB ENTRY                   June 1972\n\n\n   CANCEL/ALTER\n\n      CANCEL (job-id)\n      ALTER  (job-id) (site dependent options)\n\n      These commands change the course of a submitted job.  CANCEL\n      specifies that the job is to be immediately terminated and any\n      output discarded.  ALTER provides for system dependent options\n      such as changing job priority, process limits, Terminate without\n      Cancel, etc.\n\n   OP\n\n      OP (any string)\n\n      The specified string is to be displayed to the Server site\n      operator when any following job is initiated servicing from the\n      batch queue of the Server.  This command usually appears in the\n      input file as a NET OP control card, but may be a TELNET command.\n      It is cancelled as a all-jobs command by an OP \"crlf\" command (no\n      text supplied).\n\n   RJE CONTROL CARDS IN THE INPUT FILE\n\n   Certain RJE commands may be specified by control cards in the front\n   of the input file.  If these controls appear, they take precedence\n   over the same command given thru the RJE-TELNET connection and affect\n   only this specific job.\n\n   All these RJE control cards must appear as the first records of the\n   job's input-file.  They all contain the control word NET in columns\n   1-2.  Scanning for these controls stop when the first card without\n   NET in col 1-3 is encountered.\n\n   The control commands appear in individual records and are terminated\n   by the end-of-record (usually an 80 column card-image).  Continuation\n   is permitted onto the next record by the appearance of NET+ in\n   columns 1-4 of the next record.  Column 5 of the next record\n   immediately follows the last character of the previous record.\n\n   NET OUTUSER = (userid)\n\n   NET OUTPASS = (password)\n\n   NET OUT (out-file) = (disp)(pathname)\n\n   NET OP (any string)\n\n\n\n\nHolland                                                        [Page 10]\n\f\nRFC 360                     REMOTE JOB ENTRY                   June 1972\n\n\n   See the corresponding TELNET commands for details.  One option\n   permitted by the NET OUTUSER and NET OUT controls not possible from\n   the TELNET connection is specification of different OUTUSERs for\n   different OUTs, since the TELNET stores and supplies only an initial\n   OUTUSER, but the controls may change OUTUSERs before each OUT control\n   is encountered.\n\n   RJE USE OF FILE TRANSFER PROTOCOL\n\n   Most non-TIP files will be transferred to or from the RJE-server\n   through the FTP process.  RJE-server will call upon its local FTP-\n   user supplying the Host, File-pathname, User-id, Password, and Mode\n   of the desired transfer.  FTP-user will then connect to its FTP-\n   server counterpart in the specified host and set up a transfer path.\n   Data will then flow through the RJE-FTP interface in the Server, over\n   the Network, from/to the foreign FTP-server and then from/to the\n   specified File-pathname in the foreign host's file storage space.  On\n   output files, the file-pathname may be recognized by the foreign host\n   as directions to a printer or the file may simply be stored; a User-\n   RJE-process can supply output (pathname) by default which is\n   recognized by its own Server-FTP as routing to a printer.\n\n   Although many specifics of the RJE-Server/User-FTP interface are\n   going to be site dependent, there are several FTP options which will\n   be used in a standard way by RJE-Servers:\n\n   1.   A new FTP connection will be initiated for each file to be\n        transferred.  The connection will be opened with the RJE User\n        supplied User-id (OUTUSER or INUSER) and Password.\n\n   2.   The data bytesize will be 8 bits.\n\n   3.   The FTP Type, Structure, and Mode parameters are determined by\n        the RJE transfer direction (I/O), the (transmission and (code)\n        options supplied by the User:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHolland                                                        [Page 11]\n\f\nRFC 360                     REMOTE JOB ENTRY                   June 1972\n\n\n                I/O   (TRANS)   (CODE)   FTP TYPE   STRUCTURE   MODE\n                ----------------------------------------------------\n                I*      N        -       Ascii         R       Hasp\n                I       N        E       Image         R       Hasp\n                I       T        -       Ascii         F       Ascii\n                I       A        -       Ascii         R       Hasp\n                I       A        E       Image         R       Hasp\n\n                O*      A        -       Ascii-print   R       Hasp\n                O       A        E       Ebcdic-print  R       Hasp\n                O       N        -       Ascii         R       Hasp\n                O       N        E       Image         R       Hasp\n                O       T        -       Ascii-print   F       Ascii\n\n                 Note: The I* and O* are the default cases.\n\n   4.   The service commands used will be Retrieve for input and Append\n        (with create) for output.  The FTP pathname will be the (file-\n        name) supplied by the RJE User.\n\n   5.   On output in Hasp form, the User-FTP at the RJE-Server site will\n        send Restart-markers at periodic intervals (like every 100\n        lines, or so), and will remember the latest Restart-marker-reply\n        with the file.  If the file transfer is not completed and the\n        (disp) is (S) then the file will be held pending User\n        intervention.  The User may then use the RECOVER command to\n        cause a FTP restart at the last remembered Restart-marker-reply.\n\n   6.   The FTP Abort command will be used for the RJE ABORT and CANCEL\n        commands.\n\n   The specific form of the FTP commands used by an RJE-Server site, and\n   the order in which they are used will not be specified in this\n   protocol.\n\n   Errors encountered by FTP fall into three categories: a)access errors\n   or no storage space error; b)command format errors; and c)transfer\n   failure errors.  Since the commands are created by the RJE-Server\n   process, an error is a programming problem and should be logged for\n   attention and the situation handled as safely as possible.\n   Transmission failure or access failure on input cause an effective\n   ABORT and user notification.  Transmission failure on output causes\n   RESTART or Save depending on (disp).  (see OUT command.) Access\n   failure on output is a problem since the User may not be accessible.\n   A status response should be queued for that user, should he happen to\n   inquire; a (disp)=(S) file should be Held; and a  (disp)=(empty)\n   transmit-and-discard file should be temporarily held and then\n   discarded after a reasonable time if not claimed.\n\n\n\nHolland                                                        [Page 12]\n\f\nRFC 360                     REMOTE JOB ENTRY                   June 1972\n\n\n   REPLIES OVER THE TELNET CONNECTION\n\n   Each action of the RJE-server, including entry of each TELNET\n   command, is noted over the TELNET connection to the User.  These\n   RJE-server replies are formatted for Human or Process interpretation.\n   They consist of a leading 3-digit numeric code followed by a blank\n   followed by a text explanation of the message.  The numeric codes are\n   assigned by groups for future expansion to hopefully cover other\n   protocols besides RJE (like FTP).  The numeric code is designed for\n   ease of interpretation by processes.  The three digits of the code\n   are interpreted as follows:\n\n   a) The first digit specifies the \"type\" of response indicated:\n\n      000 These \"replies\" are purely informative, and are issued\n          voluntarily by the Server to inform a User of some state of\n          the server's system.\n\n      100 Replies to a specific status inquiry.  These replies server as\n          both information and as acknowledgement of the status request.\n\n      200 Positive acknowledgement of some previous command/request.\n          The reply 200 is a generalized \"ok\" for commands which require\n          no other comment.  Other 2xx replies are specified for\n          specific successful actions.\n\n      300 Incomplete information supplied so far.  No major problem, but\n          activity can not proceed with the input supplied.\n\n      400 Unsuccessful reply.  A request was correctly specified, but\n          could not be correctly completed.  Further attempts will\n          require User commands.\n\n          500 Incorrect or illegal command.  The command or its\n          parameters were invalid or incomplete from a syntactic view,\n          or the command is inconsistent with a previous command.  The\n          command in question has been totally ignored.\n\n      600-900 Reserved for expansion.\n\n   b) The second digit specifies the general subject to which the\n      response refers:\n\n      x00-x29 General purpose replies, not assignable to other subjects.\n\n      x30 Primary access.  There replies refer to the attempt to \"log-\n          on\" to a Server service (RJE, FTP, etc.).\n\n\n\n\nHolland                                                        [Page 13]\n\f\nRFC 360                     REMOTE JOB ENTRY                   June 1972\n\n\n      x40 Secondary access.  The primary Server is commenting on its\n          ability to access a secondary service (RJE must log-on to a\n          remote FTP service).\n\n      x50 FTP results.\n\n      x60 RJE results.\n\n      x70-x99 Reserved for expansion.\n\n   c) The final digit specifies a particular message type.  Since the\n      code is designed for an automation process to interpret, it is not\n      necessary for every variation of a reply to have a unique number,\n      only that the basic meaning have a unique number.  The text of a\n      reply can explain the specific reason for the reply to a human\n      User.\n\n   Each TELNET line (ended by \"crlf\") from the Server is intended to be\n   a complete reply message.  If it is necessary to continue the text of\n   a reply onto following lines, then those continuation replies contain\n   the special reply code of three blanks.\n\n   The assigned reply codes relating to RJE are:\n\n      000 General information message (time of day, etc.)\n      030 Server availability information\n      050 FTP commentary or user information\n      060 RJE or Batch system commentary or information\n      100 System status reply\n      150 File status reply\n      151 Directory listing reply\n      160 RJE system general status reply\n      161 RJE job status reply\n      200 Last command received ok\n      201 An ABORT has terminated activity, as requested\n      202 ABORT request ignored, no activity in progress\n      203 The requested Transmission Control has taken effect\n      230 LOG-on completed\n      231 Log-off completed, goodbye.\n      232 Log-off noted, will complete when transfer done\n      240 File transfer has started\n      250 FTP file transfer started ok\n      251 FTP Restart-marker-reply\n            Text is: MARK yyyy = mmmm\n             where yyyy is data stream marker value (yours)\n              and mmmm is receiver's equivalent mark (mine)\n      252 FTP transfer completed ok\n      253 Rename completed\n\n\n\nHolland                                                        [Page 14]\n\f\nRFC 360                     REMOTE JOB ENTRY                   June 1972\n\n\n      254 Delete completed\n      260 Job (job-id) accepted for processing\n      261 Job (job-id) completed, awaiting output transfer\n      262 Job (job-id) Cancelled as requested\n      263 Job (job-id) Altered as requested to state (status)\n      300 Connection greeting message, awaiting input\n      301 Current command not completed\n             (may be sent after suitable delay, if no \"crlf\")\n      330 Enter password\n             (may be sent with hide-your-input mode)\n      360 INPUT has never specified an INPATH\n      400 This service is not implemented\n      401 This service is not accepting log-on now, goodbye.\n      430 Log-on time or tries exceeded, goodbye.\n      431 Log-on unsuccessful, user and/or password invalid\n      432 User not valid for this service\n      434 Log-out forced by operator action, please phone site\n      435 Log-out forced by system problem\n      436 Service shutting down, goodbye.\n      440 RJE could not log-on to remote FTP for input transfer\n      441 RJE could not access the specified input file through FTP\n      442 RJE could not establish (host-socket) input connection\n      443 RJE could not log-on to remote FTP for output delivery\n      444 RJE could not access file space given for output\n      445 RJE could not establish (host-socket) output connection\n      450 FTP: The named file does not exist (or access denied)\n      451 FTP: The named file space not accessible by YOU\n      452 FTP: Transfer not completed, data connection closed\n      453 FTP: Transfer not completed, insufficient storage space\n      460 Job input not completed, ABORT performed\n      461 Job format not acceptable for processing, Cancelled\n      462 Job previously accepted has mysteriously been lost\n      463 Job previously accepted did not complete\n      464 Job-id referenced by STATUS, CANCEL, ALTER, CHANGE, or\n            Transmission Control is not known (or access denied)\n      465 Requested Alteration not permitted for the specified job\n      466 Un-deliverable, un-claimed output for (job-id) discarded\n      500 Last command line completely unrecognized\n      501 Syntax of the last command is incorrect\n      502 Last command incomplete, parameters missing\n      503 Last command invalid, illegal parameter combination\n      504 Last command invalid, action not possible at this time\n      505 Last command conflicts illegally with previous command(s)\n      506 Requested action not implemented by this Server\n\n\n\n\n\n\n\nHolland                                                        [Page 15]\n\f\nRFC 360                     REMOTE JOB ENTRY                   June 1972\n\n\n   SEQUENCING OF COMMANDS AND REPLIES\n\n   The communication between the User and Server is intended to be an\n   alternating dialogue.  As such, the User issues an RJE command and\n   the Server responds with a prompt primary reply.  The User should\n   wait for this initial success or failure response before sending\n   further commands.\n\n   A second type of reply is sent by Server asynchronously with respect\n   to User commands.  These replies report on the progress of a job\n   submission caused by the INPUT command and as such are secondary\n   replies to that command\n\n   The final class of Server \"replies\" are strictly informational and\n   may arrive at any time.  These \"replies\" are listed below as\n   spontaneous.\n\n                    COMMAND-REPLY CORRESPONDENCE TABLE\n\n   COMMAND                  Success        Fail\n   -------                  -------        ----\n   USER                     230,330        430,431,432,500-505\n   PASS                     230            430,431,432,500-505\n   BYE                      231,232        500-505\n   INID                     200            500-505\n   INPASS                   200            500-505\n   INPATH                   200            500-505\n   INPUT                    240            360,440-442,500-505\n     sec. Input retrieval   260            460,461\n     sec. Job execution     261            462,463\n     sec. Output Transmission --           443,444,445,446\n   ABORT (input)            201,202        500-505\n   OUTUSER                  200            500-505\n   OUTPASS                  200            500-505\n   OUT                      200            500-505\n   CHANGE                   200            500-505\n   RESTART/RECOVER/BACK/\n    SKIP/ABORT(output)/HOLD 203            464,500-506\n   STATUS                   1xx            464,500-505\n   CANCEL                   262            464,500-506\n   ALTER                    263            464,465,500-506\n   OP                       200            500-505\n   Spontaneous              0xx,300,301    434-436\n\n   Note: For commands appearing on cards, the 200 is not sent\n         but the 500-505 errors may be \"asynchronously\" sent.\n\n\n\n\n\nHolland                                                        [Page 16]\n\f\nRFC 360                     REMOTE JOB ENTRY                   June 1972\n\n\n   TYPICAL RJE SCENARIOS\n\n   1. TIP USER WANTING HOT CARD READER TO HOSTX\n      a) TIP user opens TELNET connection to HOSTX socket 5\n      b) Commands sent over TELNET to RJE\n         USER=myself\n         PASS=dorwssap\n         OUT=PORT 7\n         INPUT=PORT 5\n      c) RJE-server connects to the User's host port 5 and begins\n         reading.  When end-of-job card is recognized, the job is queued\n         to run.  The connection to the card reader is still open for\n         more input as another job\n      d) The first job finishes.  A connection to the Users host port 7\n         is established by RJE-server and the output is sent as an NVT\n         stream.\n      e) Continue at any time with another deck at step c).\n\n   2. TIP WITH JOB-AT-A-TIME CARD READER\n      a) thru d) the same but User closes Reader after the deck\n      e) The output finishes and the printer connection closes.\n      f) INPUT may be typed any time after step c) finishes and another\n         job will be entered starting at c).\n\n   3. HOSTA USER RUNS JOB AT HOSTC, INPUT FROM HOSTB\n      a) User TELNET connects to HOSTC socket 5 for RJE\n         USER=roundabout\n         PASS=aaabbbc\n         OUTUSER=roundab1\n         OUT=:E/.sysprinter\n         OUT puncher = (s)HOSTB:NE/my.savepunch\n         INUSER=rounder\n         INPASS=x.x.x\n         INPUT=HOSTB:E/my.jobinput\n      b) The RJE-server has FTP retrieve the input from HOSTB using\n         Userid of \"rounder\" and Password of \"x.x.x\" for file named\n         \"my.jobinput\".\n      c) The job finishes.  RJE-server uses FTP to send two files:  the\n         print output is sent to HOSTA in EBCDIC with ASA carriage\n         control to file \".sysprinter\" while the file known as \"puncher\"\n         is sent to HOSTB in EBCDIC without carriage-control to file\n         \"my.savepunch\".\n      d) when the outputs finish, RJE-server at HOSTC discards the print\n         file but retains the \"puncher\" file.\n      e) The User who had signed out after job submission has gotten his\n         output and checked his file \"my.savepunch\" at HOSTB.  He\n         deletes the saved copy at HOSTC by re-calling RJE at HOSTC.\n         USER=roundabout\n\n\n\nHolland                                                        [Page 17]\n\f\nRFC 360                     REMOTE JOB ENTRY                   June 1972\n\n\n         PASS=aaabbbcc\n         ABORT job123 puncher\n           or by\n         CHANGE job123 puncher = (D)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHolland                                                        [Page 18]\n\f\n"
}