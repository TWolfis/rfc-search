{
  "series": "Request for Comments",
  "number": "7",
  "howpublished": "RFC 7",
  "publisher": "RFC Editor",
  "doi": "10.17487/RFC0007",
  "url": "https://www.rfc-editor.org/info/rfc7",
  "title": "Host-IMP interface",
  "pagetotal": "7",
  "year": "1969",
  "month": "may",
  "body": "\n\n\n\n\n\nNetwork Working Group                                         G. Deloche\nRequest for Comment: 7           University of California at Los Angeles\nNIC: 4693                                                       May 1969\n\n\n                           Host-Imp Interface\n\n\n\n      G. Deloche      --\u003e  Prof. J. Estrin\n                           Prof. L. Kleinrock\n                           Prof. B Bussel\n                           D. Mandell\n                           S. Crocker\n                           L. Bonamy\n\n\n   Object: Arpa Network - Specification Outlines for Host-IMP (HI)\n   Interface Programs.\n\n\n\n                                  Outline\n\n   I.  Introduction\n\n   II.  Scope of the software organization.\n           II-1    Network program\n           II-2    Handler program\n\n   III.  Questions\n\n\n\n\n\n   [The original of RFC 7 was hand-written, and only partially illegible\n   copies exist.  RFC 7 was later typed int NLS by the Augmentation\n   Research Center (ARC) at SRI.  The following is the best\n   reconstruction we could do.  RFC Editor.]\n\n\n\n\n\n\n\n\n\n\n\nDeloche                                                         [Page 1]\n\f\nRFC 7                      Host-IMP Interface                   May 1969\n\n\nI.  Introduction\n\n   This paper is concerned with the preliminary software design of the\n   Host IMP interface.  Its main purpose is on the one hand to define\n   functions that will be implemented, and on the other hand to provide\n   a base for discussions and ...(unreadable).\n\n   This study is based upon a study of the BBN Report No. 763.\n\nII.  Scope of the software organization.\n\n   The system is based upon two main programs: the Handler program that\n   drives the channel hardware unit, and the Network program which\n   carries out the user's transmission requests.\n\n   As the communication is full duplex, each of these programs can be\n   viewed as divided into two parts: one is concerned with the output\n   data, the other with the input. (See Fig. 1)\n\n   These two programs exchange data through a pool of buffers, and\n   logical information through an interface table.\n\n   In the following we only focus on the output part of each program\n   (See Fig. 2).  The input part would be very similar.\n\nII-1.   Network program.\n\nII-1-1. Multiplex function.\n\n   This program multiplexes the outgoing messages (and distributes the\n   incoming messages).  The multiplexing consists in stacking up all the\n   user's (or caller, or party) requests and filling up the pool of\n   buffers so as to keep the handler busy emitting.\n\n   Multiplexing (and distribution) is based on the link identification\n   numbers.  (Link = logical connection between two users).  The\n   multiplexing problem is closely related to the interface between a\n   user's program and the network program, that is in\n   fact...(unreadable) operating system (See below: Questions).\n\nII-1-2.  Output message processing.\n\n   When a user's program wants to send out text it should indicate the\n   following information (through a macro, or as call parameters): text\n   location, text length in bytes, and destination.\n\n\n\n\n\n\nDeloche                                                         [Page 2]\n\f\nRFC 7                      Host-IMP Interface                   May 1969\n\n\n   Using these data the Network program:\n\n      *  prepares a 16 bit Host heading (1 bit: trace, 2 bits: spares, 8\n         bits: link identification no., 5 bits: destination host)\n\n      *  inserts a 16 bits marking between the header and the text so as\n         to start the text at a word boundary.  This marking consists of\n         a one preceding the first bit of the text and, in turn,\n         preceded by fifteen zeros to fill up the gap.\n\n      *  checks the length of the user's text - if it exceeds 1006 bytes\n\n          +-                                                     -+\n          |8080 (max host message length) - 32 (heading + marking)|\n          |-------------------------------------------------------|\n          |                8 (byte = 8 bits)                      |\n          +-                                                     -+\n\n   the program breaks down the text into a sequence of messages whose\n   maximum length is 1006 bytes - Each of these messages is preceded by\n   a heading as explained above.\n\n   Remark: in that case one of the heading space bits could be used for\n   indicating that several messages belong to the same text.\n\n      *  _transcodes_ the EBCDIC characters constituting the messages\n         into ASCII characters.\n\n      *  _fills_ the buffers of the pool with the content of the\n         messages.\n\n      *  _updates_ the content of the interface table and moves the\n         filling pointers (see below).\n\nII-2.  Handler program.\n\n   This program is initiated either by the network program, or by the\n   I/O interrupt.\n\n   This program will be very short.  It will be coded in master mode\n   (privileged instructions) and should be integrated in the I/O\n   supervisor of the operating system.\n\n\n\n\n\n\n\n\n\nDeloche                                                         [Page 3]\n\f\nRFC 7                      Host-IMP Interface                   May 1969\n\n\n   This program:\n\n      *  _controls_ the channel hardware unit.  It initiates the\n         emission, eventually provides data chaining between the\n         buffers, tests the different device status upon receiving an\n         interrupt.\n\n      *  _empties_ the buffers that are filled up by the network\n         program.\n\n      *  _explores_ and _updates_ the interface table (see below).\n\n      *  can eventually insure a control transmission procedure with the\n         IMP (See Questions).\n\nII-3  Buffers and Interface Table.\n\nII-3-1  Buffers.\n\n   They should be large enough for containing the maximum host message\n   text + heading and marking (1006 + 4 = 1010 bytes).\n\n   Consequently the buffer size could be chosen equal to 256 words (1024\n   bytes).  As for the buffer number it will determine the link\n   utilization frequency -\n\nII-3-2  Interface table.\n\n   It is through this table that the network program informs the handler\n   with the location and length of the emitting data.\n\n   This table could be a ring table with 2 pointers: one for filling,\n   the other for extracting.  They are respectively updated by the\n   network and the handler program.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDeloche                                                         [Page 4]\n\f\nRFC 7                      Host-IMP Interface                   May 1969\n\n\n                      [Length] of the message\n                           contained\n                           in the buffer\n                               ^\n                               |\n           +--------------+----------+\n           | Buffer addr. | nb bytes |\n           +--------------+----------+\n           |              |          | \u003c== Filling pointer\n           +--------------+----------+         |\n           |                         |         V\n           |                         |\n           //                        //\n           |                         |\n           |                         |\n           |                         |\n           +--------------+----------+\n           | Buffer addr. | nb bytes | \u003c== eEtracting pointer\n           +--------------+----------+         |\n           | Buffer addr. | nb bytes |         V\n           +--------------+----------+\n\n\n\nIII.  Questions.\n\nIII-1.  Why is there not a simple control procedure between the HOST and\n        the IMP?  What happens if a message, issued from the HOST,\n        reaches the IMP with an error due to the transmission?\n\n   From the BBN specifications it appears that this error will be\n   transmitted as far [as] the receiving HOST.\n\n   In that case must an HOST-HOST control procedure be provided?\n\nIII-2.  Where will the special channel hardware unit be connected\n        (MIOP/SIOP)?\n\n   How will this device be notified of an outgoing message end in order\n   to start the padding?\n\n   (The program will provide to the MIOP SIOP the number of bytes of the\n   outgoing message, and will receive back an interrupt when the last\n   byte is sent out.  Is it that signal which will be also sent to the\n   special device?)\n\n   Vice versa how does the Handler know the length of the incoming\n   message?  From the contents of the previous one or should this\n\n\n\nDeloche                                                         [Page 5]\n\f\nRFC 7                      Host-IMP Interface                   May 1969\n\n\n   program always ready to receive a message of maximum length?  (Then\n   an interrupt should be triggered when the real end is detected by the\n   hardware).\n\nIII-3.  When does the Gordo documentation will be available in order to\n        design the user-network program interface.  What are the\n        mechanisms for program initiations, transferring parameters from\n        one program to another, etc...\n\n\n\n\n\n\n                           HOST (Sigma 7) \u003c--|/|--\u003e Outside world\n   Users                                     |/|\n    |                                        |/|\n    |                                        |/|   Special  Standard\n    V                                        |/|      |       |\n         +--------------+   +------------+   |/|      V   |   V\n    o----|              |   |            |   |/|   +------+------+\n         |   Output     |--\u003e|   Output   |--\u003e|/|--\u003e|      |      |--\u003eIMP\n    . . .|              |   |            |   |/|   |             |\n         |              |   |            |   |/|   |      |      |\n    o----| (Multiplex)  |   |            |   |/|   |             |\n         |_ _ _ _ _ _ _ |   |_ _ _ _ _ _ |   |/|   | _ _ _| _ _ _|\n    o----|              |   |            |   |/|   |      |      |\n         |   Input      |\u003c--|    Input   |\u003c--|/|\u003c--|             |\u003c--IMP\n    . . .|              |   |            |   |/|   |      |      |\n         |              |   |            |   |/|   |             |\n    o----|(Distribution)|   |            |   |/|   +------|------+\n         |              |   |            |   |/|       HARDWARE\n         +--------------+   +------------+   |/|       Interface\n             NETWORK          HANDLER        |/|\n             Program          Program        |/|\n                                             |/|    (Fig. 1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDeloche                                                         [Page 6]\n\f\nRFC 7                      Host-IMP Interface                   May 1969\n\n\n                                                   +------------------+\n                                                   | | |              |\n                                                   | | | interface    |\n                                                   | | |              |\n                                                   |                  |\n                                                   | ====\u003e Data       |\n                                                   |                  |\n                                                   | ----- Logical    |\n                                                   |       information|\n                                                   +------------------+\n\n                      + - - - - - - - - - - - - - -+\n                      |                            |\n                              interface table\n                      |        +----------+        |               | |\n        | |              +----\u003e|          |\u003c----+                  | |\n        | |           |  |     +----------+     |  |   interrupt   | |\n        | |           ^  |                      |     +----\u003c-------| |\n        | |           |  |    +-          -+    |  |  |            | |\n        | |           |  V    |  _________ |    V  V  V            | |\n   o----| |-+  +---------+-+  | |         ||  +-+--+--+---+        | |\n        | |  \\ |+---------+|  | |_________||  |+---------+|        | |\n        | |   \\||         ||  |            |  ||         ||        | |\n        | |    +|         ||  | - - - - - -|  ||         ||        | |\n        | |    ||         ||  |            |  ||         ||        | |\n    - - - - - -|| NETWORK ||=\u003e-  _________ -=\u003e|| HANDLER ||=======\u003e| |\n        | |    +| Progr.  ||  | |         ||  || Progr.  ||        | |\n        | |   /||         ||  | |_________||  ||         ||        | |\n        | |  / |+---------+|  |            |  |+---------+|        | |\n   o----| |-+  +-----------+  |  _________ |  +----+------+        | |\n   ^    | |                   | |         ||       |               | |\n   |    | |                   | |_________||       +---\u003e----------\u003e| |\n   |     ^                    +-    ^     -+         Commands      | |\n   Users |                          |                              | |\n         |                    Pool of buffers                      | |\n       User's                                                       ^\n      Interface                                                     |\n                                                              Hardware\n                                                             Interface\n\n                           (Fig. 2)\n\n\n\n\n         [ This RFC was put into machine readable form for entry ]\n   [ into the online RFC archives by Bob German \u0026 Lorrie Shiota 1/02 ]\n\n\n\n\nDeloche                                                         [Page 7]\n\f\n"
}