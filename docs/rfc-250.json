{
  "series": "Request for Comments",
  "number": "250",
  "howpublished": "RFC 250",
  "publisher": "RFC Editor",
  "doi": "10.17487/RFC0250",
  "url": "https://www.rfc-editor.org/info/rfc250",
  "title": "Some thoughts on file transfer",
  "pagetotal": "1",
  "year": "1971",
  "month": "oct",
  "body": "\n\n\n\n\n\nNetwork Working Group                             H. Brodie\nRequest for Comments #250                         UCLA-NMC\nNIC #7691                                         Computer Science\nCategories:  D5, D7                               7 October 71\nUpdates:  None\nObsoletes:  None\n\n                     Some Thoughts on File Transfer\n\n   There are several aspects of the proposed Data Transfer Protocol (RFC\n   #171) and File Transfer Protocol (RFC #172) which we believe could\n   use further clarification and perhaps revision.  Interest in\n   transferring larger amounts of data than is typically sent via the\n   usual TELNET connection is increasing, and at least at UCLA-NMC\n   implementation attempts have pointed out several difficulties with\n   the proposed protocols.\n\n   First, and probably most easily decided, is the ambiguity in RFC #171\n   with regards to the sequence number field of the descriptor and count\n   transaction.  The description provided for the transaction header\n   provides for 16 bit sequence number.  However, the sequence number\n   field in the error codes transaction only provides for 8 bits.  We\n   are of the opinion that 8 bits is sufficient for a sequence number\n   field.  If the sequence number is reduced to 8 bits, and the two NUL\n   bytes are deleted from the descriptor and count header, then its size\n   is reduced to 48 bits, which would seem to be as convenient to handle\n   as the proposed 72 bit transaction header.\n\n   Another source of difficulty lies in the implementation of the (the\n   SEX time-sharing system) the 'end' of a file (which presumably would\n   be the begin point of an Append transaction) is almost com- pletely\n   context-defined--i.e., the program reading the file determines when\n   it has reached the end of the file.  Therefore, the meaning of\n   'Append' is somewhat hazy, and since the proposed Mail Box Protocol\n   uses the Append feature, not implementing this command in a File\n   Transfer service is costly in terms of lost useability.\n\n   We believe that resolution of these ambiguities will lead to a\n   greatly accelerated implementation schedule, at least here at UCLA-\n   NMC.\n\n       [ This RFC was put into machine readable form for entry ]\n       [ into the online RFC archives by BBN Corp. under the   ]\n       [ direction of Alex McKenzie.                   12/96   ]\n\n\n\n\n\n\n\n                                                                [Page 1]\n\f\n"
}