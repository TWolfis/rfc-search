{
  "series": "Request for Comments",
  "number": "86",
  "howpublished": "RFC 86",
  "publisher": "RFC Editor",
  "doi": "10.17487/RFC0086",
  "url": "https://www.rfc-editor.org/info/rfc86",
  "title": "Proposal for a Network Standard Format for a Data Stream to Control Graphics Display",
  "pagetotal": "6",
  "year": "1971",
  "month": "jan",
  "body": "\n\n\n\n\n\nNetwork Working Group                                           S. Crocker\nRequest for Comments #86                                        January 5, 1971\nNIC 5631                                                        UCLA\n\n                 Proposal for a Network Standard Format\n             for a Data Stream to Control Graphics Display\n\n\nA typical arrangement of facilities is to have a console attached to a\n\ncomputer at the user's site, and to be using the computational facilities\n\nof a remote site.  Information entered by the user is transmitted to the\n\nremote Host, and output from the remote Host is transmitted back to the\n\nlocal user.  In this proposal I am concerned with specifying the form of\n\nthe output stream for the case that the output portion of the console is a\n\ntypical refresh display with point, vector and character drawing capability.\n\nDevices in this class include the DEC 338, DEC 340, IBM 2250, and IMLAC\n\nPDS-1.\n\n\n\nIt must be understood that this proposal is illustrative only, and knowingly\n\navoids important issues.  Its main purpose is to provide a basis for dis-\n\ncussion and development.\n\n\n\nIn order to specify the semantices of the network standard graphics data\n\nstream (NGDS), I will postulate\n\n   1.   a network standard display list (NGDL)\n\n   2.   a network standard stream interpreter (NGSI)\n\n   3.   a network standard list interpreter (NGLI), also called the\n        display controller, and\n\n   4.   a network standard screen (NGS)\n\n\n\n                                                                [Page 1]\n\f\nThe NGDS is accepted into the local Host and interpreted by the NGSI.  The\n\nNGSI is a process which modifies the NGDL according to inputs in the NGDS.\n\nThe NGDL is the display list for the NGLI; the NGLI executes the NGDL and\n\ncontrols the beam which writes on the NGS.\n\n\n\nThe NGS is square, has horizontal and vertical sides, and positions on it\n\nare specified by an ordered pair of unsigned 16 bit fractions.  The first\n\nfraction specifies the horizontal distance from the left hand edge, and\n\nthe second specifies the vertical distance from the bottom edge.  The\n\nresolution of the screen is unspecified.\n\n\n\nThe lack of specification of the resolution of the NGS is intentional;\n\nprograms designers should not interpret this to mean that they may impose\n\na particular requirement on the using system.  Thus the quality of the\n\ndisplayed picture should degrade gradually with decreasing resolution.\n\n\n\nThe NGLI has primitives for moving the beam to a particular point, intensify-\n\ning a point, drawing a vector, or drawing a character.  Characters are\n\nassumed to be not more than .015 screen width wide, and not more than .025\n\nscreen height high.  When the beam is moved to a screen position before\n\ndrawing characters, that position should be at the lower left hand corner\n\nof the first character drawn.  The beam position after drawing a character\n\nis immediately to the right of the character, properly positioned for another\n\ncharacter.  However, after drawing one or more characters, the exact horizontal\n\n\n\n\n                                                                [Page 2]\n\f\nposition of the beam is unspecified.\n\n\n\nThe imprecise specification of character size is intended to take cognizance\n\nof the existance of character drawing hardware which is capable of producing\n\nonly one or a few character sizes.  The particular proportions of .015 wide\n\nby .025 high provides for 67 characters to a line and 40 lines, and seems\n\nwell within the capability of most displays in the class considered.  As in\n\nthe case of screen resolution, variations in character drawing hardware\n\nshould cause only minor degradation in the usefulness of the picture.\n\n\n\nThe character set intrepreted by the NGLI is ASCII, excepting all form\n\ncontrol characters, but including the space character.  The tab, return\n\nand line feed functions should be simulated by explicit positioning of the\n\nbeam.\n\n\n\nThe NGDL consists of a set of named and possibly null lists.  The names\n\nare 16 bit integers, and the name zero is the name of the chief list.\n\nEach list is composed of zero of more display items.  An item is any of\n\nthe following:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                                                [Page 3]\n\f\na)  \"Move beam to xxxx,yyyy, relative to current origin\"\n\n   b)  \"Display vector from current position to xxxx,yyyy, relative to\n        current origin\"\n\n   c)  \"Display current point\"\n\n   d)  \"Display the following n characters:\n\n       c  c  ...c \"\n        1  2     n\n\n   e)  \"Execute list gggg with origin xxxx,yyyy relative to current origin\"\n\n\n\nThe NGLI is constantly in a loop executing the chief list, the origin of\n\nthe chief list is always \u003c0,0\u003e.  When the NGLI comes to the end of the\n\nchief list, it returns to the top of it.  When the NGLI encounters a\n\ntype e item, it suspends execution of the current list, set the new origin\n\nto \u003cxxxx,yyyy\u003e + \u003cthe old origin\u003e, and executes the list named gggg. When\n\nfinished with the list, the old origin is restored and execution of the\n\nold list resumed.  The NGLI is, therefore, a recursive interpreter, and\n\ntype e items are subroutine calls.\n\n\n\nThere remains only the matter of the NGDS and the NGSI.  The NGDS is parsed\n\ninto commands by the NGSI and each command is executed as soon as it is\n\nrecognized.  The commands in the NGDS are in prefix form, consisting of an\n\neight bit operation code followed by any arguments.  Only two commands\n\nare defined: Erase and Replace.\n\n\nThe Erase command consists of a single zero-valued opcode and no arguments.\n\nThe NGSI executes the Erase command by making all lists into null lists.\n\n\n\n                                                                [Page 4]\n\f\nThis erases the screen.\n\n\n\nThe Replace command has an opcode of 1, followed by a 16-bit list name,\n\nfollowed by an 8 bit subargument count, followed by the indicated number\n\nof subarguments.  The NGSI executes the Replcae command by deleteing all\n\nitems from the indicated list, and rebuilding the list from the subarguments.\n\nThere are five kinds of subarguments, corresponding to the five item types.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                                                [Page 5]\n\f\n\u003csubargument\u003e::=\u003catype\u003e | \u003cbtype\u003e |  \u003cctype\u003e |\n\n                                      \u003cdtype\u003e | \u003cetype\u003e\n\n\n            \u003catype\u003e::= \u003ca\u003e \u003cx\u003e \u003cy\u003e\n\n            \u003cbtype\u003e::= \u003cb\u003e \u003cx\u003e \u003cy\u003e\n\n            \u003cctype\u003e::= \u003cc\u003e\n\n            \u003cdtype\u003e::= \u003cd\u003e \u003cn\u003e \u003cc\u003e ... \u003cc\u003e\n                                    n\n\n            \u003cetype\u003e::= \u003ce\u003e \u003cg\u003e \u003cx\u003e \u003cy\u003e\n\n\n\n\u003ca\u003e, \u003cb\u003e, \u003cc\u003e, \u003cd\u003e, and \u003ce\u003e are 8 bit bytes valued at 0, 1 ... 4,\n\nrespectively and corresponging to the item types listed on page 4.\n\n\n            \u003cx\u003e and \u003cy\u003e are 16 bit numbers\n\n            \u003cg\u003e is a 16 bit list name\n\n            \u003cn\u003e is an 8 bit count\n\n            \u003cc\u003e is an ASCII character code\n\n\n\n       [ This RFC was put into machine readable form for entry ]\n         [ into the online RFC archives by Anand Kumria 6/97 ]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                                                [Page 6]\n\f\n"
}