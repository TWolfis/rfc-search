{
  "series": "Request for Comments",
  "number": "377",
  "howpublished": "RFC 377",
  "publisher": "RFC Editor",
  "doi": "10.17487/RFC0377",
  "url": "https://www.rfc-editor.org/info/rfc377",
  "title": "Using TSO via ARPA Network Virtual Terminal",
  "pagetotal": "4",
  "year": "1972",
  "month": "aug",
  "body": "\n\n\n\n\n\nNETWORK WORKING GROUP                                        R.T. BRADEN\nREQUEST FOR COMMENTS #377                                       UCLA/CCN\nNIC 11119                                                AUGUST 10, 1972\nCATEGORIES:\nOBSOLETES:\nUPDATES:\n\n\n              USING TSO VIA ARPA NETWORK VIRTUAL TERMINAL\n\n\nA.  Connecting to TSO\n    -----------------\n\n    IBM's Time Sharing Option (TSO) is available at UCLA-CCN on Socket 1\n    using the standard Telnet protocol.\n\n    1.  To access TSO, the remote user performs ICP to Socket 1 at CCN\n        and executes the command:\n\n                    TSO CR LF\n                        -- --\n\n    2.  Possible responses to the TSO command are:\n\n        a.  \"WELCOME TO UCLA/CCN TSO\"\n\n            followed by a herald (\"!\").  TSO is available.   A TSO LOGON\n            command should be entered following the herald.\n\n        b.  \"TSO NOT AVAILABLE AT THIS TIME\"\n\n            The user should check the TSO schedule and verify that it\n            should be available. If so, he can call the CCN on-line help\n            phone, 213-825-1652 for availability information, or send a\n            message to the operator through NETRJS.\n\n        c.  \"ALL TSO PORTS BUSY\"\n\n            The user should try again after a short time. If this\n            condition recurs frequently, notify the Technical Liaison at\n            CCN so that more Network ports can be added.\n\n\n\n\n\n\n\n\n\nBraden                                                          [Page 1]\n\f\nRFC 377            Using TSO via Net Virtual Terminal        August 1972\n\n\n    3.  When first connected to CCN server Telnet, the user has a choice\n        of several commands besides \"TSO\". The TSO-related commands are:\n\n            HELP    -  A listing of commands at this level, and other\n                       general information.\n\n            BBOARD  -  List operational notices.\n\n    4.  Local echoing (i.e., by the user site) is required.\n\n    5.  Server-Telnet will time-out and disconnect the user if:\n\n        a.  Output to the Network does not complete within 5 minutes, or\n\n        b.  An INS, DATA MARK pair does not match within 2 minutes, or\n\n        c.  TSO waits for the user to enter input for 20 minutes.\n\nB.  Conversing with TSO\n    -------------------\n\n    1.  TSO is strictly a line-at-a-time system.  Input is not scanned\n        until either an end-of-line or an INS (interrupt) is received at\n        CCN.  TSO sends the user an exclamation mark (\"!\") as a herald\n        when waiting for input.\n\n    2.  The end-of-line indication for input and output lines is the\n        standard CR LF sequence.\n\n    3.  The remote user my interrupt TSO output by sending an INS and\n        DATA MARK (Telnet X'80').  Note to TIP users: this may be\n        accomplished with the TIP command \"SEND SYNC\".  Each such\n        interrupt is passed to TSO, which interprets it as an output\n        break, i.e., as if the user pressed the ATTention key on his\n        2741 while the keyboard was _locked_.\n\n        On the Network, \"attentions\" are not used to delete lines being\n        entered.  The CCN Server-Telnet provides line editing functions\n        for TSO users: the ASCII control CAN deletes the line being\n        entered, while BS deletes the preceding character.\n\n    4.  There is a third interrupt case to be considered: suppose a\n        program has placed the user's terminal into input state, but the\n        user wants to suspend its execution and take control up a level\n        without satisfying the pending input request.  This is supposed\n        to be accomplished by sending an INS/DATA MARK pair.\n        Unfortunately, due to a bug in our Network interface to TSO, the\n        interrupt will be ignored in this case.  To circumvent this\n\n\n\nBraden                                                          [Page 2]\n\f\nRFC 377            Using TSO via Net Virtual Terminal        August 1972\n\n\n        problem, we recommend that you define a software break string,\n        such as \"!!!!\".  This may be accomplished with the command:\n\n                    TERM INPUT (!!!!)\n\n        Note that there are no quotes around the string.  You can enter\n        this command when you first log on, and it will remain in effect\n        for the session (or until you issue a new TERM command).  Then\n        any input line containing four successive exclamation points\n        will be interpreted as if an interrupt (attention) had been\n        sent.  If that line contains other characters preceding the\n        exclamation marks, the latter will be interpreted as line\n        delete; otherwise, the result will be to take control up a\n        level.\n\nC.  Character Sets\n    --------------\n\n    1.  Both upper and lower case input are allowed, but the server\n        Telnet will translate all lower case to upper. Output is\n        normally upper case.\n\n    2.  Line-editing is provided by the Server-Telnet program before\n        passing the input line to TSO.\n\n                INPUT                    ACTION\n                -----                    ------\n\n                CAN (control X)          delete current line.\n\n                BS (control H)           delete previous character on\n                                         same line\n\n                                         (NOTE: Telnet control char-\n                                         acters are not deleted; they\n                                         are bypassed in the backspace\n                                         operation.)\n\n                 HT (control I)          insert one space in input.\n\n        All other ASCII controls are deleted from the input before\n        line-editing is performed.\n\n    3.  Input lines are translated to EBCDIC by the rules used for a\n        NETRJS remote operator console (see Appendix B in RFC189).\n        Specifically:\n\n\n\n\n\nBraden                                                          [Page 3]\n\f\nRFC 377            Using TSO via Net Virtual Terminal        August 1972\n\n\n        a.  ASCII controls are ignored except for BS, CAN, HT, and CR\n            LF.\n\n        b.  The following correspondence is used for the EBCDIC graphics\n            not in ASCII:\n\n\n[In the original, the ASCII and EBCDIC graphics were handwritten; in  ]\n[this version the ASCII graphics are typed and the EBCDIC graphics are]\n[omitted.]\n\n                    ASCII                  TSO\n                    -----                  ---\n                      !                    (Vertical bar)\n\n                      ~                    (EBCDIC \"not\")\n\n                      \\                    (Cent)\n\n        c.  The six ASCII graphics not in EBCDIC are translated into\n            EBCDIC question marks.\n\n    4.  All Telnet controls except DATA MARK are ignored.\n\nRTB/gjm\n8/10/72\n\n\n\n\n       [ This RFC was put into machine readable form for entry ]\n       [ into the online RFC archives by Alex McKenzie with    ]\n       [ support from GTE, formerly BBN Corp.             9/99 ]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBraden                                                          [Page 4]\n\f\n"
}