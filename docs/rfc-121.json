{
  "series": "Request for Comments",
  "number": "121",
  "howpublished": "RFC 121",
  "publisher": "RFC Editor",
  "doi": "10.17487/RFC0121",
  "url": "https://www.rfc-editor.org/info/rfc121",
  "title": "Network on-line operators",
  "pagetotal": "13",
  "year": "1971",
  "month": "apr",
  "day": "1",
  "body": "\n\n\n\n\n\nNetwork Working Group                                     M. Krilanovich\nRequest for Comments: 121                    Computer Research Lab, UCSB\nNIC: 5833                                                  21 April 1971\n\n\n                       NETWORK ON-LINE OPERATORS\n\nPREFACE\n\n   The operators described in this document have been implemented within\n   UCSB's On-Line System and make the Network (via the NCP) accessible\n   to On-Line System users.\n\n   A set of operators is provided to facilitate the use of the Network\n   by On-Line System users.  The operators are defined on LVL I on\n   system 'NET', and serve an an interface between the users and the\n   Network Control Program (NCP), which supervises all Network\n   operations at this site.\n\n   A concept fundamental to On-Line System Network operations is that of\n   a completion code variable.  Associated with each socket that is not\n   in the closed state is a unique variable, called a completion code\n   variable.  This variable serves two purpose: it identifies the local\n   socket referenced, and upon completion of the operation it contains a\n   completion code to indicate the outcome of the operation to the user.\n   It may be used at any time for any purpose other than Network\n   operations.  Its value at the beginning of a Network operation is\n   immaterial rather it is the variable itself that is important.  In\n   all Network operations, whenever a completion code variable is called\n   for, the only acceptable type variable is a LO storage location,\n   either case 1 or case 2.\n\n   In those operations requiring a socket to be specified by its socket\n   identifier, the following format is used: the site number of UCSB is\n   always used for local sockets, and so this item is never specified.\n   The site number of a foreign socket, if specified, must be a positive\n   integer or a LO storage location, and must be less then 256 in value.\n   If not specified, the site number of a foreign socket will default to\n   the site number of UCSB.  A socket number is specified as an integer,\n   either unsigned, in which case it is assumed to be positive, or with\n   an explicit minus sign, or a LO storage location, of any value.\n   Negative socket numbers are represented internally in two's\n   complement form and therefore for the purpose of the gender of a\n   socket, a socket number is even or odd according to whether its\n   absolute value is even or odd, respectively.\n\n\n\n\n\n\nKrilanovich                                                     [Page 1]\n\f\nRFC 121                Network On-Line Operators              April 1971\n\n\n   In all operations involving the On-Line System Network operators,\n   there are certain conventions concerning the format of the data sent\n   and received.  The data is grouped in 'messages' consisting of three\n   fields, op code, length, an text, in that order.  The op code is one\n   byte in length and is a code which indicates how the text field is to\n   be interpreted.  The length field is two bytes long, and gives the\n   length, in bits, of the text field, which contains the actual data.\n   (The op code and length fields together are termed a header.)\n\n   The following op codes are presently defined:\n\n     op code                        meaning\n\n       0          This op code is a NOP.  No text field exists, and the\n                  contents of the length field are unpredictable. (This\n                  op code is used mainly as a delimiter.)\n\n       1          The text field contains EBCDIC characters, one\n                  character per byte.  The On-Line System operators\n                  consider the characters as intended for display as\n                  soon as the text field has been received.\n\n       2          The text contains codes for keypushes, one byte per\n                  key.  The On-Line operators consider the keys as\n                  intended for execution as soon as the text field has\n                  been received.\n\n       3          The same as for an op code of 2, except that the On-\n                  Line operators consider that the execution of the keys\n                  will be delayed until all data for that receive\n                  operation has been received.\n\n   The standard format of data sent or received by the On-Line System\n   operators is a string of messages, with the last message indicated by\n   a header with a NOP op code, called a trailer.  These conventions are\n   the default situation; any of them may be overridden by appropriate\n   programming.  Following is a description of each operator, its\n   function and key sequence.\n\n   (1) OPEN\n\n      By invoking this operator, the user requests that the specified\n      local socket be removed from the closed state and thus be prepared\n      to participate in data transfer.  There are three distinct\n      operations that can be performed by this operator and these are\n      described below:\n\n\n\n\n\nKrilanovich                                                     [Page 2]\n\f\nRFC 121                Network On-Line Operators              April 1971\n\n\n      (A) CONNECT\n\n         By invoking this operator, the user requests that the specified\n         local socket be logically connected to the specified foreign\n         socket, and that transfer of data be enabled between the two\n         sockets.  Processing at the terminal is suspended until the\n         foreign sockets either accepts or rejects the connection\n         attempt.  This operation is valid only when the local socket is\n         in the closed state.\n\n         The key sequence is as follows:\n\n            UP Q1 Q2,Q3[,Q4] RETURN\n\n         where\n\n            Q1 is the completion code variable to be associated with the\n               local socket.\n            Q2 is the socket number of the local socket.\n            Q3 is the socket number of the foreign socket.\n            Q4 is the site number of the foreign socket.\n\n      The following completion codes are possible for this operation:\n\n            0, The operation was successful and the connection has been\n               established\n            4, The specified completion code variable is already\n               assigned to a socket; the operation was suppressed\n            8, The specified local socket is not in the closed state;\n               the operation was suppressed\n            12, All communication paths to the specified foreign site\n               are in use; the operator was suppressed\n            16, Local resources are insufficient to support another\n               connection; the operation was suppressed\n            20, The connection attempt was rejected by the foreign\n               process\n            28, The specified foreign site is invalid; the operation was\n               suppressed\n            36, Either hardware at the foreign site is inoperative or\n               the NCP's counter-part at the foreign site does not exist\n               or has failed\n            40, Local and foreign sockets are both either send or\n               receive sockets; the operation was suppressed\n            44, By operator command, all Network operations were\n               terminated; the socket will be closed\n            60, An NCP control transmission error occurred; the\n               operation as suppressed\n\n\n\n\nKrilanovich                                                     [Page 3]\n\f\nRFC 121                Network On-Line Operators              April 1971\n\n\n      (B) LISTEN\n\n         This operation is a request for notification of any connection\n         attempt directed toward the specified local socket.  Processing\n         at the terminal is suspended until such a call is received.\n         This operation is valid only when the designated local socket\n         is in the closed state.\n\n         The key sequence is as follows:\n\n            UP Q1 Q2 RETURN\n\n         where\n\n            Q1 is the completion code variable to be associated with the\n               local socket.\n            Q2 is the socket number of the local socket.\n\n            The following completion codes are possible for this\n               operation:\n\n            0, The operation was successful and a call has been received\n            4, The specified completion code variable is already\n                      assigned to a socket; the operation was suppressed\n            8, The specified local socket is not in the closed state;\n                      the operation was suppressed\n            12, Local resource are insufficient to support another\n                      connection; the operation was suppressed\n            44, By operator command, all Network operations were\n                      terminated; the socket will be closed\n\n      (C) ACCEPT\n\n         This operation accepts connection with the foreign socket whose\n         call caused successful completion of a previous LISTEN\n         operation by the specified local socket.  After completion of\n         this operation, data may be transferred to or from the local\n         socket, depending on its gender.  This operation is valid only\n         when the last operation referencing the local socket as a\n         LISTEN operation.  Processing at the terminal is suspended\n         until the operation is completed.\n\n      The key sequence is as follows:\n\n            UP Q RETURN\n\n\n\n\n\n\nKrilanovich                                                     [Page 4]\n\f\nRFC 121                Network On-Line Operators              April 1971\n\n\n      where\n\n            Q is the completion code variable associated with the local\n               socket by a previous LISTEN operation.\n\n               The following completion codes are possible for this\n               operation:\n\n                  0, The operation as successful, and the connection is\n                      established\n                  4, The specified local socket is in the closed state\n                      (the NCP may have received an abort notification\n                      from the foreign process); the operation was\n                      suppressed\n                  8, The previous operation specifying the designated\n                      local socket was not a LISTEN; the operation was\n                      suppressed\n                  12, All communication paths to the specified foreign\n                      site are in use; the socket has been returned to\n                      the closed state\n\n\n   (2) CLOSE\n\n      This operation is a request that the specified local socket be\n      returned to the closed state.  If the last operation involving\n      this socket was a LISTEN, this operation refuses the foreign\n      process connection attempt.  If the last operation was a CONNECT,\n      the attempt is aborted.  If a connection is established, any data\n      in transit form the local socket is allowed to reach the foreign\n      socket and to be either received or flushed before the local\n      socket is closed.\n\n      Processing at the terminal is suspended until the socket has been\n      returned to the closed state.\n\n      The key sequence is as follows:\n\n            DWN Q\n\n\n\n\n\n\n\n\n\n\n\n\nKrilanovich                                                     [Page 5]\n\f\nRFC 121                Network On-Line Operators              April 1971\n\n\n      where\n\n            Q  is the completion code variable associated with the local\n               socket.\n\n            The following completion codes are possible for this\n            operation:\n\n                  0, The operation was successful, and the socket has\n                      been returned to the closed state\n                  8, The specified completion code variable is not\n                      currently assigned to a socket; the operation was\n                      suppressed\n                  12, The specified local socket is in the process of\n                      being closed the operation was suppressed, but the\n                      local socket will be closed\n                  36, Either hardware at the foreign site is\n                      inoperative, or the NCP's counterpart at the\n                      foreign site does not exist or has failed\n                  44, By operator command, all Network operations were\n                      terminated; the socket will be closed\n                  60, An NCP control transmission error occurred; the\n                      operation was aborted\n                  64, A transmission error occurred the operation was\n                      aborted, but the socket will be closed\n\n   (3) SEND\n\n      This operation caused data to be sent to the foreign socket.\n      Processing at the terminal is suspended until the data has been\n      received by the foreign socket, or until it has been queued\n      locally by the NCP.\n\n      The possible key sequence are as follows:\n\n            STORE  Q1 Q2 text Q2\n            STORE +Q1 Q2 text Q2\n            STORE -Q1 Q2 text Q2\n            STORE .Q1[X]Q3 RETURN\n\n      where\n\n            Q1 is the completion code variable associated with the local\n               socket.\n            Q2 is any key except RESET.\n            'Text' is a string of any length of any keys except Q2 and\n               RESET.\n            Q3 is an unsigned integer.  If it is preceded by 'X', the\n\n\n\nKrilanovich                                                     [Page 6]\n\f\nRFC 121                Network On-Line Operators              April 1971\n\n\n               integer is assumed to be in hexadecimal.\n               [X]Q3 should have a value less then 256.\n\n      If Q1 is the first key after STORE, the keys comprising 'text' are\n      not executed but rather are sent as a one byte code per key, in\n      one or more standard messages.  They are preceded by a header with\n      the op code which indicates keys to be executed as soon as they\n      are received, and followed by a trailer.  If a '+' precedes Q1,\n      the headers and the text will be sent, but no trailer.  If a  '-'\n      precedes Q1, only the text will be sent.  If a '.' precedes Q1,\n      [X]Q3 will be sent as a one byte number, with no header or\n      trailer.\n\n      The following completion codes are possible for this operation:\n\n            0, The operation was successful, and the data has been sent\n            4, The specified local socket is not a send socket; the\n               operation was suppressed\n            8, The specified completion code variable is not assigned to\n               a socket; the operation was suppressed\n            12, A previous send operation is in progress ;the operation\n               was suppressed\n            16, The connection is not fully open; the operation was\n               suppressed\n            20, The foreign socket terminated the connection before\n               completion of the send operation; not all the data was\n               transmitted\n            36, Either hardware at the foreign site is inoperative, or\n               the NCP's counterpart at the foreign site does not exist\n               or has failed\n            44, By operator command, all Network operations were\n               terminated the socket will be closed\n            52, One or more interrupts were received from the foreign\n               socket; the operation was suppressed\n            60, An NCP control transmission error occurred; the\n               operation was aborted and the socket will be closed\n            64, A transmission error occurred; the operation was aborted\n               and the socket will be closed\n\n   (4) RECEIVE\n\n      This operation causes data to be received from the foreign socket.\n      Processing at the terminal is suspended until the data sent by the\n      foreign socket has been received by the local socket and\n      processed.\n\n      The possible key sequences are as follows:\n\n\n\n\nKrilanovich                                                     [Page 7]\n\f\nRFC 121                Network On-Line Operators              April 1971\n\n\n            LOAD  Q1\n            LOAD +Q1\n            LOAD -Q1 Q2, Q3 RETURN\n            LOAD .Q1 Q4 RETURN\n\n      where\n\n            Q1 is the completion code variable associated with the local\n               socket.\n            Q2 is a positive integer, or a LO storage location, less\n               then 256.\n            Q3 is a positive integer, or a LO storage location, less\n               than 65536\n            Q4 is a positive integer less than 5.\n\n      If Q1 is the first key after LOAD, one or more standard messages\n      will be received and executed.  The data may or may not be\n      executed, as soon as it is received, depending on the op code.\n      Processing of manual keypushes is suspended until a trailer is\n      received.  If Q1 is preceded by a '+', the operation is as above,\n      except that only one message, with no trailer, is received, and\n      the operation is only performed if there is data queued for the\n      local socket, ready to be received. ('LOAD +' is intended mainly\n      for use with the Network On-Line Interface.)  If Q1 is preceded by\n      a '-', a string of text whose length, in bits, is Q3, is received\n      and processed according to the op code Q2.  If a '.' precedes Q1,\n      Q4 bytes of data are read and placed, right justified, in the LO\n      accumulator.\n\n      The following completion codes are possible for this operation:\n\n            0, The operation was successful and the data has been\n               received\n            4, The specified local socket is not a receive socket; the\n               operation was suppressed\n            8, The specified completion code variable is not assigned to\n               a socket; the operation was suppressed\n            12, A previous receive operation is in progres; the\n               operation was suppressed\n            16, The connection is not fully open; the operation was\n               suppressed\n            20, The foreign socket terminated the connection before\n               completion of the receive operation; data is\n               unpredictable\n            36, Either hardware at the foreign site is inoperative, or\n               the NCP's counterpart at the foreign site does not exist\n               or has failed\n            44, By operator command, all Network operations were\n\n\n\nKrilanovich                                                     [Page 8]\n\f\nRFC 121                Network On-Line Operators              April 1971\n\n\n               terminated; the socket will be closed\n            52, One or more interrupts were received from the foreign\n               socket; the operation was suppressed\n            60, An NCP control transmission error occurred; the\n               operation was suppressed and the socket will be closed\n            200, There was no data queued for the local socket; the\n               operation was suppressed (applicable only to 'LOAD +')\n\n   (5) CHECK\n\n      This operation causes the status of the specified local socket to\n      be displayed.  There is no completion code variable associated\n      with this operation, since it is always successful and the socket\n      is identified by its socket number.  This operation is valid at\n      any time, and with one exception, noted below, is always completed\n      immediately.\n\n      The possible key sequences are as follows:\n\n            DISPLAY (Q RETURN...)...\n            DISPLAY (Q?)...\n            DISPLAY RETURN...\n\n      where\n\n            Q is the socket number of the local socket whose status is\n            to be displayed.\n\n      Successive RETURN'S will display the status of local sockets with\n      successively higher socket numbers, and once DISPLAY has been\n      pushed, it need not be pushed for subsequent occurrences of Q.\n\n      If Q is followed by a '?', processing at the terminal will be\n      suspended until the socket is not in the closed state, at which\n      time the status will be displayed.  If the socket is not closed at\n      the time the '?' is pushed, response is as if the '?' were a\n      RETURN.\n\n      If DISPLAY is followed immediately by a RETURN, the status of all\n      non-closed sockets owned by the terminal is displayed, each\n      preceded by its associated completion code variable.  If this\n      information is more than will fit on one tube, successive RETURN'S\n      will display the remainder of the information.\n\n\n\n\n\n\n\n\nKrilanovich                                                     [Page 9]\n\f\nRFC 121                Network On-Line Operators              April 1971\n\n\n      The status has the following format:\n\n            'lclno' 'mnem' 'fgnsite' 'fgnno' 'deficit'\n\n      where\n\n            'lclno' is the socket number of the local socket.\n            'mnem' is a mnemonic of up to eight characters for the\n               status.\n            'fgnsite' is the site number of the foreign socket, or\n               blank.\n            'fgnno' is the socket number of the foreign socket, or\n               blank.\n            'deficit' is the send/receive deficit in the form\n               'bytes.bits', or blank.\n\n      Following are the possible mnemonics, together with their\n      interpretations:\n\n         'MNEM'                               MEANING\n         ______                               _______\n\n         OPEN           A connection is fully established.\n                        No SEND/RECEIVE operation is in progress.\n                        'fgnsite' and 'fgnno' are the site number and\n                        the socket number of the connected socket.\n                        'deficit' is the number of bits queued locally\n                        at the socket by the NCP and available to\n                        satisfy a future RECEIVE operation, or awaiting\n                        output as the result of a previous SEND\n                        operation.\n\n         LISTEN         A LISTEN has been issued.\n\n         CONNECT        A CONNECT has been issued. 'fngsite' and 'fgnno'\n                        are the site and socket numbers of the foreign\n                        socket.\n\n         DECISION       A LISTEN has been completed. 'fgnsite' and\n                        'fgnno' are the site and socket numbers of the\n                        calling socket.\n\n         CALL(S)        One or more calls have been received for the\n                        local socket.  No LISTEN or CONNECT has been\n                        issued.\n\n         I/O            A connection is fully established.  A\n                        SEND/RECEIVE operation is in progress. 'fgnsite'\n\n\n\nKrilanovich                                                    [Page 10]\n\f\nRFC 121                Network On-Line Operators              April 1971\n\n\n                        and 'fgnno' are the site and socket numbers of\n                        the connected socket. 'deficit' is the number of\n                        bits yet to be sent or received.\n\n         CLOSED         The socket is in the closed state.\n\n         \u003c--DRAIN       The foreign socket is attempting to close the\n                        connection.  The NCP has data yet to be read by\n                        the local socket. 'fgnsite' and 'fgnno' are the\n                        site and socket numbers of the connected socket.\n                        'deficit' is the number of bits yet to be\n                        received.\n\n         DRAINED        The foreign socket is attempting to close the\n                        connection.  The NCP is awaiting arrival at the\n                        foreign site of data currently in transit.\n                        'fgnsite' and 'fgnno' are the site and socket\n                        numbers of the connected socket.\n\n         CLOSING        The local socket has issued a CLOSE.  The NCP is\n                        in the process of returning  the local socket to\n                        the closed state. 'fgnsite' and 'fgnno' are the\n                        site and socket numbers of the connected socket.\n\n         DRAIN--\u003e       The local socket has issued a CLOSE.  The NCP is\n                        completing the last SEND operation before\n                        returning the local socket to the closed state.\n                        'fgnsite' and 'fgnno' are the site and socket\n                        numbers of the connected socket. 'deficit' is\n                        the number of bits the NCP has yet to transmit.\n\n   (6) IDENTIFY\n\n      This operation is used to identify a local socket by its\n      completion code variable.  The operation is valid at any time, and\n      is always completed immediately.  Since it is always successful,\n      there are no completion codes for the operation, and the contents\n      of the completion code variable are not changed.\n\n      The key sequence is:\n\n            ID Q...\n\n      where\n\n            Q is the completion code variable associated with the local\n               socket.\n\n\n\n\nKrilanovich                                                    [Page 11]\n\f\nRFC 121                Network On-Line Operators              April 1971\n\n\n      The response is a display of Q, followed by 'IS UNDEFINED' if the\n      socket is in the closed state, or the socket number associated\n      with it if it is not closed.  After ID has been pushed once, it\n      need not be pushed again for subsequent occurrences of Q.\n\n   (7) PURGE\n\n      This operator is used to dissociate all completion code variables\n      from sockets, and to issue a CLOSE to all sockets currently in use\n      at the terminal.  The operation is valid at any time, and is\n      always completed immediately.  Since it is always successful.\n      there are no completion codes for the operation, and the contents\n      of the completion code variables are not changed.\n\n      The key sequence is:\n\n            DEL RETURN\n\n   (8) SIGNAL\n\n      This operation is used to convey a signal to the foreign process.\n      The significance of the signal is completely user-dependent.  The\n      effect is that the next time the foreign socket attempts to\n      initiate a RECEIVE or SEND operation, the operation will be\n      suppressed, and a completion code supplied indicating that a\n      signal had been received.  Processing at the terminal is suspended\n      until the signal has been sent to the foreign NCP.  This operation\n      is valid only when the socket is fully open.\n\n      The key sequence is:\n\n            REFL Q\n\n      where\n\n            Q is the completion code variable associated with the local\n               socket.\n\n      The following completion codes are possible for this operation:\n\n            0, The operation was successful, and the signal has been\n               sent\n            4, The specified completion code variable is not assigned to\n               a socket; the operation was suppressed\n            8, The connection is not fully open;the operation was\n               suppressed\n\n\n\n\n\nKrilanovich                                                    [Page 12]\n\f\nRFC 121                Network On-Line Operators              April 1971\n\n\n      (9) CONVERSATIONAL CONTROLLER\n\n      This operator is intended primarily for use with the Network On-\n      Line Interface, and is used to carry on a 'conversation' with the\n      foreign process.  Any data queued locally for the specified local\n      receive socket is received and displayed as characters.  Any keys\n      pushed will be sent from the specified local send socket.  The\n      user has the option of specifying whether or not upper keyboard\n      buttons are to be sent.  In any case, the buttons ERASE, REPEAT,\n      ENTER, PRED, and RESET, will not be sent, and pushing any of\n      these, except RESET, will cause suspension of data reception until\n      a button other than these four is pushed.  Pushing RESET always\n      terminates the operation.\n\n      The key sequence is as follows:\n\n            ARG [,] [-]Q1[-]Q2\n\n      where\n\n            Q1 is the completion code variable associated with the local\n               send socket.\n            Q2 is the completion code variable associated with the local\n               receive socket.\n\n      If ARG is followed by ',', both upper and lower keyboard buttons\n      will be sent, and the operation will be terminated only by pushing\n      RESET.  If no ',' follows ARG, only lower keyboard buttons will be\n      sent, and the operation is terminated by pushing RESET or any\n      upper keyboard button.  If a '-' precedes Q1, no headers will be\n      sent, and if a '-' precedes Q2, no headers will be received.  In\n      any case, if headers are to be received, the operation is\n      terminated when a trailer is received, and a corresponding trailer\n      is sent if headers are to be sent.\n\n      The completion codes for the send socket are the same as for the\n      SEND operation, and the completion codes for the receive socket\n      are the same as for the RECEIVE operation.  If a non-zero\n      completion code is found, a message is displayed, either 'OUTPUT\n      ERROR' or 'INPUT ERROR', depending on whether the send socket for\n      the receive socket encountered the non-zero completion code, and\n      the operation is terminated.\n\n\n          [ This RFC was put into machine readable form for entry ]\n          [ into the online RFC archives by Gruss Gottfried 01/98 ]\n\n\n\n\n\nKrilanovich                                                    [Page 13]\n\f\n"
}