{
  "series": "Request for Comments",
  "number": "110",
  "howpublished": "RFC 110",
  "publisher": "RFC Editor",
  "doi": "10.17487/RFC0110",
  "url": "https://www.rfc-editor.org/info/rfc110",
  "title": "Conventions for Using an IBM 2741 Terminal as a User Console for Access to Network Server Hosts",
  "pagetotal": "4",
  "year": "1971",
  "month": "mar",
  "body": "\n\n\n\n\n\nNetwork Working Group                                          J. Winett\nRequest for Comments: 110                         MIT Lincoln Laboratory\nNIC: 5809                                                  25 March 1971\n\n    Conventions for Using an IBM 2741 Terminal as a User Console for\n                     Access to Network Server Hosts\n\n   Disclaimer\n\n   This material has not been reviewed for public release and is\n   intended only for use with the ARPA network.  It should not be quoted\n   or cited in any publication not related to the ARPA network.\n\n   TO: NIC\n   FROM: Joel M. Winnet (LL)\n   SUBJECT: Conventions for Using an IBM 2741 Terminal as a User\n   Console for Access to Network Server Hosts\n\n   An IBM terminal can be used to key in 92 different codes.  These\n   include 88 graphics plus the 4 controls SP, BS, HT, and NL.  Each of\n   these have defined ASCII codes except the cent graphic ([1]) and the\n   New Line Control (NL).  When the NL character is keyed, the program\n   receiving the keyboard input can translate this signal into the\n   appropriate line end signal for the host which is being used.  That\n   is, to a NL, CR, or LF code whichever is appropriate.  There are 7\n   other ASCII graphic characters ( {, }, [, ], ^, \\, `) and 31 other\n   ASCII controls which cannot be keyed on a 2741 terminal.  A\n   convention must be established so that all 128 ASCII codes can be\n   keyed from a 2741 terminal.  This requires that one character be\n   chosen as an escape (or prefix) character which,a together with\n   following characters, can be converted into any desired ASCII code.\n   In addition to this escape character, there are three other functions\n   which are usually indicated by the typing of a single character key.\n   These are:\n\n      a) character delete -- to cause this character and the preceding\n         character in the input line to be deleted.\n\n      b) line delete -- to cause this character and all previous\n         characters in the current input line to be deleted.\n\n      c) logical line end -- to cause all characters keyed after the\n         last logical line end character or last NL character up to this\n         character to be considered as one logical line with this\n         character being treated as if the NL key were entered.\n         Characters following the logical line end character up to\n         another logical line end character or a NL character are used\n         for form another input line.\n\n\n\nWinett                                                          [Page 1]\n\f\nRFC 110            Conventions for Using an IBM 2741       25 March 1971\n\n\n   Since characters keyed are normally sent to the Server Host, a method\n   must be defined to allow characters keyed to be interpreted by the\n   user program.  A system escape character can be used for this\n   purpose.  On character at a time systems, the characters keyed\n   between two system escape characters can be interpreted by the user\n   program.  On line at a time systems, characters keyed after the\n   system escape character and up to and including a NL character can be\n   interpreted by the user program.  Lines interpreted by the user\n   program are not sent to the Server Host.\n\n   For those host systems which require use of the INS or INR network\n   control commands, a method must be defined for causing these commands\n   to be sent.  These can be sent on a command to the user program\n   either after keying the system escape character or through the use of\n   the 'attention' button on a 2741 terminal.  This choice will depend\n   on the characteristics of the terminal user's operating system.\n\n   Other commands to the user program might be to:\n\n      a) suppress typeout of received messages\n\n      b) restore typeout of received messages\n\n      c) direct received message to a disk file\n\n      d) direct keyed input to a disk file\n\n      e) abort the user program\n\n   The following characters are recommended for the special functions\n   listed above:\n\n      1. character escape $NOT [1]\n      2. system escape     |\n      3. character delete  @\n      4. line delete      $CENT [1]\n      5. logical linend    #\n\n   For the 7 ASCII graphics not on a 2741 terminal, the following\n   character escape and graphic pairs are recommended:\n\n      $NOT \u003c           to translate to         [\n      $NOT \u003e           to translate to         ]\n      $NOT (           to translate to         {\n      $NOT )           to translate to         }\n      $NOT \"           to translate to         ^\n      $NOT /           to translate to         \\\n      $NOT '           to translate to         `\n\n\n\nWinett                                                          [Page 2]\n\f\nRFC 110            Conventions for Using an IBM 2741       25 March 1971\n\n\n   To permit the special function characters to be keyed, the following\n   character escape and graphic pairs are recommended:\n\n      $NOT -           to translate to        $NOT\n      $NOT :           to translate to         |\n      $NOT ,           to translate to         @\n      $NOT .           to translate to        $CENT\n      $NOT =           to translate to         #\n\n   To key in the ASCII control codes, it is recommended that the\n   character escape followed by two letters be used to specify a control\n   code.  These two letters are derived from the mnemonic name of the\n   ASCII control function and are as follows:\n\n      $NOT AC          to translate to         ACK             X'06'\n      $NOT BE          to translate to         BEL             X'07'\n      $NOT BS          to translate to         BS              X'08'\n      $NOT CA          to translate to         CAN             X'18'\n      $NOT CR          to translate to         CR              X'0D'\n      $NOT D1          to translate to         DC1             X'11'\n      $NOT D2          to translate to         DC2             X'12'\n      $NOT D3          to translate to         DC3             X'13'\n      $NOT D4          to translate to         DC4             X'14'\n      $NOT DE          to translate to         DEL             X'7F'\n      $NOT DL          to translate to         DLE             X'10'\n      $NOT EM          to translate to         EM              X'19'\n      $NOT EN          to translate to         ENQ             X'05'\n      $NOT EO          to translate to         EOT             X'04'\n      $NOT ES          to translate to         ESC             X'1B'\n      $NOT EB          to translate to         ETB             X'17'\n      $NOT EX          to translate to         ETX             X'03'\n      $NOT FF          to translate to         FF              X'0C'\n      $NOT FS          to translate to         FS              X'1C'\n      $NOT GS          to translate to         GS              X'1D'\n      $NOT HT          to translate to         HT              X'09'\n      $NOT LF          to translate to         LF              X'0A'\n      $NOT NA          to translate to         NAK             X'15'\n      $NOT NU          to translate to         NUL             X'00'\n      $NOT RS          to translate to         RS              X'1E'\n      $NOT SI          to translate to         SI              X'0F'\n      $NOT SO          to translate to         SO              X'0E'\n      $NOT SH          to translate to         SOH             X'01'\n      $NOT SP          to translate to         SP              X'20'\n      $NOT ST          to translate to         STX             X'02'\n      $NOT SU          to translate to         SUB             X'1A'\n      $NOT SY          to translate to         SYN             X'16\n      $NOT US          to translate to         US              X'1F'\n      $NOT VT          to translate to         VT              X'0B'\n\n\n\nWinett                                                          [Page 3]\n\f\nRFC 110            Conventions for Using an IBM 2741       25 March 1971\n\n\n   Note that the controls SP, BS, and HT can be specified using the\n   character escape character or directly by keying the appropriate key\n   on a 2741 terminal.\n\nEndnote\n\n   [1] The following identifiers are substituted for graphics not in\n       ASCII:\n\n         $CENT   Cent sign\n         $NOT    Logical NOT (\"bent bar\")\n\n   See the PDF version of this document for graphics that cannot be\n   represented in ASCII format.\n\n\n          [This RFC was put into machine readable form for entry]\n          [into the online RFC archives by Lorrie Shiota, 10/02]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWinett                                                          [Page 4]\n\f\n"
}