{
  "series": "Request for Comments",
  "number": "96",
  "howpublished": "RFC 96",
  "publisher": "RFC Editor",
  "doi": "10.17487/RFC0096",
  "url": "https://www.rfc-editor.org/info/rfc96",
  "title": "An Interactive Network Experiment to Study Modes of Access the Network Information Center",
  "pagetotal": "5",
  "year": "1971",
  "month": "feb",
  "body": "\n\n\n\n\n\nNetwork Working Group                                           NIC 5739\nRequest for Comments: 96                               Richard W. Watson\nCategory: Informational                                          SRI-ARC\n                                                        12 February 1971\n\n\nAn Interactive Network Experiment to Study Modes of Access the Network\nInformation Center\n\n1.   Introduction\n\n     This NWG/RFC outlines the framework for a simple interactive\nexperiment to study modes of access to the Network Information Center\n(NIC). A detailed specification for the initial access conventions to\nthe NIC is contained in NWG/RFC 97, NIC (5740,). The initial online\nservice to be provided by the Network Information Center are oriented\naround the SRI-ARC (ARC) Online System, typewriter version - NLS(T).\nThese services will involve creation, manipulation, searching, and\ndistribution of symbolic material (text initially). The initial Online\nSystem was display oriented and considerable development has gone into\nthe study of features required for a comfortable interface to the user.\nIn preparation for use with the Network Information Center, a typewriter\noriented version has been developed. Assuming good computer response and\na typewriter terminal operating at 30 char/sec, the system provides\npowerful and comfortable to use capabilities for handling structured\ntextual material.\n\n     The question to which the experiment, to be described below,\naddresses itself is to determine how to extend these capabilities\nthrough the network to users at remote sites, possibly operating 10\nchar/sec and higher speed terminals through fairly heavily loaded\nsystems. This experiment will also provide useful information about the\ninteractive characteristics of the network, and guidelines for designers\nof other interactive systems to be used with the network. We propose\nthat this experiment will be conducted with the assistance and\ncooperation of one other site. We estimate that the experiment will\nrequire about three calendar months. In order to minimize the resources\nrequired for the experiment, we will collect meaningful response time\nstatistics that are easy to obtain with presetly existing metering\nfacilities in the SRI and cooperating site systems, and network\nperformance measuring facilities. We will not conduct formal\nproductivity studies with the users of the connection, but will obtain\ntheir subjective impressions on use of the various connection modes. The\nresult will be data indicating the costs and benefits obtained using the\ntypes of access described below. We would expect that this information\nwould be useful to sites in determining how they want to implement\naccess to the NIC and other interactive sites.\n\n\n\n\n                                                                [Page 1]\n\f\nNETWORK WORKING GROUP           RFC #96                         NIC 5739\n\n\nDuring the period of the experiment, other sites will want to access the\nNIC as they come up on the network. We would recommend a simple\napproach, such as described in Section 2b, initially with a possible\nchange later if the experiment indicates improved response and/or human\nfactors coupling can be obtained with one of the other approaches,\nNWG/RFC 97, NIC (5740,) specifies this initial access approach in\ndetail.\n\n2.   Getting Connected to the Network\n\n   2a.   Introduction\n\n        There are three basic approaches to allowing remote sites to\n   connect to the NIC through the network, which we can call User\n   Program Telnet, NLS(T) Front End, Monitor Telnet. Each of these is\n   discussed below. Each approach requires code which will run in the\n   remote host.\n\n        We assume that standard conventions for Telnet programs will be\n   specified by the Network Working Group. In the companion paper\n   (NWG/RFC 97), NIC (5740,)) we include recommended conventions on\n   solving those problems which we are aware exists relative to initial\n   NIC access, although we have tried to specify conventions useful more\n   generally. The NLS(T) Front End Program would interface to the Telnet\n   Program.\n\n        We assume that no matter which approach is taken, the software\n   at the ARC end use the information obtained during the connection\n   process to log-in the remote terminal under a general account and\n   will place the terminal user in the NIC version of NLS, which we will\n   call NLS(NIC) for short. The NLS(NIC) will ask the terminal user for\n   his initials. The remote user then has access to all NIC facilities.\n\n        The initial typewriter oriented system accepts commands of the\n   general form:\n\n   \u003ccommand words\u003e \u003coperand\u003e \u003cdelimiter\u003e ... \u003coperand\u003e \u003cdelimiter\u003e\n\n        The \u003ccommand words\u003e is usually two words, the first to indicate\n   a general operation class, and the second to indicate a general data\n   structure type to be operated on. The \u003coperand\u003es specify specific\n   data entities to be operated upon, or instructions to adjust NLS\n   parameters.\n\n\n\n\n\n\n\n\n                                                                [Page 2]\n\f\nNETWORK WORKING GROUP           RFC #96                         NIC 5739\n\n\n        The system at ARC is full duplex and allows the user to type the\n   first character of the command words and the system immediately echos\n   the remaining characters as feedback and support for the user. Other\n   feedback is echoed where appropriate. The question we need to answer\n   is what changes in this system will be required to suit it to the\n   network and remote site constraints. We now look at problems existing\n   at the remote sites.\n\n        To gain connection to the NIC we assume that the user logs into\n   his local system and calls up a subsystem or cusp. This subsystem or\n   system program, Telnet program will be used to access other sites as\n   well. The remote terminal and its controlling software system can\n   operate in three basic modes as seen by the host subsystems\n\n      Case 1 - Character at a time half duplex\n\n      Case 2 - Character at a time full duplex\n\n      Case 3 - Line at a time half duplex\n\n        Although line at a time is full duplex is a logical possibility,\n   no such approach is in general use and we ignore it in the following\n   discussion.\n\n   In the discussions to follow, in Section 2b, 2c and 2d, we describe\n   the modes of access which we would like to investigate\n   experimentally.  We want to study user reaction with 10 char/sec, 15\n   char/sec, and 30 char/sec devices.\n\n   2b.   User Program Telnet\n\n        Consider the above classes of terminal in turn and the ways the\n   Telnet program might handle communications between them and the NIC.\n   The Telnet program might allow both full and half duplex\n   communication as specified by the user.\n\n      2b1.   Case 1 - Character at a Time Full Duplex\n\n            The simplest approach would be for the Telnet program to\n      take each character received from the terminal (except a special\n      character or character sequence needed to escape back to the\n      terminals host system), convert the code to ASCII and transmit it\n      as a message to NLS(NIC). NLS(NIC) would handle all character\n      echoing and transmit echo messages back to the Telnet for actual\n      transmission to the terminal in the appropriate terminal code.\n      This mode of communication involves full duplex transmission user\n      to user and is probably the severest test of the interactive\n      characteristics of the host-network-host system.\n\n\n\n                                                                [Page 3]\n\f\nNETWORK WORKING GROUP           RFC #96                         NIC 5739\n\n\n            Depending on loading at the remote host, on the network, and\n      at ARC, round trip delay for simple character echoing may be\n      several seconds. Experience in communication between the old ARC\n      940 and a heavily loaded PDP-10 at Utah showed occasional delays\n      on the order of 4 or 5 seconds and longer for single character\n      echoing. Human factors considerations in use of NLS(NIC) indicate\n      that such delays would be frustrating to the user. A more cageful\n      study of this mode of communication should give a base against\n      which to measure the other modes of communication.\n\n      2b2.   Case 2 - Character at a Time Half Duplex\n\n         There are two subcases which we treat identically:\n\n         i) The Telnet program sees a half duplex terminal.\n\n         ii) The Telnet program sees a full duplex terminal, but\n         provides echoing so as to make the terminal half duplex as seen\n         by NIC.\n\n         With the character at a time half duplex case the NIC program\n         will operate in two modes:\n\n         a) short mode\n\n         b) long mode\n\n         In short mode the user will type in the command and receive on\n         his terminal only the characters echoed by his system and the\n         NIC response to the command.\n\n         In long mode. the user will receive feedback from NIC at an\n         appropriate point in the command. We want to see how novice and\n         experienced users feel about working in these two modes, given\n         the delays in the system response.\n\n      2b3.   Case 3 - Line at a Time Half Duplex\n\n         From the point of ciew of the NIC this case is essentially the\n         same as Case 2.  From the point of ciew of the network this\n         case is a more efficient use fo the network as the messages are\n         longer.  This case is also more efficient for the user host\n         system as it will require fewer calls to the Telnet subsystem;\n         response for Case 3 may be better than Case 2.\n\n\n\n\n\n\n\n                                                                [Page 4]\n\f\nNETWORK WORKING GROUP           RFC #96                         NIC 5739\n\n\n   2c.   The NLS(T) Front End\n\n           In this mode of communication, the subsystem which handles\n      communication with the NIC is to perform some of the interactive\n      and other tasks now performed by NLS(T). The type of tasks to be\n      performed are echoing of the characters typed and the additional\n      feedback characters for the full spell out of the command words,\n      parsing of the command string, error handling where appropriate,\n      and the sending of a parsed string as a message to NLS(T). If it\n      should turn out that this mode of communication is the one\n      preferred by sites, we would expect to supply an example version\n      of the Front End program written in some language to serve as a\n      model for implementation. The Network Working Group may want to\n      give further study to a standard language for specifying such\n      programs as indicated in NWG/RFC 51, NIC (4752,).\n\n   2d.   Monitor Telnet\n\n           Much of the response delay in the experiments of Section 2b\n      is expected to result from the fact that the Telnet described\n      there is a user program. We will run the experiments of Section 2b\n      with the appropriate Telnet routines resident as a part of the\n      user host monitor.\n\n\n\n\n          [ This RFC was put into machine readable form for entry ]\n          [ into the online RFC archives by Henrik Johansson 4/97 ]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                                                [Page 5]\n\f\n"
}