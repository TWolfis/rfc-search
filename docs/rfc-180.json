{
  "series": "Request for Comments",
  "number": "180",
  "howpublished": "RFC 180",
  "publisher": "RFC Editor",
  "doi": "10.17487/RFC0180",
  "url": "https://www.rfc-editor.org/info/rfc180",
  "title": "File system questionnaire",
  "pagetotal": "4",
  "year": "1971",
  "month": "jun",
  "body": "\n\n\n\n\n\nNetwork Working Group                                     Alex McKenzie\nRequest for Comments #180                                 BBN\nNIC #7123                                                 25 June 1971\nCategories: D.7, G.3\nUpdates: none\nObsoletes: none\n\n                       File System Questionnaire\n\nAs noted in RFC #164 (page 35), a subcommittee of the NWG, under the\nchairmanship of Abhay Bhushan, is currently generating proposals for a\n\"data transfer protocol\" and a \"file transfer protocol\".\n\nThe subcommittee has decided that the file transfer protocol should\nprovide standard methods for requesting the transfer of a file but\nshould not, at this time, attempt to standardize file naming\nconventions, access control conventions, and the like.  Thus a user\nwho is, for example, trying to store a file on a remote Host will be\nrequired to use the file naming conventions appropriate to the remote\nHost.\n\nGiven the above point of view, it becomes imperative for users to have\nsome source of information about Host file conventions.  Such\ninformation, once compiled, will also serve as input to possible\nstandardization efforts of the file transfer subcommittee.  For this\nreason Abhay has asked me to solicit information on file conventions\nfrom the Host organizations.  What follows is a description of the\nkinds of information of interest.  I am well aware of the fact that\nmany of you are tired of writing system descriptions; Xerox copies of\nshort sections of your local documentation are fine if the result is\ncomplete and comprehensible.  (In the case that your Host will never\npermit network use of your file system, a note to that effect would be\nsufficient.)\n\n                         Information Requested\n\n1.  File naming conventions - We (loosely) define a pathname to be\n    the data string which must be input to the file system by a user\n    (a network user if your system makes a distinction between local\n    and network users) in order to identify a file.  We are interested\n    in syntax, semantics, and defaults.  Typical components of pathnames\n    are:\n\n         - \"device\" fields\n         - user names\n         - version numbers\n         - index names\n         - punctuation marks\n\n\n\n                                                                [Page 1]\n\f\nCommon types of defaults are:\n\n         - device is disk\n         - version number is largest in system\n\n    For hierarchical file structures, descriptions may be fairly\n    complex, but with lots of defaults; in such cases an illustration\n    of a \"normal\" pathname might be helpful.\n\n2.  Access control mechanisms - Access control mechanisms range from\n    simply knowledge of a file's pathname to elaborate hierarchies\n    of group-project-task-username membership with passwords and\n    separate controls for reading and writing.  There are two\n    aspects of the access control mechanism which are of interest:\n\n    a.  A description of what inputs the user should give the file\n        system, both at the time of file creation and at the time of\n        retrieval, in order to define the permitted modes of access\n        and to gain access.  What are the syntax and semantics of\n        these inputs?\n\n    b.  A description of the ways in which the access control\n        mechanism is designed to help (or hinder) the sharing of\n        files.  For example, may two users \"simultaniously\" update a\n        given file?  May the creator of the file define a set of\n        authorized users to the file system (and how)?  Is it possible\n        to define different access controls for various subunits of a\n        given file?\n\n3.  Directories - Many systems maintain file directories which are\n    designed to be helpful to the user.  A directory might, for\n    example, provide a list of all files created by a particular\n    individual, along with some information regarding file size,\n    file structure, access controls, etc.  In general, such systems\n    allow the user to input a pathname and retrieve the directory to\n    which that pathname refers.  Aspects of the directory structure of\n    interest are:\n\n    a.  What are the syntax and semantics of a directory pathname?\n\n    b.  What use is a directory, i.e., what type of information\n        does the directory contain?\n\n    c.  What access controls are used for access to the directories?\n        For example, must a user supply a password in order to\n        retrieve a directory, and is this password typically the same\n        as the password he would use to retrieve a file listed in that\n        directory.\n\n\n\n                                                                [Page 2]\n\f\n4.  Commands and functions of the file system - A general description\n    of what the file system is designed to do would be useful.  For\n    example, the system might simply accept an entire file and store\n    it sequentially on a tape; with the only mode of retrieval being\n    to retrieve the entire file.  On the other hand, the system might\n    provide the ability to access any \"subfield\" with a unique\n    pathname.  Perhaps there is the ability to restructure a file,\n    change the access control, delete all the fields associated with a\n    directory, etc.  We realize that this aspect of the file system\n    begins to overlap the area of \"data management\", which is the\n    responsibility of another subcommittee; therefore, use your\n    judgement as to what functions are an intrinsic aspect of the\n    file-handling system and which are aspects of \"data-management\".\n\n5.  Internal representation and I/O modes - The remote user of a file\n    system will normally be interested in internal representation of\n    data only insofar as that representation of data is reflected in\n    the I/O interface between the file system and the network.  For\n    example, if all of the file system's I/O is in 8-bit ASCII\n    characters, then the user is unlikely to care if they are stored\n    in ASCII, EBCDIC, or some other form.  However, if an alternate\n    transmission mode is available it may be useful; for example,\n    two PDP-10's, both of which store 5 characters and one \"filler\"\n    bit per word, might find it advantageous to transfer information\n    in this mode rather than converting between internal representation\n    and 8-bit ASCII for each character.  Other information on internal\n    representation which would be of interest to the user might\n    include (if applicable):\n\n         - range of numeric data permitted\n         - maximum text string lengths\n         - whether the user must indicate \"record\" boundaries on input\n         - what \"logical structure\" information the user may specify\n           for a new file, and what he must specify\n         - whether the user must specify the file size before beginning\n           input, and how he does it\n\n6.  Undoubtedly, there will be aspects of each file system which don't\n    fit neatly into the categories above, but which users will find\n    important or essantial in using the system.  These should be\n    identified and described if possible.\n\n    Please address responses to this questionnaire to:\n\n               Alex McKenzie\n               Bolt Beranek and Newman Inc.\n               50 Moulton Street\n               Cambridge, Massachusetts 02138\n\n\n\n                                                                [Page 3]\n\f\nIf the questions above are confusing, don't hesitate to call me for\nclarification at (617) 491-1850 ext. 441.  I will issue another RFC\nsummarizing the responses after I have received a significant number\nof them.\n\n\n       [ This RFC was put into machine readable form for entry ]\n         [ into the online RFC archives by Stefan Hinker 6/97 ]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                                                [Page 4]\n\f\n"
}