{
  "series": "Request for Comments",
  "number": "386",
  "howpublished": "RFC 386",
  "publisher": "RFC Editor",
  "doi": "10.17487/RFC0386",
  "url": "https://www.rfc-editor.org/info/rfc386",
  "title": "Letter to TIP users-2",
  "pagetotal": "5",
  "year": "1972",
  "month": "aug",
  "body": "\n\n\n\n\n\nNetwork Working Group                    Bernard P. Cosell\nRequest For Comments # 386               David C. Walden\nNIC # 11358                              Bolt Beranek and Newman Inc.\nCategories:                              August 16, 1972\nUpdates:\nObsoletes:\n\n\n                        LETTER TO TIP USERS -- 2\n\n\n     This is the second letter to TIP users.  The first was RFC #365.\nThere will be more letters to TIP users as they seem to us to be a\ngood way to keep you informed about what's going on.  We suggest you\nkeep these letters with your TIP User's Guide (TUG) as we will use the\nletters to provide documentation of TIP system changes which are made\nbefore we can get TUG revisions printed and distributed. (It is almost\ninevitable that the TUG revisions follow actual system changes.\nFurther- more, these letters will allow us more discussion of new\ncommands than in TUG.)\n\n     Some of the changes we will be making to the TIP have been\nsuggested by TIP users. We won't bother with acknowledg- ments.\n\n     The @PROTOCOL TO LOGIN and @PROTOCOL TO CLOSE BOTH commands will\nbe removed very soon. We presume no one uses these commands any more\nsince they have been replaced by @LOGIN and @CLOSE.\n\n     As we warned in TIP Letter 1, the @LOGIN command will be given a\nparameter soon, the Host number up to now given with the @HOST\ncommand.  At the same time, @HOST will be changed so it does a\nsimultaneous @RECEIVE FROM HOST and @SEND TO HOST.  Presently, @HOST\nis the same as @SEND TO HOST.\n\n     Several changes will be made to the @TRANSMIT commands very soon.\nFirst @TRANSMIT ON NO CHARACTERS and @TRANSMIT ON EVERY CHARACTER will\nbe removed. Their functions will be covered by the other @TRANSMIT\ncommands. @TRANSMIT NOW will continue to function as at present; it\nwill cause the one message presently being accumulated to be sent as\nsoon as possible.  @TRANSMIT ON LINEFEED and @TRANSMIT ON MESSAGE-END\nwill continue to cause the message being accumulated to be sent on\nlinefeed and CONTROL-S. However, they will additionally cause the\nmessage being accumulated to be sent when the character buffer is\nalmost full. Thus, it will no longer be necessary to give a @TRANSMIT\nEVERY \u003cbig number\u003e with @TRANSMIT ON LINEFEED and @TRANSMIT ON\nMESSAGE-END.  @TRANSMIT EVERY # will continue to cause the message\nbeing accumulated to be sent as near as possible to every #th\ncharacter.  However, values of # which are bigger than the size of the\n\n\n\n                                                                [Page 1]\n\f\nRFC # 386                                                     NIC #11358\n\n\ninput buffer will cause transmission when the buffer is almost full;\nand a value of 0 for # will reset the terminal to its initial setting\n-- TRANSMIT-ON-LINEFEED mode off, TRANSMIT ON MESSAGE- END mode off,\nand transmitting every character. Thus, TRANSMIT EVERY 0 has the\neffect of the removed @TRANSMIT ON NO CHARACTER command, and @TRANSMIT\nEVERY 1 has the effect of the removed @TRANSMIT ON EVERY CHARACTER\ncommand.\n\n     There are two ways outside of letters and the telephone to\ncommunicate your suggestions and complaints to us: log into BBN-TENEX\nand SNDMSG to WALDEN or use the NIC Journal system to send a message\nto DCW3. Dave likes letters best, incidentally.\n\n     We are going to remove the \"NEWS\" herald from the TIP's HELLO\nmessage. The problem is that we don't know when everybody has read the\nlatest news so that we can turn off the herald.  Therefore, we can't\nturn it off. Therefore, it is useless.  Check the NEWS every time you\nuse the TIP. If once the news begins printing you discover you have\nalready seen it, you can stop it by typing @CLOSE _LF_ (on a 2741 hit\n\"attention\" first).\n\n     A new TIP message will have been added by the time you get this\nletter, the message TIP GOING DOWN. This message will be printed on\nevery TIP terminal shortly before the TIP is taken down for preventive\nmaintenance, new software releases, etc. (see RFC #381 for further\ndiscussion of this topic). When this message is printed, all TIP users\nshould cleanly stop what they are doing with a Host. Eventually, this\nmessage will include information on how long until the TIP will go\ndown, for how long it will be down, and why.\n\n     While we are on the subject of TIP messages, let us mention that\nwe will be adding a number of new messages which we believe will\nremove some of the present confusion about what the TIP is doing.\nUnfortunately, we don't have the space to store the message text\nstrings, so, we will use numbers for the new messages. The format of\nthese messages will probably be something like M46 for message 46.\nPerhaps when the TIPs get more core we can replace the number-messages\nby text-messages.\n\n     We are thinking of changing all the TIP LOGIN commands to OPEN\ncommands which would be more opposite to the CLOSE commands and not so\nliable to confusion with Host LOGIN.\n\n     On page 12 of the TUG is a description of how Hosts can send\ncommands to a TIP terminal. Be warned, if you decide to use this\nfacility, that we are changing the TIP command language slowly and we\nwill not be constrained in these changes by the fact that some Hosts\nare sending TIP commands.  Therefore, if a Host is going to send a\n\n\n\n                                                                [Page 2]\n\f\nRFC # 386                                                     NIC #11358\n\n\ncommand to a TIP it ought to implement this in a manner that can be\nchanged easily.\n\n     Some TIP users have been seeing the following problem.  They are\ncommunicating with a Host when suddenly they get the message DEAD. If\nthey try to LOGIN to the Host again they do not get the DEAD message,\nbut the Host refuses to allow the LOGIN by either doing nothing,\nclosing, or refusing. The problem was that occasionally the network\npartitioned briefly; for instance, one of the two cross-country lines\nwas down and the other got flaky for a few seconds. If, during a\nperiod when the network is partitioned, a TIP user sends a message to\na Host which cannot be reached, the TIP types DEAD and closes the\nconnection to the Host. The Host, on the other hand, may not have been\ntrying to send to the TIP when the network partitioned; in that case\nit might not have noticed that the network partitioned and therefore\nstill thinks it has an open connection to the TIP.  When the TIP then\ntries to re-LOGIN to the Host, the Host refuses because it already has\nan open connection with that particular TIP device.\n\n     Now that we have three independent cross-country paths we do not\nexpect this problem to occur often, but if it does we see no\nshort-term solution. We can't just let a CLOSE reset the connection\nsince the user's immediately preceeding LOGIN destroyed the Host\nsupplied socket numbers. One can get out of this state by executing\nthe Host/Host protocol command from the TIP which resets _all_ TIP\nusers at the given TIP talking to the given Host; but this is a little\ngross. What is maybe needed is a Host/Host protocol command to reset\nthe Host's connections with a particular user (TIP) socket; we will\ntry to understand the ramifications of such a command and perhaps\nundertake promotion of a Host/Host protocol change. In the meantime,\nfrequently when the above problem happens some other TIP terminal can\nstill LOGIN to the Host and then halt the hung terminal's job from the\nHost side.  If it is not possible to get through on another\nconnection, a telephone call to the Host, asking them to log the job\nout, may be necessary. Or, if there is really no other user talking to\nthe particular Host, the reset command can be executed -- this command\nis not documented but we will tell a responsible person at each TIP\nsite how to execute the command.\n\n     There is a problem related to the above problem which some TIP\nusers have seen. Occasionally, an IMP crashes somewhere in the network\nand takes a packet of a message along with it.  Eventually, the source\nof the message gets an incomplete transmission message from the\nnetwork. When the TIP gets this message, it closes the connection and\ncalls the destination dead. This is what most other Hosts do also, we\nunderstand. A more reasonable thing to do might be to retransmit the\nmessage or to tell the user and then let him continue; we would like\nto do one of these. But before retransmission or letting the user\n\n\n\n                                                                [Page 3]\n\f\nRFC # 386                                                     NIC #11358\n\n\ncontinue, the TIP and Host's allocate counters must be resynchronized.\nHowever, there is no Host/Host protocol way to synchronize simple\nenough for the TIP to use. What may be needed is a simple Host/Host\nprotocol reset allocate command. We will try to understand this issue\nand, again, perhaps undertake promotion of a Host/Host protocol\nchange.\n\n     The above two problems explain part of the \"lost allocates\" but\nnot all. We have now instrumented the TIP program in a manner which we\nhope will help us find the rest of the lost allocate problem soon.\n\n     The TIP's logger (opener?) has been causing users some problems.\nUpon examination, the problems were seen to originate from basic\ndesign assumptions within the logger which we are working on changing.\nIn the short term, however, we think that a discussion of what the\nlogger is doing and how it works will alleviate some of the grief.\n\n     For the user, opening proceeds in three phases. In the first, the\nuser is queued up waiting to \"get\" the TIP's logger.  In the second,\nthe user has gotten the TIP's logger and is beginning the login\nsequence. In the third, the user has completed the login sequence and\nis waiting for the Host to open up the actual data connections.  Many\nof the problems stem from the fact that _only_one_user_ may be\nproceeding through phase 2 at a time.  Hence the need for the queue of\nphase 1.  Any single user may tie up phase 2 for at most about 1\nminute.  This is the canonical \"timeout\" in the logger.  Notice that\nthis does not include the times in either the first or third phases.\nThus, the actual delay before you get a \"timeout\" after you type @L\ncan be 1 minute, 2 minutes, 3 minutes...depending on how many other\npeople are having difficulty logging in at the same time.  Abort Login\n(@A L) does three different things depending on which phase of logging\nin the user is in.  In phase 2 it resets the timer to be close to\noverflowing so that it is responded to with a \"timeout\" shortly after\nthe command is given.  In phase 3 it does nothing at all, and in phase\n1 it merely removes the user (silently) from the logging queue.\n\n     We will, medium term, have the TIP type out something like \"YOUR\nLOGGER\" when you get off the queue and the logger begins trying to\nopen your connections.  This will at least alleviate user uncertainty\nas to whether he is in phase 1 or phase 2.  Long term, we will\nprobably make the logging process reentrant so that users will not\ninteract with one another quite so destructively.  In the short term,\nhere is a small \"cookbook\" on how to undo a login that seems to not be\nworking.\n\n     When you have waited as long as you would like to for the login\nto take place, you may type \"@A L\".  If the TIP responds with\n\"TIMEOUT\" in a few second and has not typed T OPEN or R OPEN, then you\n\n\n\n                                                                [Page 4]\n\f\nRFC # 386                                                     NIC #11358\n\n\nare aborted and may attempt logging in again.  If it types \"TIMEOUT\"\nbut has typed out T OPEN or R OPEN then you should type @C and wait\nfor that to be responded to (You _must_ wait.) If you get no response\nat all to @A L, and the TIP has typed that one or the other connection\nis open, you should type @C and wait, as above.  Finally, if the TIP\nmakes no response and has not opened any connection, than you are free\nto proceed.\n\n     From now on the name of the DEVICE CODE EXECUPORT command will be\nDEVICE CODE EXTRA-PADDING, since there are a number of other terminals\nwhich require this feature.  The latest to be added to the list is the\nDATAPOINT 3300.\n\n\n\n\n       [ This RFC was put into machine readable form for entry ]\n       [ into the online RFC archives by BBN Corp. under the   ]\n       [ direction of Alex McKenzie.                      1/97 ]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                                                [Page 5]\n\f\n"
}