{
  "series": "Request for Comments",
  "number": "50",
  "howpublished": "RFC 50",
  "publisher": "RFC Editor",
  "doi": "10.17487/RFC0050",
  "url": "https://www.rfc-editor.org/info/rfc50",
  "title": "Comments on the Meyer Proposal",
  "pagetotal": "2",
  "year": "1970",
  "month": "apr",
  "day": "1",
  "body": "\n\n\n\n\n\n                                                  E. Harslen\n                                                  J. Heafner\nNetwork Working Group                             RANL\nRequest for Comments:    50                       4/30/70\n\n\n                     Comments on the Meyer Proposal\n                     ------------------------------\n\nWe find the Meyer proposal (Note #46) to be the most acceptable\nto dare, for exactly the reasons that he enumerates; viz., simple,\nsuffices for most planned uses of the Network, easy to implement,\ncan be extended.  It does not encompass everything that has been\nsuggested recently, however, we do agree with the items that are\nproposed and we feel that the missing features are probably not\nworth doing battle over and thus delaying the specification.\n\nWe make the following comments on the seven issues rasied in\nNote #47.\n\n   1)  We agree with Steve that dynamic reconnection will later\n       be required for more sophisticated uses of the Network.\n       We also agree with the Project MAC people that it\n       unnecessary initially.  A better job can be done of dynamic\n       reconnection given some Network experience and the specific\n       needs of its use.\n\n   2)  INT is easy to implement and serves a useful purpose.\n\n   3)  We favor including a sub-field for instance tag identifier.\n       We see the need for both cases; a) where multiple processes\n       should appear indistinguishable, and b) where a given\n       user owning multiple processes must distinguish among\n       them.  Those program parts that should not distinguish\n       among processes should simply ignore the instance tag.\n       Tom's suggestion to use part of the user number sub-field\n       merely reduces the combined length of sub-fields from 32\n       bits to 24 bits; the problem remains.\n\n   4)  We disagree with both Steve and MAC in that no special\n       structure should be imposed on the data transmitted.  We\n       prefer the \"message data type\" mentioned by E. I. Ancona,\n       Note #42, page 1.  An example of its use was cited in\n       Note #39, page 2, transmit vs broadcast.\n\n\n\n\n\n\n\n                                                                [Page 1]\n\f\n       With regard to a standard character set, we strongly\n       support adopting one in the beginning, and in particular\n       ASCII.  We have observed that most sites have previously\n       suggested ASCII.  Is there anyone who objects?\n\n   5)  Word boundary alignment is more attractive than double\n       padding.\n\n   6)  Steve's suggestion of short-term queueing of RFCs is\n       acceptable as an option.\n\n   7)  We support the UCC in Note #46 for three principle reasons:\n\n       a)  In general the user should not know the remote socket\n           code of the process to whom he wishes to communicate.\n\n       b)  The additional duplex connection can provide some\n           superfisory control over process behavior, possibly\n           in conjunction with the interrupt procedure.\n\n       c)  Most of the other proposed methods demand queueing.\n\n      We think there must be a standard UCC, yet we encourage\n      parallel experimental UCCs.\n\nWe make two additional comments on Note #46 that were not reiterated\nin Note #47.\n\nBLK and RSM are more straightforward than previous suggestions and\nthey do not deny multiplexing over a given link.  With regard to\nthe use of links, we refer to an example given by Bob Kahn where\nan intermediate IMP goes down and eats some's RFNM.  This\nshould not necessitate reconnection.\n\nIn Note #46, page 6, the statement that the UCC has the ability\nto close connections to a dead process is installation dependent.\nIn our particular case the NCP is notified directly of process\nfailure due to the particular software interface through which all\nprocessea, including NCP, must communicate.\n\n\nJFH:hs\n\n       [ This RFC was put into machine readable form for entry ]\n          [ into the online RFC archives by Gary Okada 7/97 ]\n\n\n\n\n\n\n                                                                [Page 2]\n\f\n"
}