{
  "series": "Request for Comments",
  "number": "117",
  "howpublished": "RFC 117",
  "publisher": "RFC Editor",
  "doi": "10.17487/RFC0117",
  "url": "https://www.rfc-editor.org/info/rfc117",
  "title": "Some comments on the official protocol",
  "pagetotal": "5",
  "year": "1971",
  "month": "apr",
  "day": "1",
  "body": "\n\n\n\n\n\nNetwork Working Group                                          J. Wong\nRequest for Comments: 117                                         UCLA\nNIC #5826                                                 7 April 1971\n\n\n                 Some Comments on the Official Protocol\n\n               [Categories B.1, C.1, C.2, C.3, C.4, C.5]\n\n\n Document No. 1 and NWG/RFC No. 107 gave a very detailed description of\nconnection establishment, connection termination and flow control over\nthe Network.  Throughout the implementation of the NCP it was\ndiscovered that the handling of ERR control commands, messages of\ntypes other than 0 (regular), 4 (nop), and 5 (rfnm), and messages with\nthe From-imp bit on are not well discussed so that problems arise when\nthey occur.\n\nThe Protocol is not complete if the above situations are not handled\nclearly, and the Host-Host Protocol Glitch Cleaning Committee should\ntake this into consideration.  In this document, experience with these\nunfavorable situations and suggestions for handling are given:\n\n\n1.  ERR Control Commands\n\nIn Document No. 1, the following error conditions are described:\n\n     a.  Illegal Op. code.\n     b.  End of message encountered before all expected parameters.\n     c.  Bad socket polarity within commands.\n     d.  Link number not in the range of 0 \u003c= L \u003c 32.\n     e.  A request (other than RTS/STR) on a non-existent socket.\n     f.  A request (ALL, GVB, RET, INR, INS) on a non-existent link\n         number.\n     g.  Transmit over non-existent link number.\n\nOther error conditions are:\n\n     h.  A request (GVB, RET, INR, INS) on an existent link, but\n         connection is not established.\n\n\n\n\n\n\n\n\n\n\n                                                                [Page 1]\n\f\n     i.  Transmit over an existent link, but connection is not\n         established.\n     j.  ALL or GVB on a send connection.\n     k.  RET on a receive connection.\n     l.  An attempt to send more than the allocated number of bits or\n         messages.\n     m.  ECO, ERP, ERR commands do not have the defined number of bits\n        of data.\n\nIn Document No. 1, each site is supposed to document the information\non their ERR command.  No one has done that so far, and the main\nreason is we are not sure of what information is important.  In\nNWG/RFC No. 107, the text portion of the ERR Commands is decided to\nhave a fixed length of 80 bits because 80 bits is long enough to hold\nthe longest non-ERR command.  In some of the above error conditions,\nmore information than the command itself is desirable.  It was noted\nthat these error conditions arise very often in the experimental stage\nof the NCP.  If every NCP is operating properly, none of them should\never occur.  The ERR commands are therefore, an excellent debugging\ntool for the protocol.  So it is desirable to define a set of possible\nerror conditions, and for each condition, define a set of arguments in\nthe corresponding ERR command so that enough information is given to\ntell what's wrong.  The suggested arguments for each situation (a - m)\nare listed below:\n\n     a.  1.  Op. code in error.\n         2.  Part of message following op. code (A maximum of 72\n             bits).\n\n     b, c, d, e, f.\n         1.  The command in error.\n\n     g.  1.  Link number,\n         2.  Beginning of message (A maximum of 72 bits),\n\n     h.  1.  Command in error.\n         2.  Socket numbers for the connection.\n         3.  Status of the connection.\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                                                [Page 2]\n\f\n     i.  1.  Link number,\n         2.  Beginning of message (A maximum of 72 bits),\n         3.  Socket numbers for the connection.\n         4.  Status of the connection.\n\n     j, k.\n         1.  Command in error.\n         2.  Socket numbers for the connection.\n\n     l.  1.  Link number.\n         2.  Beginning of message (A maximum of 72 bits).\n         3.  Number of bits sent.\n         4.  Number of bits allocated.\n         5.  Number of messages allocated.\n\n     m.  1.  The Command in error.\n\nEach of the ERR commands should have a special error code (8 bits) to\ntell the error type, an 80-bits field to store the command in error,\nand additional fields for socket numbers and other information.\n\n2.  Imp-to-host messages of types other than 0, 4, and 5.\n\nFrom the BBN report 1822, the following message types will cause\ndifficulty in the implementation of the Protocol.\n\n     a.  Type 2 - Imp going down.\n     b.  Type 7 - Destination host or imp dead.\n     c.  Type 9 - Incomplete transmission.\n\nIt was discovered that on sending a message to a site whose imp or\nhost is not running, a Type 7 or Type 9 message is returned.  This\ncan happen in two situations:\n\n     a.  The foreign host or imp is not up at all.\n     b.  Some connections have been established, and the foreign host\n         or imp goes down.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                                                [Page 3]\n\f\nThe first situation does not cause much problem because the NCP has no\nentry in its table corresponding to this site.\n\nThe second situation is more complicated, because if the table entries\nfor the connections to the dead host are not cleared, by the time this\nhost comes up again, the table entries still exist and the information\nwill be very misleading.  One suggestion to solve this problem is:\n\n     a.  Whenever a NCP comes up, it send a RESET Control Command to\n         every other site.\n     b.  Associated with each site there is a bit called the up-bit.\n         If a RESET-reply command is received from some site, the\n         corresponding up-bit is set to 1.  Race condition can be\n         avoided by ignoring all messages from sites which have not\n         returned the RESET-reply command.\n     c.  Messages can only be sent to sites with the up-bit on.\n     d.  If a RESET control command is received, the Table entries\n         corresponding to the site are cleared, a RESET-reply is\n         immediately returned, and the up-bit for the site is set.\n     e.  The up-bit is reset to 0 when a Type 7 or Type 9 message is\n         received from a particular site.\n\nThe above solution will handle the Type 2 messages also.  When a host\nreceives a Type 2 message, there is no way for it to tell the other\nNCP's that its imp is going down.  Subsequent messages to this host\nwill return a Type 7 or 9 message.  The solution above will then come\ninto effect.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                                                [Page 4]\n\f\nWith the introduction of the RESET and RESET-reply Control command,\nthe ECO and ERP control command are no longer important and should be\nremoved.\n\n3.  Messages with the From-imp bit on.\n\nThese kinds of messages are not discussed at all.  Some statistical\nmeasurements have been made on messages with the From-imp bit on.  We\nshould classify what these messages represent.\n\n\n       [ This RFC was put into machine readable form for entry ]\n         [ into the online RFC archives by Randy Dunlap 4/97]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                                                [Page 5]\n\f\n"
}