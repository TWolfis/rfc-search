{
  "series": "Request for Comments",
  "number": "401",
  "howpublished": "RFC 401",
  "publisher": "RFC Editor",
  "doi": "10.17487/RFC0401",
  "url": "https://www.rfc-editor.org/info/rfc401",
  "title": "Conversion of NGP-0 Coordinates to Device Specific Coordinates",
  "pagetotal": "2",
  "year": "1972",
  "month": "oct",
  "body": "\n\n\n\n\n\nNetwork Working Group                                 Jim Hansen\nRequest for Comment #401                              Center for Advanced\nNIC #11923                                              Computation\nCategory:  D.6                                        University of Illinois\nUpdates:  RFC #387                                    October 23, 1972\nObsoletes: None\n\n\n               Conversion of NGP-0 Coordinates to Device\n               -----------------------------------------\n                          Specific Coordinates\n                          --------------------\n\nConversion of NGP-0 coordinates to floating point PDP-10 coordinates\nwas discussed in RFC #387.  In general, however, it is undesirable to\nconvert NGP coordinates to floating point coordinates because real\ndevices require integer addressing.  To this end, a means is described\nto convert NGP coordi- nates to integer coordinates in the range zero\nto M, where M is the maximum address of the device screen on a machine\nusing 2's complement arithmetic.  It would not, however, be difficult\nto modify this algorithm to operate on machines using one's complement\nor sign-magnitude arithmetic.\n\nFirst consider the NGP coordinate format:\n\n                   +--+-----------+\n                   |  |   n       |\n                   +--+-----------+\n                    s ^  FRACTION\n                    i\n                    g\n                    n\n\nWhere the sign occupies the most significant bit of the coordinate\nfollowed by bits of numerical information (initial implementation of\nNGP requires N=15).  Negative numbers are represented by 2's\ncomplement.  Conversion to device coordinates is accomplished by:\n\n                    D = S * f + S\n\nWhere D =\u003einteger device coordinate\n      S =\u003escaling factor (typically M/2)\n      f =\u003eNGP fractional coordinate\n\nLet us rewrite this as:\n\n                            n     n\n                    D = S*(2 *f)/2 +S\n\n\n\n                                                                [Page 1]\n\f\nNow factor S into two terms:\n\n                            I\n                    S= Q * 2\n\nWhere Q is an odd integer and I is an integer.\n\nWhen:                        I   n     n\n                    D = Q * 2 *(2 *f)/2  +S\n\n                             I-n   n\n                      = Q * 2   *(2 *f)  +S\n             n\nThe factor (2 *f) is represented in 2's complement form simply by\nextending the sign bit of f into the upper portion of the computer\nword, If Q = 1 (as it would be with many devices), it can be ignored.\nIf Q \u003e\u003c 1, we may console ourselves that an integer multiply is faster\non most machines than a floating point multiply.  In fact, on a\nPDP-10, this multiply can usually be performed with no access to\nmemory since Q is usually small.\n\n                          I-n\nWe are now left with the 2    factor.  This can be accomplished with an\narithmetic shift left by (I-n) or an arithmetic shift right by (n-I)\nas is appropriate.  The offset factor, S, may now be added using an\ninteger add.\n\nThe procedure for converting NGP coordinates to integer device\ncoordinates is then:\n\n               1.   move coordinate to a register and extend sign\n               2.   integer multiply by Q (if necessary)\n               3.   arithmetic shift left by (I-n)\n               4.   integer add S\n\n\nThis procedure would generally be much faster than:\n\n               1.   move coordinate to register and extend sign\n               2.   float fractional coordinate\n               3.   floating point multiply\n               4.   floating point add\n               5.   conversion to fixed point\n\n       [ This RFC was put into machine readable form for entry ]\n       [ into the online RFC archives by BBN Corp. under the   ]\n       [ direction of Alex McKenzie.                      1/97 ]\n\n\n\n\n                                                                [Page 2]\n\f\n"
}